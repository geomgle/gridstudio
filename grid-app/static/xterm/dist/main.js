/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./xterm.js/xterm */ \"./xterm.js/xterm.js\");\n/* harmony import */ var _xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _xterm_js_addons_attach_attach__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xterm.js/addons/attach/attach */ \"./xterm.js/addons/attach/attach.js\");\n/* harmony import */ var _xterm_js_addons_fit_fit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xterm.js/addons/fit/fit */ \"./xterm.js/addons/fit/fit.js\");\n/* harmony import */ var _xterm_js_addons_fullscreen_fullscreen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./xterm.js/addons/fullscreen/fullscreen */ \"./xterm.js/addons/fullscreen/fullscreen.js\");\n/* harmony import */ var _xterm_js_addons_search_search__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./xterm.js/addons/search/search */ \"./xterm.js/addons/search/search.js\");\n/* harmony import */ var _xterm_js_addons_winptyCompat_winptyCompat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./xterm.js/addons/winptyCompat/winptyCompat */ \"./xterm.js/addons/winptyCompat/winptyCompat.js\");\n\n\n\n\n\n\n\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__.applyAddon(_xterm_js_addons_attach_attach__WEBPACK_IMPORTED_MODULE_1__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__.applyAddon(_xterm_js_addons_fit_fit__WEBPACK_IMPORTED_MODULE_2__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__.applyAddon(_xterm_js_addons_fullscreen_fullscreen__WEBPACK_IMPORTED_MODULE_3__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__.applyAddon(_xterm_js_addons_search_search__WEBPACK_IMPORTED_MODULE_4__);\n_xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__.applyAddon(_xterm_js_addons_winptyCompat_winptyCompat__WEBPACK_IMPORTED_MODULE_5__);\n\n(function () {\n  var TermManager = function (app) {\n    var terminalContainer = document.getElementById(\"terminal-container\");\n\n    var protocol, socketURL, socket, pid;\n\n    var _this = this;\n    var term;\n\n    this.app = app;\n\n    this.init = function () {\n      this.createTerminal();\n    };\n\n    this.isFocused = function () {\n      return this.term.isFocused;\n    };\n\n    this.runRealTerminal = function () {\n      term.attach(socket);\n      term._initialized = true;\n    };\n\n    this.createTerminal = function () {\n      // Clean terminal\n      while (terminalContainer.children.length) {\n        terminalContainer.removeChild(terminalContainer.children[0]);\n      }\n      term = new _xterm_js_xterm__WEBPACK_IMPORTED_MODULE_0__({\n        cursorBlink: true,\n        scrollback: 1000,\n        tabStopWidth: 8,\n        allowTransparency: true,\n        theme: {\n          background: \"#fdf6e3\",\n        },\n      });\n      this.term = term;\n\n      window.term = term; // Expose `term` to window for debugging purposes\n      term.on(\"resize\", function (size) {\n        if (!pid) {\n          return;\n        }\n        var cols = size.cols,\n          rows = size.rows,\n          url = \"/terminals/\" + pid + \"/size?cols=\" + cols + \"&rows=\" + rows;\n\n        fetch(url, { method: \"POST\", credentials: \"same-origin\" });\n      });\n\n      protocol = location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n\n      // use host from current url\n      var host = location.host;\n\n      socketURL = protocol + host + location.pathname + \"terminals/\";\n      var fetchUrl = location.pathname;\n\n      term.open(terminalContainer);\n      term.winptyCompatInit();\n      term.fit();\n      // term.focus();\n\n      var paramFetchUrl =\n        fetchUrl + \"terminals?cols=\" + term.cols + \"&rows=\" + term.rows;\n\n      fetch(paramFetchUrl, { method: \"POST\", credentials: \"same-origin\" }).then(\n        function (res) {\n          res.text().then(function (processId) {\n            pid = processId;\n            socketURL += processId;\n            socket = new WebSocket(socketURL);\n            socket.onopen = _this.runRealTerminal;\n            socket.onclose = function (e) {\n              console.log(e);\n            };\n            socket.onerror = function (e) {\n              console.log(e);\n            };\n          });\n        },\n      );\n    };\n  };\n\n  window.TermManager = TermManager;\n})();\n\n\n//# sourceURL=webpack://xterm-client/./main.js?");

/***/ }),

/***/ "./xterm.js/addons/attach/attach.js":
/*!******************************************!*\
  !*** ./xterm.js/addons/attach/attach.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction attach(term, socket, bidirectional, buffered) {\n    bidirectional = (typeof bidirectional == 'undefined') ? true : bidirectional;\n    term.socket = socket;\n    term._flushBuffer = function () {\n        term.write(term._attachSocketBuffer);\n        term._attachSocketBuffer = null;\n    };\n    term._pushToBuffer = function (data) {\n        if (term._attachSocketBuffer) {\n            term._attachSocketBuffer += data;\n        }\n        else {\n            term._attachSocketBuffer = data;\n            setTimeout(term._flushBuffer, 10);\n        }\n    };\n    var myTextDecoder;\n    term._getMessage = function (ev) {\n        var str;\n        if (typeof ev.data === \"object\") {\n            if (ev.data instanceof ArrayBuffer) {\n                if (!myTextDecoder) {\n                    myTextDecoder = new TextDecoder();\n                }\n                str = myTextDecoder.decode(ev.data);\n            }\n            else {\n                throw \"TODO: handle Blob?\";\n            }\n        }\n        if (buffered) {\n            term._pushToBuffer(str || ev.data);\n        }\n        else {\n            term.write(str || ev.data);\n        }\n    };\n    term._sendData = function (data) {\n        if (socket.readyState !== 1) {\n            return;\n        }\n        socket.send(data);\n    };\n    socket.addEventListener('message', term._getMessage);\n    if (bidirectional) {\n        term.on('data', term._sendData);\n    }\n    socket.addEventListener('close', term.detach.bind(term, socket));\n    socket.addEventListener('error', term.detach.bind(term, socket));\n}\nexports.attach = attach;\n;\nfunction detach(term, socket) {\n    term.off('data', term._sendData);\n    socket = (typeof socket == 'undefined') ? term.socket : socket;\n    if (socket) {\n        socket.removeEventListener('message', term._getMessage);\n    }\n    delete term.socket;\n}\nexports.detach = detach;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.attach = function (socket, bidirectional, buffered) {\n        return attach(this, socket, bidirectional, buffered);\n    };\n    terminalConstructor.prototype.detach = function (socket) {\n        return detach(this, socket);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=attach.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/addons/attach/attach.js?");

/***/ }),

/***/ "./xterm.js/addons/fit/fit.js":
/*!************************************!*\
  !*** ./xterm.js/addons/fit/fit.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction proposeGeometry(term) {\n    if (!term.element.parentElement) {\n        return null;\n    }\n    var parentElementStyle = window.getComputedStyle(term.element.parentElement);\n    var parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    var parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')) - 17);\n    var elementStyle = window.getComputedStyle(term.element);\n    var elementPaddingVer = parseInt(elementStyle.getPropertyValue('padding-top')) + parseInt(elementStyle.getPropertyValue('padding-bottom'));\n    var elementPaddingHor = parseInt(elementStyle.getPropertyValue('padding-right')) + parseInt(elementStyle.getPropertyValue('padding-left'));\n    var availableHeight = parentElementHeight - elementPaddingVer;\n    var availableWidth = parentElementWidth - elementPaddingHor;\n    var geometry = {\n        cols: Math.floor(availableWidth / term.renderer.dimensions.actualCellWidth),\n        rows: Math.floor(availableHeight / term.renderer.dimensions.actualCellHeight)\n    };\n    return geometry;\n}\nexports.proposeGeometry = proposeGeometry;\n;\nfunction fit(term) {\n    var geometry = proposeGeometry(term);\n    if (geometry) {\n        if (term.rows !== geometry.rows || term.cols !== geometry.cols) {\n            term.renderer.clear();\n            term.resize(geometry.cols, geometry.rows);\n        }\n    }\n}\nexports.fit = fit;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.proposeGeometry = function () {\n        return proposeGeometry(this);\n    };\n    terminalConstructor.prototype.fit = function () {\n        return fit(this);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=fit.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/addons/fit/fit.js?");

/***/ }),

/***/ "./xterm.js/addons/fullscreen/fullscreen.js":
/*!**************************************************!*\
  !*** ./xterm.js/addons/fullscreen/fullscreen.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction toggleFullScreen(term, fullscreen) {\n    var fn;\n    if (typeof fullscreen == 'undefined') {\n        fn = (term.element.classList.contains('fullscreen')) ? 'remove' : 'add';\n    }\n    else if (!fullscreen) {\n        fn = 'remove';\n    }\n    else {\n        fn = 'add';\n    }\n    term.element.classList[fn]('fullscreen');\n}\nexports.toggleFullScreen = toggleFullScreen;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.toggleFullScreen = function (fullscreen) {\n        return toggleFullScreen(this, fullscreen);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=fullscreen.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/addons/fullscreen/fullscreen.js?");

/***/ }),

/***/ "./xterm.js/addons/search/SearchHelper.js":
/*!************************************************!*\
  !*** ./xterm.js/addons/search/SearchHelper.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SearchHelper = (function () {\n    function SearchHelper(_terminal) {\n        this._terminal = _terminal;\n    }\n    SearchHelper.prototype.findNext = function (term) {\n        if (!term || term.length === 0) {\n            return false;\n        }\n        var result;\n        var startRow = this._terminal.buffer.ydisp;\n        if (this._terminal.selectionManager.selectionEnd) {\n            startRow = this._terminal.selectionManager.selectionEnd[1];\n        }\n        for (var y = startRow + 1; y < this._terminal.buffer.ybase + this._terminal.rows; y++) {\n            result = this._findInLine(term, y);\n            if (result) {\n                break;\n            }\n        }\n        if (!result) {\n            for (var y = 0; y < startRow; y++) {\n                result = this._findInLine(term, y);\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return this._selectResult(result);\n    };\n    SearchHelper.prototype.findPrevious = function (term) {\n        if (!term || term.length === 0) {\n            return false;\n        }\n        var result;\n        var startRow = this._terminal.buffer.ydisp;\n        if (this._terminal.selectionManager.selectionStart) {\n            startRow = this._terminal.selectionManager.selectionStart[1];\n        }\n        for (var y = startRow - 1; y >= 0; y--) {\n            result = this._findInLine(term, y);\n            if (result) {\n                break;\n            }\n        }\n        if (!result) {\n            for (var y = this._terminal.buffer.ybase + this._terminal.rows - 1; y > startRow; y--) {\n                result = this._findInLine(term, y);\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return this._selectResult(result);\n    };\n    SearchHelper.prototype._findInLine = function (term, y) {\n        var lowerStringLine = this._terminal.buffer.translateBufferLineToString(y, true).toLowerCase();\n        var lowerTerm = term.toLowerCase();\n        var searchIndex = lowerStringLine.indexOf(lowerTerm);\n        if (searchIndex >= 0) {\n            return {\n                term: term,\n                col: searchIndex,\n                row: y\n            };\n        }\n    };\n    SearchHelper.prototype._selectResult = function (result) {\n        if (!result) {\n            return false;\n        }\n        this._terminal.selectionManager.setSelection(result.col, result.row, result.term.length);\n        this._terminal.scrollLines(result.row - this._terminal.buffer.ydisp, false);\n        return true;\n    };\n    return SearchHelper;\n}());\nexports.SearchHelper = SearchHelper;\n\n//# sourceMappingURL=SearchHelper.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/addons/search/SearchHelper.js?");

/***/ }),

/***/ "./xterm.js/addons/search/search.js":
/*!******************************************!*\
  !*** ./xterm.js/addons/search/search.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SearchHelper_1 = __webpack_require__(/*! ./SearchHelper */ \"./xterm.js/addons/search/SearchHelper.js\");\nfunction findNext(terminal, term) {\n    if (!terminal._searchHelper) {\n        terminal.searchHelper = new SearchHelper_1.SearchHelper(terminal);\n    }\n    return terminal.searchHelper.findNext(term);\n}\nexports.findNext = findNext;\n;\nfunction findPrevious(terminal, term) {\n    if (!terminal._searchHelper) {\n        terminal.searchHelper = new SearchHelper_1.SearchHelper(terminal);\n    }\n    return terminal.searchHelper.findPrevious(term);\n}\nexports.findPrevious = findPrevious;\n;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.findNext = function (term) {\n        return findNext(this, term);\n    };\n    terminalConstructor.prototype.findPrevious = function (term) {\n        return findPrevious(this, term);\n    };\n}\nexports.apply = apply;\n//# sourceMappingURL=search.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/addons/search/search.js?");

/***/ }),

/***/ "./xterm.js/addons/winptyCompat/winptyCompat.js":
/*!******************************************************!*\
  !*** ./xterm.js/addons/winptyCompat/winptyCompat.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction winptyCompatInit(terminal) {\n    var isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].indexOf(navigator.platform) >= 0;\n    if (!isWindows) {\n        return;\n    }\n    terminal.on('linefeed', function () {\n        var line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n        var lastChar = line[terminal.cols - 1];\n        if (lastChar[3] !== 32) {\n            var nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n            nextLine.isWrapped = true;\n        }\n    });\n}\nexports.winptyCompatInit = winptyCompatInit;\nfunction apply(terminalConstructor) {\n    terminalConstructor.prototype.winptyCompatInit = function () {\n        winptyCompatInit(this);\n    };\n}\nexports.apply = apply;\n\n//# sourceMappingURL=winptyCompat.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/addons/winptyCompat/winptyCompat.js?");

/***/ }),

/***/ "./xterm.js/xterm.js":
/*!***************************!*\
  !*** ./xterm.js/xterm.js ***!
  \***************************/
/***/ ((module) => {

eval("(function (f) {\n  if (true) {\n    module.exports = f();\n  } else { var g; }\n})(function () {\n  var define, module, exports;\n  return (function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = undefined;\n          if (!u && a) return require(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw ((f.code = \"MODULE_NOT_FOUND\"), f);\n        }\n        var l = (n[o] = { exports: {} });\n        t[o][0].call(\n          l.exports,\n          function (e) {\n            var n = t[o][1][e];\n            return s(n ? n : e);\n          },\n          l,\n          l.exports,\n          e,\n          t,\n          n,\n          r,\n        );\n      }\n      return n[o].exports;\n    }\n    var i = undefined;\n    for (var o = 0; o < r.length; o++) s(r[o]);\n    return s;\n  })(\n    {\n      1: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var CircularList_1 = require(\"./utils/CircularList\");\n          exports.CHAR_DATA_ATTR_INDEX = 0;\n          exports.CHAR_DATA_CHAR_INDEX = 1;\n          exports.CHAR_DATA_WIDTH_INDEX = 2;\n          exports.CHAR_DATA_CODE_INDEX = 3;\n          exports.MAX_BUFFER_SIZE = 4294967295;\n          var Buffer = (function () {\n            function Buffer(_terminal, _hasScrollback) {\n              this._terminal = _terminal;\n              this._hasScrollback = _hasScrollback;\n              this.clear();\n            }\n            Object.defineProperty(Buffer.prototype, \"lines\", {\n              get: function () {\n                return this._lines;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(Buffer.prototype, \"hasScrollback\", {\n              get: function () {\n                return (\n                  this._hasScrollback &&\n                  this.lines.maxLength > this._terminal.rows\n                );\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(Buffer.prototype, \"isCursorInViewport\", {\n              get: function () {\n                var absoluteY = this.ybase + this.y;\n                var relativeY = absoluteY - this.ydisp;\n                return relativeY >= 0 && relativeY < this._terminal.rows;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Buffer.prototype._getCorrectBufferLength = function (rows) {\n              if (!this._hasScrollback) {\n                return rows;\n              }\n              var correctBufferLength =\n                rows + this._terminal.options.scrollback;\n              return correctBufferLength > exports.MAX_BUFFER_SIZE\n                ? exports.MAX_BUFFER_SIZE\n                : correctBufferLength;\n            };\n            Buffer.prototype.fillViewportRows = function () {\n              if (this._lines.length === 0) {\n                var i = this._terminal.rows;\n                while (i--) {\n                  this.lines.push(this._terminal.blankLine());\n                }\n              }\n            };\n            Buffer.prototype.clear = function () {\n              this.ydisp = 0;\n              this.ybase = 0;\n              this.y = 0;\n              this.x = 0;\n              this._lines = new CircularList_1.CircularList(\n                this._getCorrectBufferLength(this._terminal.rows),\n              );\n              this.scrollTop = 0;\n              this.scrollBottom = this._terminal.rows - 1;\n              this.setupTabStops();\n            };\n            Buffer.prototype.resize = function (newCols, newRows) {\n              var newMaxLength = this._getCorrectBufferLength(newRows);\n              if (newMaxLength > this._lines.maxLength) {\n                this._lines.maxLength = newMaxLength;\n              }\n              if (this._lines.length > 0) {\n                if (this._terminal.cols < newCols) {\n                  var ch = [this._terminal.defAttr, \" \", 1, 32];\n                  for (var i = 0; i < this._lines.length; i++) {\n                    if (this._lines.get(i) === undefined) {\n                      this._lines.set(\n                        i,\n                        this._terminal.blankLine(undefined, undefined, newCols),\n                      );\n                    }\n                    while (this._lines.get(i).length < newCols) {\n                      this._lines.get(i).push(ch);\n                    }\n                  }\n                }\n                var addToY = 0;\n                if (this._terminal.rows < newRows) {\n                  for (var y = this._terminal.rows; y < newRows; y++) {\n                    if (this._lines.length < newRows + this.ybase) {\n                      if (\n                        this.ybase > 0 &&\n                        this._lines.length <= this.ybase + this.y + addToY + 1\n                      ) {\n                        this.ybase--;\n                        addToY++;\n                        if (this.ydisp > 0) {\n                          this.ydisp--;\n                        }\n                      } else {\n                        this._lines.push(\n                          this._terminal.blankLine(\n                            undefined,\n                            undefined,\n                            newCols,\n                          ),\n                        );\n                      }\n                    }\n                  }\n                } else {\n                  for (var y = this._terminal.rows; y > newRows; y--) {\n                    if (this._lines.length > newRows + this.ybase) {\n                      if (this._lines.length > this.ybase + this.y + 1) {\n                        this._lines.pop();\n                      } else {\n                        this.ybase++;\n                        this.ydisp++;\n                      }\n                    }\n                  }\n                }\n                if (newMaxLength < this._lines.maxLength) {\n                  var amountToTrim = this._lines.length - newMaxLength;\n                  if (amountToTrim > 0) {\n                    this._lines.trimStart(amountToTrim);\n                    this.ybase = Math.max(this.ybase - amountToTrim, 0);\n                    this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n                  }\n                  this._lines.maxLength = newMaxLength;\n                }\n                if (this.y >= newRows) {\n                  this.y = newRows - 1;\n                }\n                if (addToY) {\n                  this.y += addToY;\n                }\n                if (this.x >= newCols) {\n                  this.x = newCols - 1;\n                }\n                this.scrollTop = 0;\n              }\n              this.scrollBottom = newRows - 1;\n            };\n            Buffer.prototype.translateBufferLineToString = function (\n              lineIndex,\n              trimRight,\n              startCol,\n              endCol,\n            ) {\n              if (startCol === void 0) {\n                startCol = 0;\n              }\n              if (endCol === void 0) {\n                endCol = null;\n              }\n              var lineString = \"\";\n              var line = this.lines.get(lineIndex);\n              if (!line) {\n                return \"\";\n              }\n              var startIndex = startCol;\n              endCol = endCol || line.length;\n              var endIndex = endCol;\n              for (var i = 0; i < line.length; i++) {\n                var char = line[i];\n                lineString += char[exports.CHAR_DATA_CHAR_INDEX];\n                if (char[exports.CHAR_DATA_WIDTH_INDEX] === 0) {\n                  if (startCol >= i) {\n                    startIndex--;\n                  }\n                  if (endCol >= i) {\n                    endIndex--;\n                  }\n                } else {\n                  if (char[exports.CHAR_DATA_CHAR_INDEX].length > 1) {\n                    if (startCol > i) {\n                      startIndex +=\n                        char[exports.CHAR_DATA_CHAR_INDEX].length - 1;\n                    }\n                    if (endCol > i) {\n                      endIndex += char[exports.CHAR_DATA_CHAR_INDEX].length - 1;\n                    }\n                  }\n                }\n              }\n              if (trimRight) {\n                var rightWhitespaceIndex = lineString.search(/\\s+$/);\n                if (rightWhitespaceIndex !== -1) {\n                  endIndex = Math.min(endIndex, rightWhitespaceIndex);\n                }\n                if (endIndex <= startIndex) {\n                  return \"\";\n                }\n              }\n              return lineString.substring(startIndex, endIndex);\n            };\n            Buffer.prototype.setupTabStops = function (i) {\n              if (i != null) {\n                if (!this.tabs[i]) {\n                  i = this.prevStop(i);\n                }\n              } else {\n                this.tabs = {};\n                i = 0;\n              }\n              for (\n                ;\n                i < this._terminal.cols;\n                i += this._terminal.options.tabStopWidth\n              ) {\n                this.tabs[i] = true;\n              }\n            };\n            Buffer.prototype.prevStop = function (x) {\n              if (x == null) {\n                x = this.x;\n              }\n              while (!this.tabs[--x] && x > 0);\n              return x >= this._terminal.cols\n                ? this._terminal.cols - 1\n                : x < 0\n                ? 0\n                : x;\n            };\n            Buffer.prototype.nextStop = function (x) {\n              if (x == null) {\n                x = this.x;\n              }\n              while (!this.tabs[++x] && x < this._terminal.cols);\n              return x >= this._terminal.cols\n                ? this._terminal.cols - 1\n                : x < 0\n                ? 0\n                : x;\n            };\n            return Buffer;\n          })();\n          exports.Buffer = Buffer;\n        },\n        { \"./utils/CircularList\": 30 },\n      ],\n      2: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Buffer_1 = require(\"./Buffer\");\n          var EventEmitter_1 = require(\"./EventEmitter\");\n          var BufferSet = (function (_super) {\n            __extends(BufferSet, _super);\n            function BufferSet(_terminal) {\n              var _this = _super.call(this) || this;\n              _this._terminal = _terminal;\n              _this._normal = new Buffer_1.Buffer(_this._terminal, true);\n              _this._normal.fillViewportRows();\n              _this._alt = new Buffer_1.Buffer(_this._terminal, false);\n              _this._activeBuffer = _this._normal;\n              _this.setupTabStops();\n              return _this;\n            }\n            Object.defineProperty(BufferSet.prototype, \"alt\", {\n              get: function () {\n                return this._alt;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(BufferSet.prototype, \"active\", {\n              get: function () {\n                return this._activeBuffer;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(BufferSet.prototype, \"normal\", {\n              get: function () {\n                return this._normal;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            BufferSet.prototype.activateNormalBuffer = function () {\n              this._alt.clear();\n              this._activeBuffer = this._normal;\n              this.emit(\"activate\", this._normal);\n            };\n            BufferSet.prototype.activateAltBuffer = function () {\n              this._alt.fillViewportRows();\n              this._activeBuffer = this._alt;\n              this.emit(\"activate\", this._alt);\n            };\n            BufferSet.prototype.resize = function (newCols, newRows) {\n              this._normal.resize(newCols, newRows);\n              this._alt.resize(newCols, newRows);\n            };\n            BufferSet.prototype.setupTabStops = function (i) {\n              this._normal.setupTabStops(i);\n              this._alt.setupTabStops(i);\n            };\n            return BufferSet;\n          })(EventEmitter_1.EventEmitter);\n          exports.BufferSet = BufferSet;\n        },\n        { \"./Buffer\": 1, \"./EventEmitter\": 7 },\n      ],\n      3: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          exports.wcwidth = (function (opts) {\n            var COMBINING_BMP = [\n              [0x0300, 0x036f],\n              [0x0483, 0x0486],\n              [0x0488, 0x0489],\n              [0x0591, 0x05bd],\n              [0x05bf, 0x05bf],\n              [0x05c1, 0x05c2],\n              [0x05c4, 0x05c5],\n              [0x05c7, 0x05c7],\n              [0x0600, 0x0603],\n              [0x0610, 0x0615],\n              [0x064b, 0x065e],\n              [0x0670, 0x0670],\n              [0x06d6, 0x06e4],\n              [0x06e7, 0x06e8],\n              [0x06ea, 0x06ed],\n              [0x070f, 0x070f],\n              [0x0711, 0x0711],\n              [0x0730, 0x074a],\n              [0x07a6, 0x07b0],\n              [0x07eb, 0x07f3],\n              [0x0901, 0x0902],\n              [0x093c, 0x093c],\n              [0x0941, 0x0948],\n              [0x094d, 0x094d],\n              [0x0951, 0x0954],\n              [0x0962, 0x0963],\n              [0x0981, 0x0981],\n              [0x09bc, 0x09bc],\n              [0x09c1, 0x09c4],\n              [0x09cd, 0x09cd],\n              [0x09e2, 0x09e3],\n              [0x0a01, 0x0a02],\n              [0x0a3c, 0x0a3c],\n              [0x0a41, 0x0a42],\n              [0x0a47, 0x0a48],\n              [0x0a4b, 0x0a4d],\n              [0x0a70, 0x0a71],\n              [0x0a81, 0x0a82],\n              [0x0abc, 0x0abc],\n              [0x0ac1, 0x0ac5],\n              [0x0ac7, 0x0ac8],\n              [0x0acd, 0x0acd],\n              [0x0ae2, 0x0ae3],\n              [0x0b01, 0x0b01],\n              [0x0b3c, 0x0b3c],\n              [0x0b3f, 0x0b3f],\n              [0x0b41, 0x0b43],\n              [0x0b4d, 0x0b4d],\n              [0x0b56, 0x0b56],\n              [0x0b82, 0x0b82],\n              [0x0bc0, 0x0bc0],\n              [0x0bcd, 0x0bcd],\n              [0x0c3e, 0x0c40],\n              [0x0c46, 0x0c48],\n              [0x0c4a, 0x0c4d],\n              [0x0c55, 0x0c56],\n              [0x0cbc, 0x0cbc],\n              [0x0cbf, 0x0cbf],\n              [0x0cc6, 0x0cc6],\n              [0x0ccc, 0x0ccd],\n              [0x0ce2, 0x0ce3],\n              [0x0d41, 0x0d43],\n              [0x0d4d, 0x0d4d],\n              [0x0dca, 0x0dca],\n              [0x0dd2, 0x0dd4],\n              [0x0dd6, 0x0dd6],\n              [0x0e31, 0x0e31],\n              [0x0e34, 0x0e3a],\n              [0x0e47, 0x0e4e],\n              [0x0eb1, 0x0eb1],\n              [0x0eb4, 0x0eb9],\n              [0x0ebb, 0x0ebc],\n              [0x0ec8, 0x0ecd],\n              [0x0f18, 0x0f19],\n              [0x0f35, 0x0f35],\n              [0x0f37, 0x0f37],\n              [0x0f39, 0x0f39],\n              [0x0f71, 0x0f7e],\n              [0x0f80, 0x0f84],\n              [0x0f86, 0x0f87],\n              [0x0f90, 0x0f97],\n              [0x0f99, 0x0fbc],\n              [0x0fc6, 0x0fc6],\n              [0x102d, 0x1030],\n              [0x1032, 0x1032],\n              [0x1036, 0x1037],\n              [0x1039, 0x1039],\n              [0x1058, 0x1059],\n              [0x1160, 0x11ff],\n              [0x135f, 0x135f],\n              [0x1712, 0x1714],\n              [0x1732, 0x1734],\n              [0x1752, 0x1753],\n              [0x1772, 0x1773],\n              [0x17b4, 0x17b5],\n              [0x17b7, 0x17bd],\n              [0x17c6, 0x17c6],\n              [0x17c9, 0x17d3],\n              [0x17dd, 0x17dd],\n              [0x180b, 0x180d],\n              [0x18a9, 0x18a9],\n              [0x1920, 0x1922],\n              [0x1927, 0x1928],\n              [0x1932, 0x1932],\n              [0x1939, 0x193b],\n              [0x1a17, 0x1a18],\n              [0x1b00, 0x1b03],\n              [0x1b34, 0x1b34],\n              [0x1b36, 0x1b3a],\n              [0x1b3c, 0x1b3c],\n              [0x1b42, 0x1b42],\n              [0x1b6b, 0x1b73],\n              [0x1dc0, 0x1dca],\n              [0x1dfe, 0x1dff],\n              [0x200b, 0x200f],\n              [0x202a, 0x202e],\n              [0x2060, 0x2063],\n              [0x206a, 0x206f],\n              [0x20d0, 0x20ef],\n              [0x302a, 0x302f],\n              [0x3099, 0x309a],\n              [0xa806, 0xa806],\n              [0xa80b, 0xa80b],\n              [0xa825, 0xa826],\n              [0xfb1e, 0xfb1e],\n              [0xfe00, 0xfe0f],\n              [0xfe20, 0xfe23],\n              [0xfeff, 0xfeff],\n              [0xfff9, 0xfffb],\n            ];\n            var COMBINING_HIGH = [\n              [0x10a01, 0x10a03],\n              [0x10a05, 0x10a06],\n              [0x10a0c, 0x10a0f],\n              [0x10a38, 0x10a3a],\n              [0x10a3f, 0x10a3f],\n              [0x1d167, 0x1d169],\n              [0x1d173, 0x1d182],\n              [0x1d185, 0x1d18b],\n              [0x1d1aa, 0x1d1ad],\n              [0x1d242, 0x1d244],\n              [0xe0001, 0xe0001],\n              [0xe0020, 0xe007f],\n              [0xe0100, 0xe01ef],\n            ];\n            function bisearch(ucs, data) {\n              var min = 0;\n              var max = data.length - 1;\n              var mid;\n              if (ucs < data[0][0] || ucs > data[max][1]) return false;\n              while (max >= min) {\n                mid = (min + max) >> 1;\n                if (ucs > data[mid][1]) min = mid + 1;\n                else if (ucs < data[mid][0]) max = mid - 1;\n                else return true;\n              }\n              return false;\n            }\n            function wcwidthBMP(ucs) {\n              if (ucs === 0) return opts.nul;\n              if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) return opts.control;\n              if (bisearch(ucs, COMBINING_BMP)) return 0;\n              if (isWideBMP(ucs)) {\n                return 2;\n              }\n              return 1;\n            }\n            function isWideBMP(ucs) {\n              return (\n                ucs >= 0x1100 &&\n                (ucs <= 0x115f ||\n                  ucs === 0x2329 ||\n                  ucs === 0x232a ||\n                  (ucs >= 0x2e80 && ucs <= 0xa4cf && ucs !== 0x303f) ||\n                  (ucs >= 0xac00 && ucs <= 0xd7a3) ||\n                  (ucs >= 0xf900 && ucs <= 0xfaff) ||\n                  (ucs >= 0xfe10 && ucs <= 0xfe19) ||\n                  (ucs >= 0xfe30 && ucs <= 0xfe6f) ||\n                  (ucs >= 0xff00 && ucs <= 0xff60) ||\n                  (ucs >= 0xffe0 && ucs <= 0xffe6))\n              );\n            }\n            function wcwidthHigh(ucs) {\n              if (bisearch(ucs, COMBINING_HIGH)) return 0;\n              if (\n                (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n                (ucs >= 0x30000 && ucs <= 0x3fffd)\n              ) {\n                return 2;\n              }\n              return 1;\n            }\n            var control = opts.control | 0;\n            var table = null;\n            function init_table() {\n              var CODEPOINTS = 65536;\n              var BITWIDTH = 2;\n              var ITEMSIZE = 32;\n              var CONTAINERSIZE = (CODEPOINTS * BITWIDTH) / ITEMSIZE;\n              var CODEPOINTS_PER_ITEM = ITEMSIZE / BITWIDTH;\n              table =\n                typeof Uint32Array === \"undefined\"\n                  ? new Array(CONTAINERSIZE)\n                  : new Uint32Array(CONTAINERSIZE);\n              for (var i = 0; i < CONTAINERSIZE; ++i) {\n                var num = 0;\n                var pos = CODEPOINTS_PER_ITEM;\n                while (pos--)\n                  num = (num << 2) | wcwidthBMP(CODEPOINTS_PER_ITEM * i + pos);\n                table[i] = num;\n              }\n              return table;\n            }\n            return function (num) {\n              num = num | 0;\n              if (num < 32) return control | 0;\n              if (num < 127) return 1;\n              var t = table || init_table();\n              if (num < 65536) return (t[num >> 4] >> ((num & 15) << 1)) & 3;\n              return wcwidthHigh(num);\n            };\n          })({ nul: 0, control: 0 });\n        },\n        {},\n      ],\n      4: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          exports.CHARSETS = {};\n          exports.DEFAULT_CHARSET = exports.CHARSETS[\"B\"];\n          exports.CHARSETS[\"0\"] = {\n            \"`\": \"\\u25c6\",\n            a: \"\\u2592\",\n            b: \"\\u0009\",\n            c: \"\\u000c\",\n            d: \"\\u000d\",\n            e: \"\\u000a\",\n            f: \"\\u00b0\",\n            g: \"\\u00b1\",\n            h: \"\\u2424\",\n            i: \"\\u000b\",\n            j: \"\\u2518\",\n            k: \"\\u2510\",\n            l: \"\\u250c\",\n            m: \"\\u2514\",\n            n: \"\\u253c\",\n            o: \"\\u23ba\",\n            p: \"\\u23bb\",\n            q: \"\\u2500\",\n            r: \"\\u23bc\",\n            s: \"\\u23bd\",\n            t: \"\\u251c\",\n            u: \"\\u2524\",\n            v: \"\\u2534\",\n            w: \"\\u252c\",\n            x: \"\\u2502\",\n            y: \"\\u2264\",\n            z: \"\\u2265\",\n            \"{\": \"\\u03c0\",\n            \"|\": \"\\u2260\",\n            \"}\": \"\\u00a3\",\n            \"~\": \"\\u00b7\",\n          };\n          exports.CHARSETS[\"A\"] = {\n            \"#\": \"£\",\n          };\n          exports.CHARSETS[\"B\"] = null;\n          exports.CHARSETS[\"4\"] = {\n            \"#\": \"£\",\n            \"@\": \"¾\",\n            \"[\": \"ij\",\n            \"\\\\\": \"½\",\n            \"]\": \"|\",\n            \"{\": \"¨\",\n            \"|\": \"f\",\n            \"}\": \"¼\",\n            \"~\": \"´\",\n          };\n          exports.CHARSETS[\"C\"] = exports.CHARSETS[\"5\"] = {\n            \"[\": \"Ä\",\n            \"\\\\\": \"Ö\",\n            \"]\": \"Å\",\n            \"^\": \"Ü\",\n            \"`\": \"é\",\n            \"{\": \"ä\",\n            \"|\": \"ö\",\n            \"}\": \"å\",\n            \"~\": \"ü\",\n          };\n          exports.CHARSETS[\"R\"] = {\n            \"#\": \"£\",\n            \"@\": \"à\",\n            \"[\": \"°\",\n            \"\\\\\": \"ç\",\n            \"]\": \"§\",\n            \"{\": \"é\",\n            \"|\": \"ù\",\n            \"}\": \"è\",\n            \"~\": \"¨\",\n          };\n          exports.CHARSETS[\"Q\"] = {\n            \"@\": \"à\",\n            \"[\": \"â\",\n            \"\\\\\": \"ç\",\n            \"]\": \"ê\",\n            \"^\": \"î\",\n            \"`\": \"ô\",\n            \"{\": \"é\",\n            \"|\": \"ù\",\n            \"}\": \"è\",\n            \"~\": \"û\",\n          };\n          exports.CHARSETS[\"K\"] = {\n            \"@\": \"§\",\n            \"[\": \"Ä\",\n            \"\\\\\": \"Ö\",\n            \"]\": \"Ü\",\n            \"{\": \"ä\",\n            \"|\": \"ö\",\n            \"}\": \"ü\",\n            \"~\": \"ß\",\n          };\n          exports.CHARSETS[\"Y\"] = {\n            \"#\": \"£\",\n            \"@\": \"§\",\n            \"[\": \"°\",\n            \"\\\\\": \"ç\",\n            \"]\": \"é\",\n            \"`\": \"ù\",\n            \"{\": \"à\",\n            \"|\": \"ò\",\n            \"}\": \"è\",\n            \"~\": \"ì\",\n          };\n          exports.CHARSETS[\"E\"] = exports.CHARSETS[\"6\"] = {\n            \"@\": \"Ä\",\n            \"[\": \"Æ\",\n            \"\\\\\": \"Ø\",\n            \"]\": \"Å\",\n            \"^\": \"Ü\",\n            \"`\": \"ä\",\n            \"{\": \"æ\",\n            \"|\": \"ø\",\n            \"}\": \"å\",\n            \"~\": \"ü\",\n          };\n          exports.CHARSETS[\"Z\"] = {\n            \"#\": \"£\",\n            \"@\": \"§\",\n            \"[\": \"¡\",\n            \"\\\\\": \"Ñ\",\n            \"]\": \"¿\",\n            \"{\": \"°\",\n            \"|\": \"ñ\",\n            \"}\": \"ç\",\n          };\n          exports.CHARSETS[\"H\"] = exports.CHARSETS[\"7\"] = {\n            \"@\": \"É\",\n            \"[\": \"Ä\",\n            \"\\\\\": \"Ö\",\n            \"]\": \"Å\",\n            \"^\": \"Ü\",\n            \"`\": \"é\",\n            \"{\": \"ä\",\n            \"|\": \"ö\",\n            \"}\": \"å\",\n            \"~\": \"ü\",\n          };\n          exports.CHARSETS[\"=\"] = {\n            \"#\": \"ù\",\n            \"@\": \"à\",\n            \"[\": \"é\",\n            \"\\\\\": \"ç\",\n            \"]\": \"ê\",\n            \"^\": \"î\",\n            _: \"è\",\n            \"`\": \"ô\",\n            \"{\": \"ä\",\n            \"|\": \"ö\",\n            \"}\": \"ü\",\n            \"~\": \"û\",\n          };\n        },\n        {},\n      ],\n      5: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var CompositionHelper = (function () {\n            function CompositionHelper(textarea, compositionView, terminal) {\n              this.textarea = textarea;\n              this.compositionView = compositionView;\n              this.terminal = terminal;\n              this.isComposing = false;\n              this.isSendingComposition = false;\n              this.compositionPosition = { start: null, end: null };\n            }\n            CompositionHelper.prototype.compositionstart = function () {\n              this.isComposing = true;\n              this.compositionPosition.start = this.textarea.value.length;\n              this.compositionView.textContent = \"\";\n              this.compositionView.classList.add(\"active\");\n            };\n            CompositionHelper.prototype.compositionupdate = function (ev) {\n              var _this = this;\n              this.compositionView.textContent = ev.data;\n              this.updateCompositionElements();\n              setTimeout(function () {\n                _this.compositionPosition.end = _this.textarea.value.length;\n              }, 0);\n            };\n            CompositionHelper.prototype.compositionend = function () {\n              this.finalizeComposition(true);\n            };\n            CompositionHelper.prototype.keydown = function (ev) {\n              if (this.isComposing || this.isSendingComposition) {\n                if (ev.keyCode === 229) {\n                  return false;\n                } else if (\n                  ev.keyCode === 16 ||\n                  ev.keyCode === 17 ||\n                  ev.keyCode === 18\n                ) {\n                  return false;\n                } else {\n                  this.finalizeComposition(false);\n                }\n              }\n              if (ev.keyCode === 229) {\n                this.handleAnyTextareaChanges();\n                return false;\n              }\n              return true;\n            };\n            CompositionHelper.prototype.finalizeComposition = function (\n              waitForPropogation,\n            ) {\n              var _this = this;\n              this.compositionView.classList.remove(\"active\");\n              this.isComposing = false;\n              this.clearTextareaPosition();\n              if (!waitForPropogation) {\n                this.isSendingComposition = false;\n                var input = this.textarea.value.substring(\n                  this.compositionPosition.start,\n                  this.compositionPosition.end,\n                );\n                this.terminal.handler(input);\n              } else {\n                var currentCompositionPosition_1 = {\n                  start: this.compositionPosition.start,\n                  end: this.compositionPosition.end,\n                };\n                this.isSendingComposition = true;\n                setTimeout(function () {\n                  if (_this.isSendingComposition) {\n                    _this.isSendingComposition = false;\n                    var input = void 0;\n                    if (_this.isComposing) {\n                      input = _this.textarea.value.substring(\n                        currentCompositionPosition_1.start,\n                        currentCompositionPosition_1.end,\n                      );\n                    } else {\n                      input = _this.textarea.value.substring(\n                        currentCompositionPosition_1.start,\n                      );\n                    }\n                    _this.terminal.handler(input);\n                  }\n                }, 0);\n              }\n            };\n            CompositionHelper.prototype.handleAnyTextareaChanges = function () {\n              var _this = this;\n              var oldValue = this.textarea.value;\n              setTimeout(function () {\n                if (!_this.isComposing) {\n                  var newValue = _this.textarea.value;\n                  var diff = newValue.replace(oldValue, \"\");\n                  if (diff.length > 0) {\n                    _this.terminal.handler(diff);\n                  }\n                }\n              }, 0);\n            };\n            CompositionHelper.prototype.updateCompositionElements = function (\n              dontRecurse,\n            ) {\n              var _this = this;\n              if (!this.isComposing) {\n                return;\n              }\n              if (this.terminal.buffer.isCursorInViewport) {\n                var cellHeight = Math.ceil(\n                  this.terminal.charMeasure.height *\n                    this.terminal.options.lineHeight,\n                );\n                var cursorTop = this.terminal.buffer.y * cellHeight;\n                var cursorLeft =\n                  this.terminal.buffer.x * this.terminal.charMeasure.width;\n                this.compositionView.style.left = cursorLeft + \"px\";\n                this.compositionView.style.top = cursorTop + \"px\";\n                this.compositionView.style.height = cellHeight + \"px\";\n                this.compositionView.style.lineHeight = cellHeight + \"px\";\n                var compositionViewBounds =\n                  this.compositionView.getBoundingClientRect();\n                this.textarea.style.left = cursorLeft + \"px\";\n                this.textarea.style.top = cursorTop + \"px\";\n                this.textarea.style.width = compositionViewBounds.width + \"px\";\n                this.textarea.style.height =\n                  compositionViewBounds.height + \"px\";\n                this.textarea.style.lineHeight =\n                  compositionViewBounds.height + \"px\";\n              }\n              if (!dontRecurse) {\n                setTimeout(function () {\n                  return _this.updateCompositionElements(true);\n                }, 0);\n              }\n            };\n            CompositionHelper.prototype.clearTextareaPosition = function () {\n              this.textarea.style.left = \"\";\n              this.textarea.style.top = \"\";\n            };\n            return CompositionHelper;\n          })();\n          exports.CompositionHelper = CompositionHelper;\n        },\n        {},\n      ],\n      6: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var C0;\n          (function (C0) {\n            C0.NUL = \"\\x00\";\n            C0.SOH = \"\\x01\";\n            C0.STX = \"\\x02\";\n            C0.ETX = \"\\x03\";\n            C0.EOT = \"\\x04\";\n            C0.ENQ = \"\\x05\";\n            C0.ACK = \"\\x06\";\n            C0.BEL = \"\\x07\";\n            C0.BS = \"\\x08\";\n            C0.HT = \"\\x09\";\n            C0.LF = \"\\x0a\";\n            C0.VT = \"\\x0b\";\n            C0.FF = \"\\x0c\";\n            C0.CR = \"\\x0d\";\n            C0.SO = \"\\x0e\";\n            C0.SI = \"\\x0f\";\n            C0.DLE = \"\\x10\";\n            C0.DC1 = \"\\x11\";\n            C0.DC2 = \"\\x12\";\n            C0.DC3 = \"\\x13\";\n            C0.DC4 = \"\\x14\";\n            C0.NAK = \"\\x15\";\n            C0.SYN = \"\\x16\";\n            C0.ETB = \"\\x17\";\n            C0.CAN = \"\\x18\";\n            C0.EM = \"\\x19\";\n            C0.SUB = \"\\x1a\";\n            C0.ESC = \"\\x1b\";\n            C0.FS = \"\\x1c\";\n            C0.GS = \"\\x1d\";\n            C0.RS = \"\\x1e\";\n            C0.US = \"\\x1f\";\n            C0.SP = \"\\x20\";\n            C0.DEL = \"\\x7f\";\n          })((C0 = exports.C0 || (exports.C0 = {})));\n        },\n        {},\n      ],\n      7: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var EventEmitter = (function () {\n            function EventEmitter() {\n              this._events = this._events || {};\n            }\n            EventEmitter.prototype.on = function (type, listener) {\n              this._events[type] = this._events[type] || [];\n              this._events[type].push(listener);\n            };\n            EventEmitter.prototype.off = function (type, listener) {\n              if (!this._events[type]) {\n                return;\n              }\n              var obj = this._events[type];\n              var i = obj.length;\n              while (i--) {\n                if (obj[i] === listener || obj[i].listener === listener) {\n                  obj.splice(i, 1);\n                  return;\n                }\n              }\n            };\n            EventEmitter.prototype.removeAllListeners = function (type) {\n              if (this._events[type]) {\n                delete this._events[type];\n              }\n            };\n            EventEmitter.prototype.once = function (type, listener) {\n              function on() {\n                var args = Array.prototype.slice.call(arguments);\n                this.off(type, on);\n                listener.apply(this, args);\n              }\n              on.listener = listener;\n              this.on(type, on);\n            };\n            EventEmitter.prototype.emit = function (type) {\n              var args = [];\n              for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n              }\n              if (!this._events[type]) {\n                return;\n              }\n              var obj = this._events[type];\n              for (var i = 0; i < obj.length; i++) {\n                obj[i].apply(this, args);\n              }\n            };\n            EventEmitter.prototype.listeners = function (type) {\n              return this._events[type] || [];\n            };\n            EventEmitter.prototype.destroy = function () {\n              this._events = {};\n            };\n            return EventEmitter;\n          })();\n          exports.EventEmitter = EventEmitter;\n        },\n        {},\n      ],\n      8: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var EscapeSequences_1 = require(\"./EscapeSequences\");\n          var Charsets_1 = require(\"./Charsets\");\n          var Buffer_1 = require(\"./Buffer\");\n          var Types_1 = require(\"./renderer/Types\");\n          var CharWidth_1 = require(\"./CharWidth\");\n          var InputHandler = (function () {\n            function InputHandler(_terminal) {\n              this._terminal = _terminal;\n            }\n            InputHandler.prototype.addChar = function (char, code) {\n              if (char >= \" \") {\n                var ch_width = CharWidth_1.wcwidth(code);\n                if (this._terminal.charset && this._terminal.charset[char]) {\n                  char = this._terminal.charset[char];\n                }\n                var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n                if (!ch_width && this._terminal.buffer.x) {\n                  if (\n                    this._terminal.buffer.lines.get(row)[\n                      this._terminal.buffer.x - 1\n                    ]\n                  ) {\n                    if (\n                      !this._terminal.buffer.lines.get(row)[\n                        this._terminal.buffer.x - 1\n                      ][Buffer_1.CHAR_DATA_WIDTH_INDEX]\n                    ) {\n                      if (\n                        this._terminal.buffer.lines.get(row)[\n                          this._terminal.buffer.x - 2\n                        ]\n                      ) {\n                        this._terminal.buffer.lines.get(row)[\n                          this._terminal.buffer.x - 2\n                        ][Buffer_1.CHAR_DATA_CHAR_INDEX] += char;\n                        this._terminal.buffer.lines.get(row)[\n                          this._terminal.buffer.x - 2\n                        ][3] = char.charCodeAt(0);\n                      }\n                    } else {\n                      this._terminal.buffer.lines.get(row)[\n                        this._terminal.buffer.x - 1\n                      ][Buffer_1.CHAR_DATA_CHAR_INDEX] += char;\n                      this._terminal.buffer.lines.get(row)[\n                        this._terminal.buffer.x - 1\n                      ][3] = char.charCodeAt(0);\n                    }\n                    this._terminal.updateRange(this._terminal.buffer.y);\n                  }\n                  return;\n                }\n                if (\n                  this._terminal.buffer.x + ch_width - 1 >=\n                  this._terminal.cols\n                ) {\n                  if (this._terminal.wraparoundMode) {\n                    this._terminal.buffer.x = 0;\n                    this._terminal.buffer.y++;\n                    if (\n                      this._terminal.buffer.y >\n                      this._terminal.buffer.scrollBottom\n                    ) {\n                      this._terminal.buffer.y--;\n                      this._terminal.scroll(true);\n                    } else {\n                      this._terminal.buffer.lines.get(\n                        this._terminal.buffer.y,\n                      ).isWrapped = true;\n                    }\n                  } else {\n                    if (ch_width === 2) return;\n                  }\n                }\n                row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n                if (this._terminal.insertMode) {\n                  for (var moves = 0; moves < ch_width; ++moves) {\n                    var removed = this._terminal.buffer.lines\n                      .get(\n                        this._terminal.buffer.y + this._terminal.buffer.ybase,\n                      )\n                      .pop();\n                    if (\n                      removed[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0 &&\n                      this._terminal.buffer.lines.get(row)[\n                        this._terminal.cols - 2\n                      ] &&\n                      this._terminal.buffer.lines.get(row)[\n                        this._terminal.cols - 2\n                      ][Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2\n                    ) {\n                      this._terminal.buffer.lines.get(row)[\n                        this._terminal.cols - 2\n                      ] = [this._terminal.curAttr, \" \", 1, \" \".charCodeAt(0)];\n                    }\n                    this._terminal.buffer.lines\n                      .get(row)\n                      .splice(this._terminal.buffer.x, 0, [\n                        this._terminal.curAttr,\n                        \" \",\n                        1,\n                        \" \".charCodeAt(0),\n                      ]);\n                  }\n                }\n                this._terminal.buffer.lines.get(row)[this._terminal.buffer.x] =\n                  [this._terminal.curAttr, char, ch_width, char.charCodeAt(0)];\n                this._terminal.buffer.x++;\n                this._terminal.updateRange(this._terminal.buffer.y);\n                if (ch_width === 2) {\n                  this._terminal.buffer.lines.get(row)[\n                    this._terminal.buffer.x\n                  ] = [this._terminal.curAttr, \"\", 0, undefined];\n                  this._terminal.buffer.x++;\n                }\n              }\n            };\n            InputHandler.prototype.bell = function () {\n              this._terminal.bell();\n            };\n            InputHandler.prototype.lineFeed = function () {\n              if (this._terminal.convertEol) {\n                this._terminal.buffer.x = 0;\n              }\n              this._terminal.buffer.y++;\n              if (\n                this._terminal.buffer.y > this._terminal.buffer.scrollBottom\n              ) {\n                this._terminal.buffer.y--;\n                this._terminal.scroll();\n              }\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x--;\n              }\n              this._terminal.emit(\"linefeed\");\n            };\n            InputHandler.prototype.carriageReturn = function () {\n              this._terminal.buffer.x = 0;\n            };\n            InputHandler.prototype.backspace = function () {\n              if (this._terminal.buffer.x > 0) {\n                this._terminal.buffer.x--;\n              }\n            };\n            InputHandler.prototype.tab = function () {\n              this._terminal.buffer.x = this._terminal.buffer.nextStop();\n            };\n            InputHandler.prototype.shiftOut = function () {\n              this._terminal.setgLevel(1);\n            };\n            InputHandler.prototype.shiftIn = function () {\n              this._terminal.setgLevel(0);\n            };\n            InputHandler.prototype.insertChars = function (params) {\n              var param = params[0];\n              if (param < 1) param = 1;\n              var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n              var j = this._terminal.buffer.x;\n              var ch = [this._terminal.eraseAttr(), \" \", 1, 32];\n              while (param-- && j < this._terminal.cols) {\n                this._terminal.buffer.lines.get(row).splice(j++, 0, ch);\n                this._terminal.buffer.lines.get(row).pop();\n              }\n            };\n            InputHandler.prototype.cursorUp = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.y -= param;\n              if (this._terminal.buffer.y < 0) {\n                this._terminal.buffer.y = 0;\n              }\n            };\n            InputHandler.prototype.cursorDown = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.y += param;\n              if (this._terminal.buffer.y >= this._terminal.rows) {\n                this._terminal.buffer.y = this._terminal.rows - 1;\n              }\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x--;\n              }\n            };\n            InputHandler.prototype.cursorForward = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.x += param;\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x = this._terminal.cols - 1;\n              }\n            };\n            InputHandler.prototype.cursorBackward = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x--;\n              }\n              this._terminal.buffer.x -= param;\n              if (this._terminal.buffer.x < 0) {\n                this._terminal.buffer.x = 0;\n              }\n            };\n            InputHandler.prototype.cursorNextLine = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.y += param;\n              if (this._terminal.buffer.y >= this._terminal.rows) {\n                this._terminal.buffer.y = this._terminal.rows - 1;\n              }\n              this._terminal.buffer.x = 0;\n            };\n            InputHandler.prototype.cursorPrecedingLine = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.y -= param;\n              if (this._terminal.buffer.y < 0) {\n                this._terminal.buffer.y = 0;\n              }\n              this._terminal.buffer.x = 0;\n            };\n            InputHandler.prototype.cursorCharAbsolute = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.x = param - 1;\n            };\n            InputHandler.prototype.cursorPosition = function (params) {\n              var col;\n              var row = params[0] - 1;\n              if (params.length >= 2) {\n                col = params[1] - 1;\n              } else {\n                col = 0;\n              }\n              if (row < 0) {\n                row = 0;\n              } else if (row >= this._terminal.rows) {\n                row = this._terminal.rows - 1;\n              }\n              if (col < 0) {\n                col = 0;\n              } else if (col >= this._terminal.cols) {\n                col = this._terminal.cols - 1;\n              }\n              this._terminal.buffer.x = col;\n              this._terminal.buffer.y = row;\n            };\n            InputHandler.prototype.cursorForwardTab = function (params) {\n              var param = params[0] || 1;\n              while (param--) {\n                this._terminal.buffer.x = this._terminal.buffer.nextStop();\n              }\n            };\n            InputHandler.prototype.eraseInDisplay = function (params) {\n              var j;\n              switch (params[0]) {\n                case 0:\n                  this._terminal.eraseRight(\n                    this._terminal.buffer.x,\n                    this._terminal.buffer.y,\n                  );\n                  j = this._terminal.buffer.y + 1;\n                  for (; j < this._terminal.rows; j++) {\n                    this._terminal.eraseLine(j);\n                  }\n                  break;\n                case 1:\n                  this._terminal.eraseLeft(\n                    this._terminal.buffer.x,\n                    this._terminal.buffer.y,\n                  );\n                  j = this._terminal.buffer.y;\n                  while (j--) {\n                    this._terminal.eraseLine(j);\n                  }\n                  break;\n                case 2:\n                  j = this._terminal.rows;\n                  while (j--) this._terminal.eraseLine(j);\n                  break;\n                case 3:\n                  var scrollBackSize =\n                    this._terminal.buffer.lines.length - this._terminal.rows;\n                  if (scrollBackSize > 0) {\n                    this._terminal.buffer.lines.trimStart(scrollBackSize);\n                    this._terminal.buffer.ybase = Math.max(\n                      this._terminal.buffer.ybase - scrollBackSize,\n                      0,\n                    );\n                    this._terminal.buffer.ydisp = Math.max(\n                      this._terminal.buffer.ydisp - scrollBackSize,\n                      0,\n                    );\n                    this._terminal.emit(\"scroll\", 0);\n                  }\n                  break;\n              }\n            };\n            InputHandler.prototype.eraseInLine = function (params) {\n              switch (params[0]) {\n                case 0:\n                  this._terminal.eraseRight(\n                    this._terminal.buffer.x,\n                    this._terminal.buffer.y,\n                  );\n                  break;\n                case 1:\n                  this._terminal.eraseLeft(\n                    this._terminal.buffer.x,\n                    this._terminal.buffer.y,\n                  );\n                  break;\n                case 2:\n                  this._terminal.eraseLine(this._terminal.buffer.y);\n                  break;\n              }\n            };\n            InputHandler.prototype.insertLines = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n              var scrollBottomRowsOffset =\n                this._terminal.rows - 1 - this._terminal.buffer.scrollBottom;\n              var scrollBottomAbsolute =\n                this._terminal.rows -\n                1 +\n                this._terminal.buffer.ybase -\n                scrollBottomRowsOffset +\n                1;\n              while (param--) {\n                this._terminal.buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n                this._terminal.buffer.lines.splice(\n                  row,\n                  0,\n                  this._terminal.blankLine(true),\n                );\n              }\n              this._terminal.updateRange(this._terminal.buffer.y);\n              this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n            };\n            InputHandler.prototype.deleteLines = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n              var j;\n              j = this._terminal.rows - 1 - this._terminal.buffer.scrollBottom;\n              j = this._terminal.rows - 1 + this._terminal.buffer.ybase - j;\n              while (param--) {\n                this._terminal.buffer.lines.splice(row, 1);\n                this._terminal.buffer.lines.splice(\n                  j,\n                  0,\n                  this._terminal.blankLine(true),\n                );\n              }\n              this._terminal.updateRange(this._terminal.buffer.y);\n              this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n            };\n            InputHandler.prototype.deleteChars = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n              var ch = [this._terminal.eraseAttr(), \" \", 1, 32];\n              while (param--) {\n                this._terminal.buffer.lines\n                  .get(row)\n                  .splice(this._terminal.buffer.x, 1);\n                this._terminal.buffer.lines.get(row).push(ch);\n              }\n              this._terminal.updateRange(this._terminal.buffer.y);\n            };\n            InputHandler.prototype.scrollUp = function (params) {\n              var param = params[0] || 1;\n              while (param--) {\n                this._terminal.buffer.lines.splice(\n                  this._terminal.buffer.ybase + this._terminal.buffer.scrollTop,\n                  1,\n                );\n                this._terminal.buffer.lines.splice(\n                  this._terminal.buffer.ybase +\n                    this._terminal.buffer.scrollBottom,\n                  0,\n                  this._terminal.blankLine(),\n                );\n              }\n              this._terminal.updateRange(this._terminal.buffer.scrollTop);\n              this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n            };\n            InputHandler.prototype.scrollDown = function (params) {\n              var param = params[0] || 1;\n              while (param--) {\n                this._terminal.buffer.lines.splice(\n                  this._terminal.buffer.ybase +\n                    this._terminal.buffer.scrollBottom,\n                  1,\n                );\n                this._terminal.buffer.lines.splice(\n                  this._terminal.buffer.ybase + this._terminal.buffer.scrollTop,\n                  0,\n                  this._terminal.blankLine(),\n                );\n              }\n              this._terminal.updateRange(this._terminal.buffer.scrollTop);\n              this._terminal.updateRange(this._terminal.buffer.scrollBottom);\n            };\n            InputHandler.prototype.eraseChars = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              var row = this._terminal.buffer.y + this._terminal.buffer.ybase;\n              var j = this._terminal.buffer.x;\n              var ch = [this._terminal.eraseAttr(), \" \", 1, 32];\n              while (param-- && j < this._terminal.cols) {\n                this._terminal.buffer.lines.get(row)[j++] = ch;\n              }\n            };\n            InputHandler.prototype.cursorBackwardTab = function (params) {\n              var param = params[0] || 1;\n              while (param--) {\n                this._terminal.buffer.x = this._terminal.buffer.prevStop();\n              }\n            };\n            InputHandler.prototype.charPosAbsolute = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.x = param - 1;\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x = this._terminal.cols - 1;\n              }\n            };\n            InputHandler.prototype.HPositionRelative = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.x += param;\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x = this._terminal.cols - 1;\n              }\n            };\n            InputHandler.prototype.repeatPrecedingCharacter = function (\n              params,\n            ) {\n              var param = params[0] || 1;\n              var line = this._terminal.buffer.lines.get(\n                this._terminal.buffer.ybase + this._terminal.buffer.y,\n              );\n              var ch = line[this._terminal.buffer.x - 1] || [\n                this._terminal.defAttr,\n                \" \",\n                1,\n                32,\n              ];\n              while (param--) {\n                line[this._terminal.buffer.x++] = ch;\n              }\n            };\n            InputHandler.prototype.sendDeviceAttributes = function (params) {\n              if (params[0] > 0) {\n                return;\n              }\n              if (!this._terminal.prefix) {\n                if (\n                  this._terminal.is(\"xterm\") ||\n                  this._terminal.is(\"rxvt-unicode\") ||\n                  this._terminal.is(\"screen\")\n                ) {\n                  this._terminal.send(EscapeSequences_1.C0.ESC + \"[?1;2c\");\n                } else if (this._terminal.is(\"linux\")) {\n                  this._terminal.send(EscapeSequences_1.C0.ESC + \"[?6c\");\n                }\n              } else if (this._terminal.prefix === \">\") {\n                if (this._terminal.is(\"xterm\")) {\n                  this._terminal.send(EscapeSequences_1.C0.ESC + \"[>0;276;0c\");\n                } else if (this._terminal.is(\"rxvt-unicode\")) {\n                  this._terminal.send(EscapeSequences_1.C0.ESC + \"[>85;95;0c\");\n                } else if (this._terminal.is(\"linux\")) {\n                  this._terminal.send(params[0] + \"c\");\n                } else if (this._terminal.is(\"screen\")) {\n                  this._terminal.send(\n                    EscapeSequences_1.C0.ESC + \"[>83;40003;0c\",\n                  );\n                }\n              }\n            };\n            InputHandler.prototype.linePosAbsolute = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.y = param - 1;\n              if (this._terminal.buffer.y >= this._terminal.rows) {\n                this._terminal.buffer.y = this._terminal.rows - 1;\n              }\n            };\n            InputHandler.prototype.VPositionRelative = function (params) {\n              var param = params[0];\n              if (param < 1) {\n                param = 1;\n              }\n              this._terminal.buffer.y += param;\n              if (this._terminal.buffer.y >= this._terminal.rows) {\n                this._terminal.buffer.y = this._terminal.rows - 1;\n              }\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x--;\n              }\n            };\n            InputHandler.prototype.HVPosition = function (params) {\n              if (params[0] < 1) params[0] = 1;\n              if (params[1] < 1) params[1] = 1;\n              this._terminal.buffer.y = params[0] - 1;\n              if (this._terminal.buffer.y >= this._terminal.rows) {\n                this._terminal.buffer.y = this._terminal.rows - 1;\n              }\n              this._terminal.buffer.x = params[1] - 1;\n              if (this._terminal.buffer.x >= this._terminal.cols) {\n                this._terminal.buffer.x = this._terminal.cols - 1;\n              }\n            };\n            InputHandler.prototype.tabClear = function (params) {\n              var param = params[0];\n              if (param <= 0) {\n                delete this._terminal.buffer.tabs[this._terminal.buffer.x];\n              } else if (param === 3) {\n                this._terminal.buffer.tabs = {};\n              }\n            };\n            InputHandler.prototype.setMode = function (params) {\n              if (params.length > 1) {\n                for (var i = 0; i < params.length; i++) {\n                  this.setMode([params[i]]);\n                }\n                return;\n              }\n              if (!this._terminal.prefix) {\n                switch (params[0]) {\n                  case 4:\n                    this._terminal.insertMode = true;\n                    break;\n                  case 20:\n                    break;\n                }\n              } else if (this._terminal.prefix === \"?\") {\n                switch (params[0]) {\n                  case 1:\n                    this._terminal.applicationCursor = true;\n                    break;\n                  case 2:\n                    this._terminal.setgCharset(0, Charsets_1.DEFAULT_CHARSET);\n                    this._terminal.setgCharset(1, Charsets_1.DEFAULT_CHARSET);\n                    this._terminal.setgCharset(2, Charsets_1.DEFAULT_CHARSET);\n                    this._terminal.setgCharset(3, Charsets_1.DEFAULT_CHARSET);\n                    break;\n                  case 3:\n                    this._terminal.savedCols = this._terminal.cols;\n                    this._terminal.resize(132, this._terminal.rows);\n                    break;\n                  case 6:\n                    this._terminal.originMode = true;\n                    break;\n                  case 7:\n                    this._terminal.wraparoundMode = true;\n                    break;\n                  case 12:\n                    break;\n                  case 66:\n                    this._terminal.log(\n                      \"Serial port requested application keypad.\",\n                    );\n                    this._terminal.applicationKeypad = true;\n                    this._terminal.viewport.syncScrollArea();\n                    break;\n                  case 9:\n                  case 1000:\n                  case 1002:\n                  case 1003:\n                    this._terminal.x10Mouse = params[0] === 9;\n                    this._terminal.vt200Mouse = params[0] === 1000;\n                    this._terminal.normalMouse = params[0] > 1000;\n                    this._terminal.mouseEvents = true;\n                    this._terminal.element.classList.add(\"enable-mouse-events\");\n                    this._terminal.selectionManager.disable();\n                    this._terminal.log(\"Binding to mouse events.\");\n                    break;\n                  case 1004:\n                    this._terminal.sendFocus = true;\n                    break;\n                  case 1005:\n                    this._terminal.utfMouse = true;\n                    break;\n                  case 1006:\n                    this._terminal.sgrMouse = true;\n                    break;\n                  case 1015:\n                    this._terminal.urxvtMouse = true;\n                    break;\n                  case 25:\n                    this._terminal.cursorHidden = false;\n                    break;\n                  case 1049:\n                  case 47:\n                  case 1047:\n                    this._terminal.buffers.activateAltBuffer();\n                    this._terminal.selectionManager.setBuffer(\n                      this._terminal.buffer,\n                    );\n                    this._terminal.viewport.syncScrollArea();\n                    this._terminal.showCursor();\n                    break;\n                  case 2004:\n                    this._terminal.bracketedPasteMode = true;\n                    break;\n                }\n              }\n            };\n            InputHandler.prototype.resetMode = function (params) {\n              if (params.length > 1) {\n                for (var i = 0; i < params.length; i++) {\n                  this.resetMode([params[i]]);\n                }\n                return;\n              }\n              if (!this._terminal.prefix) {\n                switch (params[0]) {\n                  case 4:\n                    this._terminal.insertMode = false;\n                    break;\n                  case 20:\n                    break;\n                }\n              } else if (this._terminal.prefix === \"?\") {\n                switch (params[0]) {\n                  case 1:\n                    this._terminal.applicationCursor = false;\n                    break;\n                  case 3:\n                    if (\n                      this._terminal.cols === 132 &&\n                      this._terminal.savedCols\n                    ) {\n                      this._terminal.resize(\n                        this._terminal.savedCols,\n                        this._terminal.rows,\n                      );\n                    }\n                    delete this._terminal.savedCols;\n                    break;\n                  case 6:\n                    this._terminal.originMode = false;\n                    break;\n                  case 7:\n                    this._terminal.wraparoundMode = false;\n                    break;\n                  case 12:\n                    break;\n                  case 66:\n                    this._terminal.log(\"Switching back to normal keypad.\");\n                    this._terminal.applicationKeypad = false;\n                    this._terminal.viewport.syncScrollArea();\n                    break;\n                  case 9:\n                  case 1000:\n                  case 1002:\n                  case 1003:\n                    this._terminal.x10Mouse = false;\n                    this._terminal.vt200Mouse = false;\n                    this._terminal.normalMouse = false;\n                    this._terminal.mouseEvents = false;\n                    this._terminal.element.classList.remove(\n                      \"enable-mouse-events\",\n                    );\n                    this._terminal.selectionManager.enable();\n                    break;\n                  case 1004:\n                    this._terminal.sendFocus = false;\n                    break;\n                  case 1005:\n                    this._terminal.utfMouse = false;\n                    break;\n                  case 1006:\n                    this._terminal.sgrMouse = false;\n                    break;\n                  case 1015:\n                    this._terminal.urxvtMouse = false;\n                    break;\n                  case 25:\n                    this._terminal.cursorHidden = true;\n                    break;\n                  case 1049:\n                  case 47:\n                  case 1047:\n                    this._terminal.buffers.activateNormalBuffer();\n                    this._terminal.selectionManager.setBuffer(\n                      this._terminal.buffer,\n                    );\n                    this._terminal.refresh(0, this._terminal.rows - 1);\n                    this._terminal.viewport.syncScrollArea();\n                    this._terminal.showCursor();\n                    break;\n                  case 2004:\n                    this._terminal.bracketedPasteMode = false;\n                    break;\n                }\n              }\n            };\n            InputHandler.prototype.charAttributes = function (params) {\n              if (params.length === 1 && params[0] === 0) {\n                this._terminal.curAttr = this._terminal.defAttr;\n                return;\n              }\n              var l = params.length;\n              var flags = this._terminal.curAttr >> 18;\n              var fg = (this._terminal.curAttr >> 9) & 0x1ff;\n              var bg = this._terminal.curAttr & 0x1ff;\n              var p;\n              for (var i = 0; i < l; i++) {\n                p = params[i];\n                if (p >= 30 && p <= 37) {\n                  fg = p - 30;\n                } else if (p >= 40 && p <= 47) {\n                  bg = p - 40;\n                } else if (p >= 90 && p <= 97) {\n                  p += 8;\n                  fg = p - 90;\n                } else if (p >= 100 && p <= 107) {\n                  p += 8;\n                  bg = p - 100;\n                } else if (p === 0) {\n                  flags = this._terminal.defAttr >> 18;\n                  fg = (this._terminal.defAttr >> 9) & 0x1ff;\n                  bg = this._terminal.defAttr & 0x1ff;\n                } else if (p === 1) {\n                  flags |= Types_1.FLAGS.BOLD;\n                } else if (p === 4) {\n                  flags |= Types_1.FLAGS.UNDERLINE;\n                } else if (p === 5) {\n                  flags |= Types_1.FLAGS.BLINK;\n                } else if (p === 7) {\n                  flags |= Types_1.FLAGS.INVERSE;\n                } else if (p === 8) {\n                  flags |= Types_1.FLAGS.INVISIBLE;\n                } else if (p === 2) {\n                  flags |= Types_1.FLAGS.DIM;\n                } else if (p === 22) {\n                  flags &= ~Types_1.FLAGS.BOLD;\n                  flags &= ~Types_1.FLAGS.DIM;\n                } else if (p === 24) {\n                  flags &= ~Types_1.FLAGS.UNDERLINE;\n                } else if (p === 25) {\n                  flags &= ~Types_1.FLAGS.BLINK;\n                } else if (p === 27) {\n                  flags &= ~Types_1.FLAGS.INVERSE;\n                } else if (p === 28) {\n                  flags &= ~Types_1.FLAGS.INVISIBLE;\n                } else if (p === 39) {\n                  fg = (this._terminal.defAttr >> 9) & 0x1ff;\n                } else if (p === 49) {\n                  bg = this._terminal.defAttr & 0x1ff;\n                } else if (p === 38) {\n                  if (params[i + 1] === 2) {\n                    i += 2;\n                    fg = this._terminal.matchColor(\n                      params[i] & 0xff,\n                      params[i + 1] & 0xff,\n                      params[i + 2] & 0xff,\n                    );\n                    if (fg === -1) fg = 0x1ff;\n                    i += 2;\n                  } else if (params[i + 1] === 5) {\n                    i += 2;\n                    p = params[i] & 0xff;\n                    fg = p;\n                  }\n                } else if (p === 48) {\n                  if (params[i + 1] === 2) {\n                    i += 2;\n                    bg = this._terminal.matchColor(\n                      params[i] & 0xff,\n                      params[i + 1] & 0xff,\n                      params[i + 2] & 0xff,\n                    );\n                    if (bg === -1) bg = 0x1ff;\n                    i += 2;\n                  } else if (params[i + 1] === 5) {\n                    i += 2;\n                    p = params[i] & 0xff;\n                    bg = p;\n                  }\n                } else if (p === 100) {\n                  fg = (this._terminal.defAttr >> 9) & 0x1ff;\n                  bg = this._terminal.defAttr & 0x1ff;\n                } else {\n                  this._terminal.error(\"Unknown SGR attribute: %d.\", p);\n                }\n              }\n              this._terminal.curAttr = (flags << 18) | (fg << 9) | bg;\n            };\n            InputHandler.prototype.deviceStatus = function (params) {\n              if (!this._terminal.prefix) {\n                switch (params[0]) {\n                  case 5:\n                    this._terminal.send(EscapeSequences_1.C0.ESC + \"[0n\");\n                    break;\n                  case 6:\n                    this._terminal.send(\n                      EscapeSequences_1.C0.ESC +\n                        \"[\" +\n                        (this._terminal.buffer.y + 1) +\n                        \";\" +\n                        (this._terminal.buffer.x + 1) +\n                        \"R\",\n                    );\n                    break;\n                }\n              } else if (this._terminal.prefix === \"?\") {\n                switch (params[0]) {\n                  case 6:\n                    this._terminal.send(\n                      EscapeSequences_1.C0.ESC +\n                        \"[?\" +\n                        (this._terminal.buffer.y + 1) +\n                        \";\" +\n                        (this._terminal.buffer.x + 1) +\n                        \"R\",\n                    );\n                    break;\n                  case 15:\n                    break;\n                  case 25:\n                    break;\n                  case 26:\n                    break;\n                  case 53:\n                    break;\n                }\n              }\n            };\n            InputHandler.prototype.softReset = function (params) {\n              this._terminal.cursorHidden = false;\n              this._terminal.insertMode = false;\n              this._terminal.originMode = false;\n              this._terminal.wraparoundMode = true;\n              this._terminal.applicationKeypad = false;\n              this._terminal.viewport.syncScrollArea();\n              this._terminal.applicationCursor = false;\n              this._terminal.buffer.scrollTop = 0;\n              this._terminal.buffer.scrollBottom = this._terminal.rows - 1;\n              this._terminal.curAttr = this._terminal.defAttr;\n              this._terminal.buffer.x = this._terminal.buffer.y = 0;\n              this._terminal.charset = null;\n              this._terminal.glevel = 0;\n              this._terminal.charsets = [null];\n            };\n            InputHandler.prototype.setCursorStyle = function (params) {\n              var param = params[0] < 1 ? 1 : params[0];\n              switch (param) {\n                case 1:\n                case 2:\n                  this._terminal.setOption(\"cursorStyle\", \"block\");\n                  break;\n                case 3:\n                case 4:\n                  this._terminal.setOption(\"cursorStyle\", \"underline\");\n                  break;\n                case 5:\n                case 6:\n                  this._terminal.setOption(\"cursorStyle\", \"bar\");\n                  break;\n              }\n              var isBlinking = param % 2 === 1;\n              this._terminal.setOption(\"cursorBlink\", isBlinking);\n            };\n            InputHandler.prototype.setScrollRegion = function (params) {\n              if (this._terminal.prefix) return;\n              this._terminal.buffer.scrollTop = (params[0] || 1) - 1;\n              this._terminal.buffer.scrollBottom =\n                (params[1] && params[1] <= this._terminal.rows\n                  ? params[1]\n                  : this._terminal.rows) - 1;\n              this._terminal.buffer.x = 0;\n              this._terminal.buffer.y = 0;\n            };\n            InputHandler.prototype.saveCursor = function (params) {\n              this._terminal.buffer.savedX = this._terminal.buffer.x;\n              this._terminal.buffer.savedY = this._terminal.buffer.y;\n            };\n            InputHandler.prototype.restoreCursor = function (params) {\n              this._terminal.buffer.x = this._terminal.buffer.savedX || 0;\n              this._terminal.buffer.y = this._terminal.buffer.savedY || 0;\n            };\n            return InputHandler;\n          })();\n          exports.InputHandler = InputHandler;\n        },\n        {\n          \"./Buffer\": 1,\n          \"./CharWidth\": 3,\n          \"./Charsets\": 4,\n          \"./EscapeSequences\": 6,\n          \"./renderer/Types\": 27,\n        },\n      ],\n      9: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Types_1 = require(\"./Types\");\n          var MouseZoneManager_1 = require(\"./input/MouseZoneManager\");\n          var EventEmitter_1 = require(\"./EventEmitter\");\n          var protocolClause = \"(https?:\\\\/\\\\/)\";\n          var domainCharacterSet = \"[\\\\da-z\\\\.-]+\";\n          var negatedDomainCharacterSet = \"[^\\\\da-z\\\\.-]+\";\n          var domainBodyClause = \"(\" + domainCharacterSet + \")\";\n          var tldClause = \"([a-z\\\\.]{2,6})\";\n          var ipClause = \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3})\";\n          var localHostClause = \"(localhost)\";\n          var portClause = \"(:\\\\d{1,5})\";\n          var hostClause =\n            \"((\" +\n            domainBodyClause +\n            \"\\\\.\" +\n            tldClause +\n            \")|\" +\n            ipClause +\n            \"|\" +\n            localHostClause +\n            \")\" +\n            portClause +\n            \"?\";\n          var pathClause = \"(\\\\/[\\\\/\\\\w\\\\.\\\\-%~]*)*\";\n          var queryStringHashFragmentCharacterSet =\n            \"[0-9\\\\w\\\\[\\\\]\\\\(\\\\)\\\\/\\\\?\\\\!#@$%&'*+,:;~\\\\=\\\\.\\\\-]*\";\n          var queryStringClause =\n            \"(\\\\?\" + queryStringHashFragmentCharacterSet + \")?\";\n          var hashFragmentClause =\n            \"(#\" + queryStringHashFragmentCharacterSet + \")?\";\n          var negatedPathCharacterSet = \"[^\\\\/\\\\w\\\\.\\\\-%]+\";\n          var bodyClause =\n            hostClause + pathClause + queryStringClause + hashFragmentClause;\n          var start = \"(?:^|\" + negatedDomainCharacterSet + \")(\";\n          var end = \")($|\" + negatedPathCharacterSet + \")\";\n          var strictUrlRegex = new RegExp(\n            start + protocolClause + bodyClause + end,\n          );\n          var HYPERTEXT_LINK_MATCHER_ID = 0;\n          var Linkifier = (function (_super) {\n            __extends(Linkifier, _super);\n            function Linkifier(_terminal) {\n              var _this = _super.call(this) || this;\n              _this._terminal = _terminal;\n              _this._linkMatchers = [];\n              _this._nextLinkMatcherId = HYPERTEXT_LINK_MATCHER_ID;\n              _this._rowsToLinkify = {\n                start: null,\n                end: null,\n              };\n              _this.registerLinkMatcher(strictUrlRegex, null, {\n                matchIndex: 1,\n              });\n              return _this;\n            }\n            Linkifier.prototype.attachToDom = function (mouseZoneManager) {\n              this._mouseZoneManager = mouseZoneManager;\n            };\n            Linkifier.prototype.linkifyRows = function (start, end) {\n              var _this = this;\n              if (!this._mouseZoneManager) {\n                return;\n              }\n              if (!this._rowsToLinkify.start) {\n                this._rowsToLinkify.start = start;\n                this._rowsToLinkify.end = end;\n              } else {\n                this._rowsToLinkify.start =\n                  this._rowsToLinkify.start < start\n                    ? this._rowsToLinkify.start\n                    : start;\n                this._rowsToLinkify.end =\n                  this._rowsToLinkify.end > end ? this._rowsToLinkify.end : end;\n              }\n              this._mouseZoneManager.clearAll(start, end);\n              if (this._rowsTimeoutId) {\n                clearTimeout(this._rowsTimeoutId);\n              }\n              this._rowsTimeoutId = setTimeout(function () {\n                return _this._linkifyRows();\n              }, Linkifier.TIME_BEFORE_LINKIFY);\n            };\n            Linkifier.prototype._linkifyRows = function () {\n              this._rowsTimeoutId = null;\n              for (\n                var i = this._rowsToLinkify.start;\n                i <= this._rowsToLinkify.end;\n                i++\n              ) {\n                this._linkifyRow(i);\n              }\n              this._rowsToLinkify.start = null;\n              this._rowsToLinkify.end = null;\n            };\n            Linkifier.prototype.setHypertextLinkHandler = function (handler) {\n              this._linkMatchers[HYPERTEXT_LINK_MATCHER_ID].handler = handler;\n            };\n            Linkifier.prototype.setHypertextValidationCallback = function (\n              callback,\n            ) {\n              this._linkMatchers[HYPERTEXT_LINK_MATCHER_ID].validationCallback =\n                callback;\n            };\n            Linkifier.prototype.registerLinkMatcher = function (\n              regex,\n              handler,\n              options,\n            ) {\n              if (options === void 0) {\n                options = {};\n              }\n              if (\n                this._nextLinkMatcherId !== HYPERTEXT_LINK_MATCHER_ID &&\n                !handler\n              ) {\n                throw new Error(\"handler must be defined\");\n              }\n              var matcher = {\n                id: this._nextLinkMatcherId++,\n                regex: regex,\n                handler: handler,\n                matchIndex: options.matchIndex,\n                validationCallback: options.validationCallback,\n                hoverTooltipCallback: options.tooltipCallback,\n                hoverLeaveCallback: options.leaveCallback,\n                priority: options.priority || 0,\n              };\n              this._addLinkMatcherToList(matcher);\n              return matcher.id;\n            };\n            Linkifier.prototype._addLinkMatcherToList = function (matcher) {\n              if (this._linkMatchers.length === 0) {\n                this._linkMatchers.push(matcher);\n                return;\n              }\n              for (var i = this._linkMatchers.length - 1; i >= 0; i--) {\n                if (matcher.priority <= this._linkMatchers[i].priority) {\n                  this._linkMatchers.splice(i + 1, 0, matcher);\n                  return;\n                }\n              }\n              this._linkMatchers.splice(0, 0, matcher);\n            };\n            Linkifier.prototype.deregisterLinkMatcher = function (matcherId) {\n              for (var i = 1; i < this._linkMatchers.length; i++) {\n                if (this._linkMatchers[i].id === matcherId) {\n                  this._linkMatchers.splice(i, 1);\n                  return true;\n                }\n              }\n              return false;\n            };\n            Linkifier.prototype._linkifyRow = function (rowIndex) {\n              var absoluteRowIndex = this._terminal.buffer.ydisp + rowIndex;\n              if (absoluteRowIndex >= this._terminal.buffer.lines.length) {\n                return;\n              }\n              var text = this._terminal.buffer.translateBufferLineToString(\n                absoluteRowIndex,\n                false,\n              );\n              for (var i = 0; i < this._linkMatchers.length; i++) {\n                this._doLinkifyRow(rowIndex, text, this._linkMatchers[i]);\n              }\n            };\n            Linkifier.prototype._doLinkifyRow = function (\n              rowIndex,\n              text,\n              matcher,\n              offset,\n            ) {\n              var _this = this;\n              if (offset === void 0) {\n                offset = 0;\n              }\n              var result = [];\n              var isHttpLinkMatcher = matcher.id === HYPERTEXT_LINK_MATCHER_ID;\n              var match = text.match(matcher.regex);\n              if (!match || match.length === 0) {\n                return;\n              }\n              var uri =\n                match[\n                  typeof matcher.matchIndex !== \"number\"\n                    ? 0\n                    : matcher.matchIndex\n                ];\n              var index = text.indexOf(uri);\n              if (matcher.validationCallback) {\n                matcher.validationCallback(uri, function (isValid) {\n                  if (_this._rowsTimeoutId) {\n                    return;\n                  }\n                  if (isValid) {\n                    _this._addLink(offset + index, rowIndex, uri, matcher);\n                  }\n                });\n              } else {\n                this._addLink(offset + index, rowIndex, uri, matcher);\n              }\n              var remainingStartIndex = index + uri.length;\n              var remainingText = text.substr(remainingStartIndex);\n              if (remainingText.length > 0) {\n                this._doLinkifyRow(\n                  rowIndex,\n                  remainingText,\n                  matcher,\n                  offset + remainingStartIndex,\n                );\n              }\n            };\n            Linkifier.prototype._addLink = function (x, y, uri, matcher) {\n              var _this = this;\n              this._mouseZoneManager.add(\n                new MouseZoneManager_1.MouseZone(\n                  x + 1,\n                  x + 1 + uri.length,\n                  y + 1,\n                  function (e) {\n                    if (matcher.handler) {\n                      return matcher.handler(e, uri);\n                    }\n                    window.open(uri, \"_blank\");\n                  },\n                  function (e) {\n                    _this.emit(Types_1.LinkHoverEventTypes.HOVER, {\n                      x: x,\n                      y: y,\n                      length: uri.length,\n                    });\n                    _this._terminal.element.style.cursor = \"pointer\";\n                  },\n                  function (e) {\n                    _this.emit(Types_1.LinkHoverEventTypes.TOOLTIP, {\n                      x: x,\n                      y: y,\n                      length: uri.length,\n                    });\n                    if (matcher.hoverTooltipCallback) {\n                      matcher.hoverTooltipCallback(e, uri);\n                    }\n                  },\n                  function () {\n                    _this.emit(Types_1.LinkHoverEventTypes.LEAVE, {\n                      x: x,\n                      y: y,\n                      length: uri.length,\n                    });\n                    _this._terminal.element.style.cursor = \"\";\n                    if (matcher.hoverLeaveCallback) {\n                      matcher.hoverLeaveCallback();\n                    }\n                  },\n                ),\n              );\n            };\n            Linkifier.TIME_BEFORE_LINKIFY = 200;\n            return Linkifier;\n          })(EventEmitter_1.EventEmitter);\n          exports.Linkifier = Linkifier;\n        },\n        { \"./EventEmitter\": 7, \"./Types\": 14, \"./input/MouseZoneManager\": 17 },\n      ],\n      10: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var EscapeSequences_1 = require(\"./EscapeSequences\");\n          var Charsets_1 = require(\"./Charsets\");\n          var normalStateHandler = {};\n          normalStateHandler[EscapeSequences_1.C0.BEL] = function (\n            parser,\n            handler,\n          ) {\n            return handler.bell();\n          };\n          normalStateHandler[EscapeSequences_1.C0.LF] = function (\n            parser,\n            handler,\n          ) {\n            return handler.lineFeed();\n          };\n          normalStateHandler[EscapeSequences_1.C0.VT] =\n            normalStateHandler[EscapeSequences_1.C0.LF];\n          normalStateHandler[EscapeSequences_1.C0.FF] =\n            normalStateHandler[EscapeSequences_1.C0.LF];\n          normalStateHandler[EscapeSequences_1.C0.CR] = function (\n            parser,\n            handler,\n          ) {\n            return handler.carriageReturn();\n          };\n          normalStateHandler[EscapeSequences_1.C0.BS] = function (\n            parser,\n            handler,\n          ) {\n            return handler.backspace();\n          };\n          normalStateHandler[EscapeSequences_1.C0.HT] = function (\n            parser,\n            handler,\n          ) {\n            return handler.tab();\n          };\n          normalStateHandler[EscapeSequences_1.C0.SO] = function (\n            parser,\n            handler,\n          ) {\n            return handler.shiftOut();\n          };\n          normalStateHandler[EscapeSequences_1.C0.SI] = function (\n            parser,\n            handler,\n          ) {\n            return handler.shiftIn();\n          };\n          normalStateHandler[EscapeSequences_1.C0.ESC] = function (\n            parser,\n            handler,\n          ) {\n            return parser.setState(ParserState.ESCAPED);\n          };\n          var escapedStateHandler = {};\n          escapedStateHandler[\"[\"] = function (parser, terminal) {\n            terminal.params = [];\n            terminal.currentParam = 0;\n            parser.setState(ParserState.CSI_PARAM);\n          };\n          escapedStateHandler[\"]\"] = function (parser, terminal) {\n            terminal.params = [];\n            terminal.currentParam = 0;\n            parser.setState(ParserState.OSC);\n          };\n          escapedStateHandler[\"P\"] = function (parser, terminal) {\n            terminal.params = [];\n            terminal.currentParam = 0;\n            parser.setState(ParserState.DCS);\n          };\n          escapedStateHandler[\"_\"] = function (parser, terminal) {\n            parser.setState(ParserState.IGNORE);\n          };\n          escapedStateHandler[\"^\"] = function (parser, terminal) {\n            parser.setState(ParserState.IGNORE);\n          };\n          escapedStateHandler[\"c\"] = function (parser, terminal) {\n            terminal.reset();\n          };\n          escapedStateHandler[\"E\"] = function (parser, terminal) {\n            terminal.buffer.x = 0;\n            terminal.index();\n            parser.setState(ParserState.NORMAL);\n          };\n          escapedStateHandler[\"D\"] = function (parser, terminal) {\n            terminal.index();\n            parser.setState(ParserState.NORMAL);\n          };\n          escapedStateHandler[\"M\"] = function (parser, terminal) {\n            terminal.reverseIndex();\n            parser.setState(ParserState.NORMAL);\n          };\n          escapedStateHandler[\"%\"] = function (parser, terminal) {\n            terminal.setgLevel(0);\n            terminal.setgCharset(0, Charsets_1.DEFAULT_CHARSET);\n            parser.setState(ParserState.NORMAL);\n            parser.skipNextChar();\n          };\n          escapedStateHandler[EscapeSequences_1.C0.CAN] = function (parser) {\n            return parser.setState(ParserState.NORMAL);\n          };\n          var csiParamStateHandler = {};\n          csiParamStateHandler[\"?\"] = function (parser) {\n            return parser.setPrefix(\"?\");\n          };\n          csiParamStateHandler[\">\"] = function (parser) {\n            return parser.setPrefix(\">\");\n          };\n          csiParamStateHandler[\"!\"] = function (parser) {\n            return parser.setPrefix(\"!\");\n          };\n          csiParamStateHandler[\"0\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10);\n          };\n          csiParamStateHandler[\"1\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 1);\n          };\n          csiParamStateHandler[\"2\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 2);\n          };\n          csiParamStateHandler[\"3\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 3);\n          };\n          csiParamStateHandler[\"4\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 4);\n          };\n          csiParamStateHandler[\"5\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 5);\n          };\n          csiParamStateHandler[\"6\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 6);\n          };\n          csiParamStateHandler[\"7\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 7);\n          };\n          csiParamStateHandler[\"8\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 8);\n          };\n          csiParamStateHandler[\"9\"] = function (parser) {\n            return parser.setParam(parser.getParam() * 10 + 9);\n          };\n          csiParamStateHandler[\"$\"] = function (parser) {\n            return parser.setPostfix(\"$\");\n          };\n          csiParamStateHandler['\"'] = function (parser) {\n            return parser.setPostfix('\"');\n          };\n          csiParamStateHandler[\" \"] = function (parser) {\n            return parser.setPostfix(\" \");\n          };\n          csiParamStateHandler[\"'\"] = function (parser) {\n            return parser.setPostfix(\"'\");\n          };\n          csiParamStateHandler[\";\"] = function (parser) {\n            return parser.finalizeParam();\n          };\n          csiParamStateHandler[EscapeSequences_1.C0.CAN] = function (parser) {\n            return parser.setState(ParserState.NORMAL);\n          };\n          var csiStateHandler = {};\n          csiStateHandler[\"@\"] = function (handler, params, prefix) {\n            return handler.insertChars(params);\n          };\n          csiStateHandler[\"A\"] = function (handler, params, prefix) {\n            return handler.cursorUp(params);\n          };\n          csiStateHandler[\"B\"] = function (handler, params, prefix) {\n            return handler.cursorDown(params);\n          };\n          csiStateHandler[\"C\"] = function (handler, params, prefix) {\n            return handler.cursorForward(params);\n          };\n          csiStateHandler[\"D\"] = function (handler, params, prefix) {\n            return handler.cursorBackward(params);\n          };\n          csiStateHandler[\"E\"] = function (handler, params, prefix) {\n            return handler.cursorNextLine(params);\n          };\n          csiStateHandler[\"F\"] = function (handler, params, prefix) {\n            return handler.cursorPrecedingLine(params);\n          };\n          csiStateHandler[\"G\"] = function (handler, params, prefix) {\n            return handler.cursorCharAbsolute(params);\n          };\n          csiStateHandler[\"H\"] = function (handler, params, prefix) {\n            return handler.cursorPosition(params);\n          };\n          csiStateHandler[\"I\"] = function (handler, params, prefix) {\n            return handler.cursorForwardTab(params);\n          };\n          csiStateHandler[\"J\"] = function (handler, params, prefix) {\n            return handler.eraseInDisplay(params);\n          };\n          csiStateHandler[\"K\"] = function (handler, params, prefix) {\n            return handler.eraseInLine(params);\n          };\n          csiStateHandler[\"L\"] = function (handler, params, prefix) {\n            return handler.insertLines(params);\n          };\n          csiStateHandler[\"M\"] = function (handler, params, prefix) {\n            return handler.deleteLines(params);\n          };\n          csiStateHandler[\"P\"] = function (handler, params, prefix) {\n            return handler.deleteChars(params);\n          };\n          csiStateHandler[\"S\"] = function (handler, params, prefix) {\n            return handler.scrollUp(params);\n          };\n          csiStateHandler[\"T\"] = function (handler, params, prefix) {\n            if (params.length < 2 && !prefix) {\n              handler.scrollDown(params);\n            }\n          };\n          csiStateHandler[\"X\"] = function (handler, params, prefix) {\n            return handler.eraseChars(params);\n          };\n          csiStateHandler[\"Z\"] = function (handler, params, prefix) {\n            return handler.cursorBackwardTab(params);\n          };\n          csiStateHandler[\"`\"] = function (handler, params, prefix) {\n            return handler.charPosAbsolute(params);\n          };\n          csiStateHandler[\"a\"] = function (handler, params, prefix) {\n            return handler.HPositionRelative(params);\n          };\n          csiStateHandler[\"b\"] = function (handler, params, prefix) {\n            return handler.repeatPrecedingCharacter(params);\n          };\n          csiStateHandler[\"c\"] = function (handler, params, prefix) {\n            return handler.sendDeviceAttributes(params);\n          };\n          csiStateHandler[\"d\"] = function (handler, params, prefix) {\n            return handler.linePosAbsolute(params);\n          };\n          csiStateHandler[\"e\"] = function (handler, params, prefix) {\n            return handler.VPositionRelative(params);\n          };\n          csiStateHandler[\"f\"] = function (handler, params, prefix) {\n            return handler.HVPosition(params);\n          };\n          csiStateHandler[\"g\"] = function (handler, params, prefix) {\n            return handler.tabClear(params);\n          };\n          csiStateHandler[\"h\"] = function (handler, params, prefix) {\n            return handler.setMode(params);\n          };\n          csiStateHandler[\"l\"] = function (handler, params, prefix) {\n            return handler.resetMode(params);\n          };\n          csiStateHandler[\"m\"] = function (handler, params, prefix) {\n            return handler.charAttributes(params);\n          };\n          csiStateHandler[\"n\"] = function (handler, params, prefix) {\n            return handler.deviceStatus(params);\n          };\n          csiStateHandler[\"p\"] = function (handler, params, prefix) {\n            switch (prefix) {\n              case \"!\":\n                handler.softReset(params);\n                break;\n            }\n          };\n          csiStateHandler[\"q\"] = function (handler, params, prefix, postfix) {\n            if (postfix === \" \") {\n              handler.setCursorStyle(params);\n            }\n          };\n          csiStateHandler[\"r\"] = function (handler, params) {\n            return handler.setScrollRegion(params);\n          };\n          csiStateHandler[\"s\"] = function (handler, params) {\n            return handler.saveCursor(params);\n          };\n          csiStateHandler[\"u\"] = function (handler, params) {\n            return handler.restoreCursor(params);\n          };\n          csiStateHandler[EscapeSequences_1.C0.CAN] = function (\n            handler,\n            params,\n            prefix,\n            postfix,\n            parser,\n          ) {\n            return parser.setState(ParserState.NORMAL);\n          };\n          var ParserState;\n          (function (ParserState) {\n            ParserState[(ParserState[\"NORMAL\"] = 0)] = \"NORMAL\";\n            ParserState[(ParserState[\"ESCAPED\"] = 1)] = \"ESCAPED\";\n            ParserState[(ParserState[\"CSI_PARAM\"] = 2)] = \"CSI_PARAM\";\n            ParserState[(ParserState[\"CSI\"] = 3)] = \"CSI\";\n            ParserState[(ParserState[\"OSC\"] = 4)] = \"OSC\";\n            ParserState[(ParserState[\"CHARSET\"] = 5)] = \"CHARSET\";\n            ParserState[(ParserState[\"DCS\"] = 6)] = \"DCS\";\n            ParserState[(ParserState[\"IGNORE\"] = 7)] = \"IGNORE\";\n          })((ParserState = exports.ParserState || (exports.ParserState = {})));\n          var Parser = (function () {\n            function Parser(_inputHandler, _terminal) {\n              this._inputHandler = _inputHandler;\n              this._terminal = _terminal;\n              this._state = ParserState.NORMAL;\n            }\n            Parser.prototype.parse = function (data) {\n              var l = data.length;\n              var j;\n              var cs;\n              var ch;\n              var code;\n              var low;\n              var cursorStartX = this._terminal.buffer.x;\n              var cursorStartY = this._terminal.buffer.y;\n              if (this._terminal.debug) {\n                this._terminal.log(\"data: \" + data);\n              }\n              this._position = 0;\n              if (this._terminal.surrogate_high) {\n                data = this._terminal.surrogate_high + data;\n                this._terminal.surrogate_high = \"\";\n              }\n              for (; this._position < l; this._position++) {\n                ch = data[this._position];\n                code = data.charCodeAt(this._position);\n                if (0xd800 <= code && code <= 0xdbff) {\n                  low = data.charCodeAt(this._position + 1);\n                  if (isNaN(low)) {\n                    this._terminal.surrogate_high = ch;\n                    continue;\n                  }\n                  code = (code - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n                  ch += data.charAt(this._position + 1);\n                }\n                if (0xdc00 <= code && code <= 0xdfff) continue;\n                switch (this._state) {\n                  case ParserState.NORMAL:\n                    if (ch in normalStateHandler) {\n                      normalStateHandler[ch](this, this._inputHandler);\n                    } else {\n                      this._inputHandler.addChar(ch, code);\n                    }\n                    break;\n                  case ParserState.ESCAPED:\n                    if (ch in escapedStateHandler) {\n                      escapedStateHandler[ch](this, this._terminal);\n                      break;\n                    }\n                    switch (ch) {\n                      case \"(\":\n                      case \")\":\n                      case \"*\":\n                      case \"+\":\n                      case \"-\":\n                      case \".\":\n                        switch (ch) {\n                          case \"(\":\n                            this._terminal.gcharset = 0;\n                            break;\n                          case \")\":\n                            this._terminal.gcharset = 1;\n                            break;\n                          case \"*\":\n                            this._terminal.gcharset = 2;\n                            break;\n                          case \"+\":\n                            this._terminal.gcharset = 3;\n                            break;\n                          case \"-\":\n                            this._terminal.gcharset = 1;\n                            break;\n                          case \".\":\n                            this._terminal.gcharset = 2;\n                            break;\n                        }\n                        this._state = ParserState.CHARSET;\n                        break;\n                      case \"/\":\n                        this._terminal.gcharset = 3;\n                        this._state = ParserState.CHARSET;\n                        this._position--;\n                        break;\n                      case \"N\":\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"O\":\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"n\":\n                        this._terminal.setgLevel(2);\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"o\":\n                        this._terminal.setgLevel(3);\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"|\":\n                        this._terminal.setgLevel(3);\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"}\":\n                        this._terminal.setgLevel(2);\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"~\":\n                        this._terminal.setgLevel(1);\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"7\":\n                        this._inputHandler.saveCursor();\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"8\":\n                        this._inputHandler.restoreCursor();\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"#\":\n                        this._state = ParserState.NORMAL;\n                        this._position++;\n                        break;\n                      case \"H\":\n                        this._terminal.tabSet();\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \"=\":\n                        this._terminal.log(\n                          \"Serial port requested application keypad.\",\n                        );\n                        this._terminal.applicationKeypad = true;\n                        if (this._terminal.viewport) {\n                          this._terminal.viewport.syncScrollArea();\n                        }\n                        this._state = ParserState.NORMAL;\n                        break;\n                      case \">\":\n                        this._terminal.log(\"Switching back to normal keypad.\");\n                        this._terminal.applicationKeypad = false;\n                        if (this._terminal.viewport) {\n                          this._terminal.viewport.syncScrollArea();\n                        }\n                        this._state = ParserState.NORMAL;\n                        break;\n                      default:\n                        this._state = ParserState.NORMAL;\n                        this._terminal.error(\"Unknown ESC control: %s.\", ch);\n                        break;\n                    }\n                    break;\n                  case ParserState.CHARSET:\n                    if (ch in Charsets_1.CHARSETS) {\n                      cs = Charsets_1.CHARSETS[ch];\n                      if (ch === \"/\") {\n                        this.skipNextChar();\n                      }\n                    } else {\n                      cs = Charsets_1.DEFAULT_CHARSET;\n                    }\n                    this._terminal.setgCharset(this._terminal.gcharset, cs);\n                    this._terminal.gcharset = null;\n                    this._state = ParserState.NORMAL;\n                    break;\n                  case ParserState.OSC:\n                    if (\n                      ch === EscapeSequences_1.C0.ESC ||\n                      ch === EscapeSequences_1.C0.BEL\n                    ) {\n                      if (ch === EscapeSequences_1.C0.ESC) this._position++;\n                      this._terminal.params.push(this._terminal.currentParam);\n                      switch (this._terminal.params[0]) {\n                        case 0:\n                        case 1:\n                        case 2:\n                          if (this._terminal.params[1]) {\n                            this._terminal.title = this._terminal.params[1];\n                            this._terminal.handleTitle(this._terminal.title);\n                          }\n                          break;\n                        case 3:\n                          break;\n                        case 4:\n                        case 5:\n                          break;\n                        case 10:\n                        case 11:\n                        case 12:\n                        case 13:\n                        case 14:\n                        case 15:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 19:\n                          break;\n                        case 46:\n                          break;\n                        case 50:\n                          break;\n                        case 51:\n                          break;\n                        case 52:\n                          break;\n                        case 104:\n                        case 105:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                          break;\n                      }\n                      this._terminal.params = [];\n                      this._terminal.currentParam = 0;\n                      this._state = ParserState.NORMAL;\n                    } else {\n                      if (!this._terminal.params.length) {\n                        if (ch >= \"0\" && ch <= \"9\") {\n                          this._terminal.currentParam =\n                            this._terminal.currentParam * 10 +\n                            ch.charCodeAt(0) -\n                            48;\n                        } else if (ch === \";\") {\n                          this._terminal.params.push(\n                            this._terminal.currentParam,\n                          );\n                          this._terminal.currentParam = \"\";\n                        }\n                      } else {\n                        this._terminal.currentParam += ch;\n                      }\n                    }\n                    break;\n                  case ParserState.CSI_PARAM:\n                    if (ch in csiParamStateHandler) {\n                      csiParamStateHandler[ch](this);\n                      break;\n                    }\n                    this.finalizeParam();\n                    this._state = ParserState.CSI;\n                  case ParserState.CSI:\n                    if (ch in csiStateHandler) {\n                      if (this._terminal.debug) {\n                        this._terminal.log(\n                          \"CSI \" +\n                            (this._terminal.prefix\n                              ? this._terminal.prefix\n                              : \"\") +\n                            \" \" +\n                            (this._terminal.params\n                              ? this._terminal.params.join(\";\")\n                              : \"\") +\n                            \" \" +\n                            (this._terminal.postfix\n                              ? this._terminal.postfix\n                              : \"\") +\n                            \" \" +\n                            ch,\n                        );\n                      }\n                      csiStateHandler[ch](\n                        this._inputHandler,\n                        this._terminal.params,\n                        this._terminal.prefix,\n                        this._terminal.postfix,\n                        this,\n                      );\n                    } else {\n                      this._terminal.error(\"Unknown CSI code: %s.\", ch);\n                    }\n                    this._state = ParserState.NORMAL;\n                    this._terminal.prefix = \"\";\n                    this._terminal.postfix = \"\";\n                    break;\n                  case ParserState.DCS:\n                    if (\n                      ch === EscapeSequences_1.C0.ESC ||\n                      ch === EscapeSequences_1.C0.BEL\n                    ) {\n                      if (ch === EscapeSequences_1.C0.ESC) this._position++;\n                      var pt = void 0;\n                      var valid = void 0;\n                      switch (this._terminal.prefix) {\n                        case \"\":\n                          break;\n                        case \"$q\":\n                          pt = this._terminal.currentParam;\n                          valid = false;\n                          switch (pt) {\n                            case '\"q':\n                              pt = '0\"q';\n                              break;\n                            case '\"p':\n                              pt = '61\"p';\n                              break;\n                            case \"r\":\n                              pt =\n                                \"\" +\n                                (this._terminal.buffer.scrollTop + 1) +\n                                \";\" +\n                                (this._terminal.buffer.scrollBottom + 1) +\n                                \"r\";\n                              break;\n                            case \"m\":\n                              pt = \"0m\";\n                              break;\n                            default:\n                              this._terminal.error(\"Unknown DCS Pt: %s.\", pt);\n                              pt = \"\";\n                              break;\n                          }\n                          this._terminal.send(\n                            EscapeSequences_1.C0.ESC +\n                              \"P\" +\n                              +valid +\n                              \"$r\" +\n                              pt +\n                              EscapeSequences_1.C0.ESC +\n                              \"\\\\\",\n                          );\n                          break;\n                        case \"+p\":\n                          break;\n                        case \"+q\":\n                          pt = this._terminal.currentParam;\n                          valid = false;\n                          this._terminal.send(\n                            EscapeSequences_1.C0.ESC +\n                              \"P\" +\n                              +valid +\n                              \"+r\" +\n                              pt +\n                              EscapeSequences_1.C0.ESC +\n                              \"\\\\\",\n                          );\n                          break;\n                        default:\n                          this._terminal.error(\n                            \"Unknown DCS prefix: %s.\",\n                            this._terminal.prefix,\n                          );\n                          break;\n                      }\n                      this._terminal.currentParam = 0;\n                      this._terminal.prefix = \"\";\n                      this._state = ParserState.NORMAL;\n                    } else if (!this._terminal.currentParam) {\n                      if (!this._terminal.prefix && ch !== \"$\" && ch !== \"+\") {\n                        this._terminal.currentParam = ch;\n                      } else if (this._terminal.prefix.length === 2) {\n                        this._terminal.currentParam = ch;\n                      } else {\n                        this._terminal.prefix += ch;\n                      }\n                    } else {\n                      this._terminal.currentParam += ch;\n                    }\n                    break;\n                  case ParserState.IGNORE:\n                    if (\n                      ch === EscapeSequences_1.C0.ESC ||\n                      ch === EscapeSequences_1.C0.BEL\n                    ) {\n                      if (ch === EscapeSequences_1.C0.ESC) this._position++;\n                      this._state = ParserState.NORMAL;\n                    }\n                    break;\n                }\n              }\n              if (\n                this._terminal.buffer.x !== cursorStartX ||\n                this._terminal.buffer.y !== cursorStartY\n              ) {\n                this._terminal.emit(\"cursormove\");\n              }\n              return this._state;\n            };\n            Parser.prototype.setState = function (state) {\n              this._state = state;\n            };\n            Parser.prototype.setPrefix = function (prefix) {\n              this._terminal.prefix = prefix;\n            };\n            Parser.prototype.setPostfix = function (postfix) {\n              this._terminal.postfix = postfix;\n            };\n            Parser.prototype.setParam = function (param) {\n              this._terminal.currentParam = param;\n            };\n            Parser.prototype.getParam = function () {\n              return this._terminal.currentParam;\n            };\n            Parser.prototype.finalizeParam = function () {\n              this._terminal.params.push(this._terminal.currentParam);\n              this._terminal.currentParam = 0;\n            };\n            Parser.prototype.skipNextChar = function () {\n              this._position++;\n            };\n            return Parser;\n          })();\n          exports.Parser = Parser;\n        },\n        { \"./Charsets\": 4, \"./EscapeSequences\": 6 },\n      ],\n      11: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var MouseHelper_1 = require(\"./utils/MouseHelper\");\n          var Browser = require(\"./utils/Browser\");\n          var EventEmitter_1 = require(\"./EventEmitter\");\n          var SelectionModel_1 = require(\"./SelectionModel\");\n          var Buffer_1 = require(\"./Buffer\");\n          var DRAG_SCROLL_MAX_THRESHOLD = 50;\n          var DRAG_SCROLL_MAX_SPEED = 15;\n          var DRAG_SCROLL_INTERVAL = 50;\n          var WORD_SEPARATORS = \" ()[]{}'\\\"\";\n          var NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\n          var ALL_NON_BREAKING_SPACE_REGEX = new RegExp(\n            NON_BREAKING_SPACE_CHAR,\n            \"g\",\n          );\n          var SelectionMode;\n          (function (SelectionMode) {\n            SelectionMode[(SelectionMode[\"NORMAL\"] = 0)] = \"NORMAL\";\n            SelectionMode[(SelectionMode[\"WORD\"] = 1)] = \"WORD\";\n            SelectionMode[(SelectionMode[\"LINE\"] = 2)] = \"LINE\";\n          })(SelectionMode || (SelectionMode = {}));\n          var SelectionManager = (function (_super) {\n            __extends(SelectionManager, _super);\n            function SelectionManager(_terminal, _buffer, _charMeasure) {\n              var _this = _super.call(this) || this;\n              _this._terminal = _terminal;\n              _this._buffer = _buffer;\n              _this._charMeasure = _charMeasure;\n              _this._enabled = true;\n              _this._initListeners();\n              _this.enable();\n              _this._model = new SelectionModel_1.SelectionModel(_terminal);\n              _this._activeSelectionMode = SelectionMode.NORMAL;\n              return _this;\n            }\n            SelectionManager.prototype._initListeners = function () {\n              var _this = this;\n              this._mouseMoveListener = function (event) {\n                return _this._onMouseMove(event);\n              };\n              this._mouseUpListener = function (event) {\n                return _this._onMouseUp(event);\n              };\n              this._buffer.lines.on(\"trim\", function (amount) {\n                return _this._onTrim(amount);\n              });\n            };\n            SelectionManager.prototype.disable = function () {\n              this.clearSelection();\n              this._enabled = false;\n            };\n            SelectionManager.prototype.enable = function () {\n              this._enabled = true;\n            };\n            SelectionManager.prototype.setBuffer = function (buffer) {\n              this._buffer = buffer;\n              this.clearSelection();\n            };\n            Object.defineProperty(\n              SelectionManager.prototype,\n              \"selectionStart\",\n              {\n                get: function () {\n                  return this._model.finalSelectionStart;\n                },\n                enumerable: true,\n                configurable: true,\n              },\n            );\n            Object.defineProperty(SelectionManager.prototype, \"selectionEnd\", {\n              get: function () {\n                return this._model.finalSelectionEnd;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(SelectionManager.prototype, \"hasSelection\", {\n              get: function () {\n                var start = this._model.finalSelectionStart;\n                var end = this._model.finalSelectionEnd;\n                if (!start || !end) {\n                  return false;\n                }\n                return start[0] !== end[0] || start[1] !== end[1];\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(SelectionManager.prototype, \"selectionText\", {\n              get: function () {\n                var start = this._model.finalSelectionStart;\n                var end = this._model.finalSelectionEnd;\n                if (!start || !end) {\n                  return \"\";\n                }\n                var startRowEndCol = start[1] === end[1] ? end[0] : null;\n                var result = [];\n                result.push(\n                  this._buffer.translateBufferLineToString(\n                    start[1],\n                    true,\n                    start[0],\n                    startRowEndCol,\n                  ),\n                );\n                for (var i = start[1] + 1; i <= end[1] - 1; i++) {\n                  var bufferLine = this._buffer.lines.get(i);\n                  var lineText = this._buffer.translateBufferLineToString(\n                    i,\n                    true,\n                  );\n                  if (bufferLine.isWrapped) {\n                    result[result.length - 1] += lineText;\n                  } else {\n                    result.push(lineText);\n                  }\n                }\n                if (start[1] !== end[1]) {\n                  var bufferLine = this._buffer.lines.get(end[1]);\n                  var lineText = this._buffer.translateBufferLineToString(\n                    end[1],\n                    true,\n                    0,\n                    end[0],\n                  );\n                  if (bufferLine.isWrapped) {\n                    result[result.length - 1] += lineText;\n                  } else {\n                    result.push(lineText);\n                  }\n                }\n                var formattedResult = result\n                  .map(function (line) {\n                    return line.replace(ALL_NON_BREAKING_SPACE_REGEX, \" \");\n                  })\n                  .join(Browser.isMSWindows ? \"\\r\\n\" : \"\\n\");\n                return formattedResult;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            SelectionManager.prototype.clearSelection = function () {\n              this._model.clearSelection();\n              this._removeMouseDownListeners();\n              this.refresh();\n            };\n            SelectionManager.prototype.refresh = function (isNewSelection) {\n              var _this = this;\n              if (!this._refreshAnimationFrame) {\n                this._refreshAnimationFrame = window.requestAnimationFrame(\n                  function () {\n                    return _this._refresh();\n                  },\n                );\n              }\n              if (Browser.isLinux && isNewSelection) {\n                var selectionText = this.selectionText;\n                if (selectionText.length) {\n                  this.emit(\"newselection\", this.selectionText);\n                }\n              }\n            };\n            SelectionManager.prototype._refresh = function () {\n              this._refreshAnimationFrame = null;\n              this.emit(\"refresh\", {\n                start: this._model.finalSelectionStart,\n                end: this._model.finalSelectionEnd,\n              });\n            };\n            SelectionManager.prototype.selectAll = function () {\n              this._model.isSelectAllActive = true;\n              this.refresh();\n              this._terminal.emit(\"selection\");\n            };\n            SelectionManager.prototype._onTrim = function (amount) {\n              var needsRefresh = this._model.onTrim(amount);\n              if (needsRefresh) {\n                this.refresh();\n              }\n            };\n            SelectionManager.prototype._getMouseBufferCoords = function (\n              event,\n            ) {\n              var coords = this._terminal.mouseHelper.getCoords(\n                event,\n                this._terminal.element,\n                this._charMeasure,\n                this._terminal.options.lineHeight,\n                this._terminal.cols,\n                this._terminal.rows,\n                true,\n              );\n              if (!coords) {\n                return null;\n              }\n              coords[0]--;\n              coords[1]--;\n              coords[1] += this._terminal.buffer.ydisp;\n              return coords;\n            };\n            SelectionManager.prototype._getMouseEventScrollAmount = function (\n              event,\n            ) {\n              var offset = MouseHelper_1.MouseHelper.getCoordsRelativeToElement(\n                event,\n                this._terminal.element,\n              )[1];\n              var terminalHeight =\n                this._terminal.rows *\n                Math.ceil(\n                  this._charMeasure.height * this._terminal.options.lineHeight,\n                );\n              if (offset >= 0 && offset <= terminalHeight) {\n                return 0;\n              }\n              if (offset > terminalHeight) {\n                offset -= terminalHeight;\n              }\n              offset = Math.min(\n                Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD),\n                DRAG_SCROLL_MAX_THRESHOLD,\n              );\n              offset /= DRAG_SCROLL_MAX_THRESHOLD;\n              return (\n                offset / Math.abs(offset) +\n                Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1))\n              );\n            };\n            SelectionManager.prototype.shouldForceSelection = function (event) {\n              return Browser.isMac ? event.altKey : event.shiftKey;\n            };\n            SelectionManager.prototype.onMouseDown = function (event) {\n              if (event.button === 2 && this.hasSelection) {\n                return;\n              }\n              if (event.button !== 0) {\n                return;\n              }\n              if (!this._enabled) {\n                if (!this.shouldForceSelection(event)) {\n                  return;\n                }\n                event.stopPropagation();\n              }\n              event.preventDefault();\n              this._dragScrollAmount = 0;\n              if (this._enabled && event.shiftKey) {\n                this._onIncrementalClick(event);\n              } else {\n                if (event.detail === 1) {\n                  this._onSingleClick(event);\n                } else if (event.detail === 2) {\n                  this._onDoubleClick(event);\n                } else if (event.detail === 3) {\n                  this._onTripleClick(event);\n                }\n              }\n              this._addMouseDownListeners();\n              this.refresh(true);\n            };\n            SelectionManager.prototype._addMouseDownListeners = function () {\n              var _this = this;\n              this._terminal.element.ownerDocument.addEventListener(\n                \"mousemove\",\n                this._mouseMoveListener,\n              );\n              this._terminal.element.ownerDocument.addEventListener(\n                \"mouseup\",\n                this._mouseUpListener,\n              );\n              this._dragScrollIntervalTimer = setInterval(function () {\n                return _this._dragScroll();\n              }, DRAG_SCROLL_INTERVAL);\n            };\n            SelectionManager.prototype._removeMouseDownListeners = function () {\n              this._terminal.element.ownerDocument.removeEventListener(\n                \"mousemove\",\n                this._mouseMoveListener,\n              );\n              this._terminal.element.ownerDocument.removeEventListener(\n                \"mouseup\",\n                this._mouseUpListener,\n              );\n              clearInterval(this._dragScrollIntervalTimer);\n              this._dragScrollIntervalTimer = null;\n            };\n            SelectionManager.prototype._onIncrementalClick = function (event) {\n              if (this._model.selectionStart) {\n                this._model.selectionEnd = this._getMouseBufferCoords(event);\n              }\n            };\n            SelectionManager.prototype._onSingleClick = function (event) {\n              this._model.selectionStartLength = 0;\n              this._model.isSelectAllActive = false;\n              this._activeSelectionMode = SelectionMode.NORMAL;\n              this._model.selectionStart = this._getMouseBufferCoords(event);\n              if (!this._model.selectionStart) {\n                return;\n              }\n              this._model.selectionEnd = null;\n              var line = this._buffer.lines.get(this._model.selectionStart[1]);\n              if (!line) {\n                return;\n              }\n              if (line.length >= this._model.selectionStart[0]) {\n                return;\n              }\n              var char = line[this._model.selectionStart[0]];\n              if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                this._model.selectionStart[0]++;\n              }\n            };\n            SelectionManager.prototype._onDoubleClick = function (event) {\n              var coords = this._getMouseBufferCoords(event);\n              if (coords) {\n                this._activeSelectionMode = SelectionMode.WORD;\n                this._selectWordAt(coords);\n              }\n            };\n            SelectionManager.prototype._onTripleClick = function (event) {\n              var coords = this._getMouseBufferCoords(event);\n              if (coords) {\n                this._activeSelectionMode = SelectionMode.LINE;\n                this._selectLineAt(coords[1]);\n              }\n            };\n            SelectionManager.prototype._onMouseMove = function (event) {\n              event.stopImmediatePropagation();\n              var previousSelectionEnd = this._model.selectionEnd\n                ? [this._model.selectionEnd[0], this._model.selectionEnd[1]]\n                : null;\n              this._model.selectionEnd = this._getMouseBufferCoords(event);\n              if (!this._model.selectionEnd) {\n                this.refresh(true);\n                return;\n              }\n              if (this._activeSelectionMode === SelectionMode.LINE) {\n                if (\n                  this._model.selectionEnd[1] < this._model.selectionStart[1]\n                ) {\n                  this._model.selectionEnd[0] = 0;\n                } else {\n                  this._model.selectionEnd[0] = this._terminal.cols;\n                }\n              } else if (this._activeSelectionMode === SelectionMode.WORD) {\n                this._selectToWordAt(this._model.selectionEnd);\n              }\n              this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n              if (this._dragScrollAmount > 0) {\n                this._model.selectionEnd[0] = this._terminal.cols;\n              } else if (this._dragScrollAmount < 0) {\n                this._model.selectionEnd[0] = 0;\n              }\n              if (this._model.selectionEnd[1] < this._buffer.lines.length) {\n                var char = this._buffer.lines.get(this._model.selectionEnd[1])[\n                  this._model.selectionEnd[0]\n                ];\n                if (char && char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                  this._model.selectionEnd[0]++;\n                }\n              }\n              if (\n                !previousSelectionEnd ||\n                previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n                previousSelectionEnd[1] !== this._model.selectionEnd[1]\n              ) {\n                this.refresh(true);\n              }\n            };\n            SelectionManager.prototype._dragScroll = function () {\n              if (this._dragScrollAmount) {\n                this._terminal.scrollLines(this._dragScrollAmount, false);\n                if (this._dragScrollAmount > 0) {\n                  this._model.selectionEnd = [\n                    this._terminal.cols - 1,\n                    Math.min(\n                      this._terminal.buffer.ydisp + this._terminal.rows,\n                      this._terminal.buffer.lines.length - 1,\n                    ),\n                  ];\n                } else {\n                  this._model.selectionEnd = [0, this._terminal.buffer.ydisp];\n                }\n                this.refresh();\n              }\n            };\n            SelectionManager.prototype._onMouseUp = function (event) {\n              this._removeMouseDownListeners();\n              if (this.hasSelection) this._terminal.emit(\"selection\");\n            };\n            SelectionManager.prototype._convertViewportColToCharacterIndex =\n              function (bufferLine, coords) {\n                var charIndex = coords[0];\n                for (var i = 0; coords[0] >= i; i++) {\n                  var char = bufferLine[i];\n                  if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                    charIndex--;\n                  } else if (\n                    char[Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1 &&\n                    coords[0] !== i\n                  ) {\n                    charIndex += char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                  }\n                }\n                return charIndex;\n              };\n            SelectionManager.prototype.setSelection = function (\n              col,\n              row,\n              length,\n            ) {\n              this._model.clearSelection();\n              this._removeMouseDownListeners();\n              this._model.selectionStart = [col, row];\n              this._model.selectionStartLength = length;\n              this.refresh();\n            };\n            SelectionManager.prototype._getWordAt = function (coords) {\n              var bufferLine = this._buffer.lines.get(coords[1]);\n              if (!bufferLine) {\n                return null;\n              }\n              var line = this._buffer.translateBufferLineToString(\n                coords[1],\n                false,\n              );\n              var startIndex = this._convertViewportColToCharacterIndex(\n                bufferLine,\n                coords,\n              );\n              var endIndex = startIndex;\n              var charOffset = coords[0] - startIndex;\n              var leftWideCharCount = 0;\n              var rightWideCharCount = 0;\n              var leftLongCharOffset = 0;\n              var rightLongCharOffset = 0;\n              if (line.charAt(startIndex) === \" \") {\n                while (startIndex > 0 && line.charAt(startIndex - 1) === \" \") {\n                  startIndex--;\n                }\n                while (\n                  endIndex < line.length &&\n                  line.charAt(endIndex + 1) === \" \"\n                ) {\n                  endIndex++;\n                }\n              } else {\n                var startCol = coords[0];\n                var endCol = coords[0];\n                if (\n                  bufferLine[startCol][Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0\n                ) {\n                  leftWideCharCount++;\n                  startCol--;\n                }\n                if (bufferLine[endCol][Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n                  rightWideCharCount++;\n                  endCol++;\n                }\n                if (\n                  bufferLine[endCol][Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1\n                ) {\n                  rightLongCharOffset +=\n                    bufferLine[endCol][Buffer_1.CHAR_DATA_CHAR_INDEX].length -\n                    1;\n                  endIndex +=\n                    bufferLine[endCol][Buffer_1.CHAR_DATA_CHAR_INDEX].length -\n                    1;\n                }\n                while (\n                  startCol > 0 &&\n                  startIndex > 0 &&\n                  !this._isCharWordSeparator(bufferLine[startCol - 1])\n                ) {\n                  var char = bufferLine[startCol - 1];\n                  if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                    leftWideCharCount++;\n                    startCol--;\n                  } else if (char[Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1) {\n                    leftLongCharOffset +=\n                      char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                    startIndex -=\n                      char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                  }\n                  startIndex--;\n                  startCol--;\n                }\n                while (\n                  endCol < bufferLine.length &&\n                  endIndex + 1 < line.length &&\n                  !this._isCharWordSeparator(bufferLine[endCol + 1])\n                ) {\n                  var char = bufferLine[endCol + 1];\n                  if (char[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n                    rightWideCharCount++;\n                    endCol++;\n                  } else if (char[Buffer_1.CHAR_DATA_CHAR_INDEX].length > 1) {\n                    rightLongCharOffset +=\n                      char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                    endIndex += char[Buffer_1.CHAR_DATA_CHAR_INDEX].length - 1;\n                  }\n                  endIndex++;\n                  endCol++;\n                }\n              }\n              endIndex++;\n              var start =\n                startIndex +\n                charOffset -\n                leftWideCharCount +\n                leftLongCharOffset;\n              var length = Math.min(\n                this._terminal.cols,\n                endIndex -\n                  startIndex +\n                  leftWideCharCount +\n                  rightWideCharCount -\n                  leftLongCharOffset -\n                  rightLongCharOffset,\n              );\n              return { start: start, length: length };\n            };\n            SelectionManager.prototype._selectWordAt = function (coords) {\n              var wordPosition = this._getWordAt(coords);\n              if (wordPosition) {\n                this._model.selectionStart = [wordPosition.start, coords[1]];\n                this._model.selectionStartLength = wordPosition.length;\n              }\n            };\n            SelectionManager.prototype._selectToWordAt = function (coords) {\n              var wordPosition = this._getWordAt(coords);\n              if (wordPosition) {\n                this._model.selectionEnd = [\n                  this._model.areSelectionValuesReversed()\n                    ? wordPosition.start\n                    : wordPosition.start + wordPosition.length,\n                  coords[1],\n                ];\n              }\n            };\n            SelectionManager.prototype._isCharWordSeparator = function (\n              charData,\n            ) {\n              if (charData[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 0) {\n                return false;\n              }\n              return (\n                WORD_SEPARATORS.indexOf(\n                  charData[Buffer_1.CHAR_DATA_CHAR_INDEX],\n                ) >= 0\n              );\n            };\n            SelectionManager.prototype._selectLineAt = function (line) {\n              this._model.selectionStart = [0, line];\n              this._model.selectionStartLength = this._terminal.cols;\n            };\n            return SelectionManager;\n          })(EventEmitter_1.EventEmitter);\n          exports.SelectionManager = SelectionManager;\n        },\n        {\n          \"./Buffer\": 1,\n          \"./EventEmitter\": 7,\n          \"./SelectionModel\": 12,\n          \"./utils/Browser\": 28,\n          \"./utils/MouseHelper\": 32,\n        },\n      ],\n      12: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var SelectionModel = (function () {\n            function SelectionModel(_terminal) {\n              this._terminal = _terminal;\n              this.clearSelection();\n            }\n            SelectionModel.prototype.clearSelection = function () {\n              this.selectionStart = null;\n              this.selectionEnd = null;\n              this.isSelectAllActive = false;\n              this.selectionStartLength = 0;\n            };\n            Object.defineProperty(\n              SelectionModel.prototype,\n              \"finalSelectionStart\",\n              {\n                get: function () {\n                  if (this.isSelectAllActive) {\n                    return [0, 0];\n                  }\n                  if (!this.selectionEnd || !this.selectionStart) {\n                    return this.selectionStart;\n                  }\n                  return this.areSelectionValuesReversed()\n                    ? this.selectionEnd\n                    : this.selectionStart;\n                },\n                enumerable: true,\n                configurable: true,\n              },\n            );\n            Object.defineProperty(\n              SelectionModel.prototype,\n              \"finalSelectionEnd\",\n              {\n                get: function () {\n                  if (this.isSelectAllActive) {\n                    return [\n                      this._terminal.cols,\n                      this._terminal.buffer.ybase + this._terminal.rows - 1,\n                    ];\n                  }\n                  if (!this.selectionStart) {\n                    return null;\n                  }\n                  if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n                    return [\n                      this.selectionStart[0] + this.selectionStartLength,\n                      this.selectionStart[1],\n                    ];\n                  }\n                  if (this.selectionStartLength) {\n                    if (this.selectionEnd[1] === this.selectionStart[1]) {\n                      return [\n                        Math.max(\n                          this.selectionStart[0] + this.selectionStartLength,\n                          this.selectionEnd[0],\n                        ),\n                        this.selectionEnd[1],\n                      ];\n                    }\n                  }\n                  return this.selectionEnd;\n                },\n                enumerable: true,\n                configurable: true,\n              },\n            );\n            SelectionModel.prototype.areSelectionValuesReversed = function () {\n              var start = this.selectionStart;\n              var end = this.selectionEnd;\n              if (!start || !end) {\n                return false;\n              }\n              return (\n                start[1] > end[1] || (start[1] === end[1] && start[0] > end[0])\n              );\n            };\n            SelectionModel.prototype.onTrim = function (amount) {\n              if (this.selectionStart) {\n                this.selectionStart[1] -= amount;\n              }\n              if (this.selectionEnd) {\n                this.selectionEnd[1] -= amount;\n              }\n              if (this.selectionEnd && this.selectionEnd[1] < 0) {\n                this.clearSelection();\n                return true;\n              }\n              if (this.selectionStart && this.selectionStart[1] < 0) {\n                this.selectionStart[1] = 0;\n              }\n              return false;\n            };\n            return SelectionModel;\n          })();\n          exports.SelectionModel = SelectionModel;\n        },\n        {},\n      ],\n      13: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var BufferSet_1 = require(\"./BufferSet\");\n          var Buffer_1 = require(\"./Buffer\");\n          var CompositionHelper_1 = require(\"./CompositionHelper\");\n          var EventEmitter_1 = require(\"./EventEmitter\");\n          var Viewport_1 = require(\"./Viewport\");\n          var Clipboard_1 = require(\"./handlers/Clipboard\");\n          var EscapeSequences_1 = require(\"./EscapeSequences\");\n          var InputHandler_1 = require(\"./InputHandler\");\n          var Parser_1 = require(\"./Parser\");\n          var Renderer_1 = require(\"./renderer/Renderer\");\n          var Linkifier_1 = require(\"./Linkifier\");\n          var SelectionManager_1 = require(\"./SelectionManager\");\n          var CharMeasure_1 = require(\"./utils/CharMeasure\");\n          var Browser = require(\"./utils/Browser\");\n          var MouseHelper_1 = require(\"./utils/MouseHelper\");\n          var Sounds_1 = require(\"./utils/Sounds\");\n          var ColorManager_1 = require(\"./renderer/ColorManager\");\n          var MouseZoneManager_1 = require(\"./input/MouseZoneManager\");\n          var CharAtlas_1 = require(\"./renderer/CharAtlas\");\n          var document = typeof window !== \"undefined\" ? window.document : null;\n          var WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n          var WRITE_BATCH_SIZE = 300;\n          var DEFAULT_OPTIONS = {\n            cols: 80,\n            rows: 24,\n            convertEol: false,\n            termName: \"xterm\",\n            cursorBlink: false,\n            cursorStyle: \"block\",\n            bellSound: Sounds_1.BellSound,\n            bellStyle: \"none\",\n            enableBold: true,\n            fontFamily: \"courier-new, courier, monospace\",\n            fontSize: 12,\n            lineHeight: 1.0,\n            letterSpacing: 0,\n            scrollback: 1000,\n            screenKeys: false,\n            debug: false,\n            cancelEvents: false,\n            disableStdin: false,\n            useFlowControl: false,\n            tabStopWidth: 8,\n            theme: null,\n          };\n          var Terminal = (function (_super) {\n            __extends(Terminal, _super);\n            function Terminal(options) {\n              if (options === void 0) {\n                options = {};\n              }\n              var _this = _super.call(this) || this;\n              _this.browser = Browser;\n              _this.options = options;\n              _this.setup();\n              return _this;\n            }\n            Terminal.prototype.setup = function () {\n              var _this = this;\n              Object.keys(DEFAULT_OPTIONS).forEach(function (key) {\n                if (_this.options[key] == null) {\n                  _this.options[key] = DEFAULT_OPTIONS[key];\n                }\n                _this[key] = _this.options[key];\n              });\n              this.parent = document ? document.body : null;\n              this.cols = this.options.cols;\n              this.rows = this.options.rows;\n              if (this.options.handler) {\n                this.on(\"data\", this.options.handler);\n              }\n              this.cursorState = 0;\n              this.cursorHidden = false;\n              this.sendDataQueue = \"\";\n              this.customKeyEventHandler = null;\n              this.applicationKeypad = false;\n              this.applicationCursor = false;\n              this.originMode = false;\n              this.insertMode = false;\n              this.wraparoundMode = true;\n              this.bracketedPasteMode = false;\n              this.charset = null;\n              this.gcharset = null;\n              this.glevel = 0;\n              this.charsets = [null];\n              this.readable = true;\n              this.writable = true;\n              this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n              this.curAttr = (0 << 18) | (257 << 9) | (256 << 0);\n              this.params = [];\n              this.currentParam = 0;\n              this.prefix = \"\";\n              this.postfix = \"\";\n              this.writeBuffer = [];\n              this.writeInProgress = false;\n              this.xoffSentToCatchUp = false;\n              this.writeStopped = false;\n              this.surrogate_high = \"\";\n              this.userScrolling = false;\n              this.inputHandler = new InputHandler_1.InputHandler(this);\n              this.parser = new Parser_1.Parser(this.inputHandler, this);\n              this.renderer = this.renderer || null;\n              this.selectionManager = this.selectionManager || null;\n              this.linkifier =\n                this.linkifier || new Linkifier_1.Linkifier(this);\n              this._mouseZoneManager = this._mouseZoneManager || null;\n              this.buffers = new BufferSet_1.BufferSet(this);\n              this.buffer = this.buffers.active;\n              this.buffers.on(\"activate\", function (buffer) {\n                _this.buffer = buffer;\n              });\n              if (this.selectionManager) {\n                this.selectionManager.setBuffer(this.buffer);\n              }\n            };\n            Terminal.prototype.eraseAttr = function () {\n              return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n            };\n            Terminal.prototype.focus = function () {\n              if (this.textarea) {\n                this.textarea.focus();\n              }\n            };\n            Object.defineProperty(Terminal.prototype, \"isFocused\", {\n              get: function () {\n                return document.activeElement === this.textarea;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Terminal.prototype.getOption = function (key) {\n              if (!(key in DEFAULT_OPTIONS)) {\n                throw new Error('No option with key \"' + key + '\"');\n              }\n              if (typeof this.options[key] !== \"undefined\") {\n                return this.options[key];\n              }\n              return this[key];\n            };\n            Terminal.prototype.setOption = function (key, value) {\n              if (!(key in DEFAULT_OPTIONS)) {\n                throw new Error('No option with key \"' + key + '\"');\n              }\n              switch (key) {\n                case \"bellStyle\":\n                  if (!value) {\n                    value = \"none\";\n                  }\n                  break;\n                case \"cursorStyle\":\n                  if (!value) {\n                    value = \"block\";\n                  }\n                  break;\n                case \"lineHeight\":\n                  if (value < 1) {\n                    console.warn(\n                      key + \" cannot be less than 1, value: \" + value,\n                    );\n                    return;\n                  }\n                case \"tabStopWidth\":\n                  if (value < 1) {\n                    console.warn(\n                      key + \" cannot be less than 1, value: \" + value,\n                    );\n                    return;\n                  }\n                  break;\n                case \"theme\":\n                  if (this.renderer) {\n                    this._setTheme(value);\n                    return;\n                  }\n                  break;\n                case \"scrollback\":\n                  value = Math.min(value, Buffer_1.MAX_BUFFER_SIZE);\n                  if (value < 0) {\n                    console.warn(\n                      key + \" cannot be less than 0, value: \" + value,\n                    );\n                    return;\n                  }\n                  if (this.options[key] !== value) {\n                    var newBufferLength = this.rows + value;\n                    if (this.buffer.lines.length > newBufferLength) {\n                      var amountToTrim =\n                        this.buffer.lines.length - newBufferLength;\n                      var needsRefresh = this.buffer.ydisp - amountToTrim < 0;\n                      this.buffer.lines.trimStart(amountToTrim);\n                      this.buffer.ybase = Math.max(\n                        this.buffer.ybase - amountToTrim,\n                        0,\n                      );\n                      this.buffer.ydisp = Math.max(\n                        this.buffer.ydisp - amountToTrim,\n                        0,\n                      );\n                      if (needsRefresh) {\n                        this.refresh(0, this.rows - 1);\n                      }\n                    }\n                  }\n                  break;\n              }\n              this[key] = value;\n              this.options[key] = value;\n              switch (key) {\n                case \"fontFamily\":\n                case \"fontSize\":\n                  this.renderer.clear();\n                  this.charMeasure.measure(this.options);\n                  break;\n                case \"enableBold\":\n                case \"letterSpacing\":\n                case \"lineHeight\":\n                  this.renderer.clear();\n                  this.renderer.onResize(this.cols, this.rows, false);\n                  this.refresh(0, this.rows - 1);\n                case \"scrollback\":\n                  this.buffers.resize(this.cols, this.rows);\n                  this.viewport.syncScrollArea();\n                  break;\n                case \"tabStopWidth\":\n                  this.buffers.setupTabStops();\n                  break;\n                case \"bellSound\":\n                case \"bellStyle\":\n                  this.syncBellSound();\n                  break;\n              }\n              if (this.renderer) {\n                this.renderer.onOptionsChanged();\n              }\n            };\n            Terminal.prototype._onTextAreaFocus = function () {\n              if (this.sendFocus) {\n                this.send(EscapeSequences_1.C0.ESC + \"[I\");\n              }\n              this.element.classList.add(\"focus\");\n              this.showCursor();\n              this.emit(\"focus\");\n            };\n            Terminal.prototype.blur = function () {\n              return this.textarea.blur();\n            };\n            Terminal.prototype._onTextAreaBlur = function () {\n              this.refresh(this.buffer.y, this.buffer.y);\n              if (this.sendFocus) {\n                this.send(EscapeSequences_1.C0.ESC + \"[O\");\n              }\n              this.element.classList.remove(\"focus\");\n              this.emit(\"blur\");\n            };\n            Terminal.prototype.initGlobal = function () {\n              var _this = this;\n              this.bindKeys();\n              on(this.element, \"copy\", function (event) {\n                if (!_this.hasSelection()) {\n                  return;\n                }\n                Clipboard_1.copyHandler(event, _this, _this.selectionManager);\n              });\n              var pasteHandlerWrapper = function (event) {\n                return Clipboard_1.pasteHandler(event, _this);\n              };\n              on(this.textarea, \"paste\", pasteHandlerWrapper);\n              on(this.element, \"paste\", pasteHandlerWrapper);\n              if (Browser.isFirefox) {\n                on(this.element, \"mousedown\", function (event) {\n                  if (event.button === 2) {\n                    Clipboard_1.rightClickHandler(\n                      event,\n                      _this.textarea,\n                      _this.selectionManager,\n                    );\n                  }\n                });\n              } else {\n                on(this.element, \"contextmenu\", function (event) {\n                  Clipboard_1.rightClickHandler(\n                    event,\n                    _this.textarea,\n                    _this.selectionManager,\n                  );\n                });\n              }\n              if (Browser.isLinux) {\n                on(this.element, \"auxclick\", function (event) {\n                  if (event.button === 1) {\n                    Clipboard_1.moveTextAreaUnderMouseCursor(\n                      event,\n                      _this.textarea,\n                    );\n                  }\n                });\n              }\n            };\n            Terminal.prototype.bindKeys = function () {\n              var _this = this;\n              var self = this;\n              on(\n                this.element,\n                \"keydown\",\n                function (ev) {\n                  if (document.activeElement !== this) {\n                    return;\n                  }\n                  self._keyDown(ev);\n                },\n                true,\n              );\n              on(\n                this.element,\n                \"keypress\",\n                function (ev) {\n                  if (document.activeElement !== this) {\n                    return;\n                  }\n                  self._keyPress(ev);\n                },\n                true,\n              );\n              on(\n                this.element,\n                \"keyup\",\n                function (ev) {\n                  if (!wasMondifierKeyOnlyEvent(ev)) {\n                    _this.focus();\n                  }\n                },\n                true,\n              );\n              on(\n                this.textarea,\n                \"keydown\",\n                function (ev) {\n                  _this._keyDown(ev);\n                },\n                true,\n              );\n              on(\n                this.textarea,\n                \"keypress\",\n                function (ev) {\n                  _this._keyPress(ev);\n                  _this.textarea.value = \"\";\n                },\n                true,\n              );\n              on(this.textarea, \"compositionstart\", function () {\n                return _this.compositionHelper.compositionstart();\n              });\n              on(this.textarea, \"compositionupdate\", function (e) {\n                return _this.compositionHelper.compositionupdate(e);\n              });\n              on(this.textarea, \"compositionend\", function () {\n                return _this.compositionHelper.compositionend();\n              });\n              this.on(\"refresh\", function () {\n                return _this.compositionHelper.updateCompositionElements();\n              });\n              this.on(\"refresh\", function (data) {\n                return _this.queueLinkification(data.start, data.end);\n              });\n            };\n            Terminal.prototype.open = function (parent) {\n              var _this = this;\n              var i = 0;\n              var div;\n              this.parent = parent || this.parent;\n              if (!this.parent) {\n                throw new Error(\"Terminal requires a parent element.\");\n              }\n              this.context = this.parent.ownerDocument.defaultView;\n              this.document = this.parent.ownerDocument;\n              this.body = this.document.body;\n              CharAtlas_1.initialize(this.document);\n              this.element = this.document.createElement(\"div\");\n              this.element.classList.add(\"terminal\");\n              this.element.classList.add(\"xterm\");\n              this.element.setAttribute(\"tabindex\", \"0\");\n              this.parent.appendChild(this.element);\n              var fragment = document.createDocumentFragment();\n              this.viewportElement = document.createElement(\"div\");\n              this.viewportElement.classList.add(\"xterm-viewport\");\n              fragment.appendChild(this.viewportElement);\n              this.viewportScrollArea = document.createElement(\"div\");\n              this.viewportScrollArea.classList.add(\"xterm-scroll-area\");\n              this.viewportElement.appendChild(this.viewportScrollArea);\n              this._mouseZoneManager = new MouseZoneManager_1.MouseZoneManager(\n                this,\n              );\n              this.on(\"scroll\", function () {\n                return _this._mouseZoneManager.clearAll();\n              });\n              this.linkifier.attachToDom(this._mouseZoneManager);\n              this.helperContainer = document.createElement(\"div\");\n              this.helperContainer.classList.add(\"xterm-helpers\");\n              fragment.appendChild(this.helperContainer);\n              this.textarea = document.createElement(\"textarea\");\n              this.textarea.classList.add(\"xterm-helper-textarea\");\n              this.textarea.setAttribute(\"autocorrect\", \"off\");\n              this.textarea.setAttribute(\"autocapitalize\", \"off\");\n              this.textarea.setAttribute(\"spellcheck\", \"false\");\n              this.textarea.tabIndex = 0;\n              this.textarea.addEventListener(\"focus\", function () {\n                return _this._onTextAreaFocus();\n              });\n              this.textarea.addEventListener(\"blur\", function () {\n                return _this._onTextAreaBlur();\n              });\n              this.helperContainer.appendChild(this.textarea);\n              this.compositionView = document.createElement(\"div\");\n              this.compositionView.classList.add(\"composition-view\");\n              this.compositionHelper =\n                new CompositionHelper_1.CompositionHelper(\n                  this.textarea,\n                  this.compositionView,\n                  this,\n                );\n              this.helperContainer.appendChild(this.compositionView);\n              this.charSizeStyleElement = document.createElement(\"style\");\n              this.helperContainer.appendChild(this.charSizeStyleElement);\n              this.charMeasure = new CharMeasure_1.CharMeasure(\n                document,\n                this.helperContainer,\n              );\n              this.syncBellSound();\n              this.element.appendChild(fragment);\n              this.renderer = new Renderer_1.Renderer(this, this.options.theme);\n              this.options.theme = null;\n              this.viewport = new Viewport_1.Viewport(\n                this,\n                this.viewportElement,\n                this.viewportScrollArea,\n                this.charMeasure,\n              );\n              this.viewport.onThemeChanged(this.renderer.colorManager.colors);\n              this.on(\"cursormove\", function () {\n                return _this.renderer.onCursorMove();\n              });\n              this.on(\"resize\", function () {\n                return _this.renderer.onResize(_this.cols, _this.rows, false);\n              });\n              this.on(\"blur\", function () {\n                return _this.renderer.onBlur();\n              });\n              this.on(\"focus\", function () {\n                return _this.renderer.onFocus();\n              });\n              this.charMeasure.on(\"charsizechanged\", function () {\n                return _this.renderer.onResize(_this.cols, _this.rows, true);\n              });\n              this.renderer.on(\"resize\", function (dimensions) {\n                return _this.viewport.syncScrollArea();\n              });\n              this.selectionManager = new SelectionManager_1.SelectionManager(\n                this,\n                this.buffer,\n                this.charMeasure,\n              );\n              this.element.addEventListener(\"mousedown\", function (e) {\n                return _this.selectionManager.onMouseDown(e);\n              });\n              this.selectionManager.on(\"refresh\", function (data) {\n                return _this.renderer.onSelectionChanged(data.start, data.end);\n              });\n              this.selectionManager.on(\"newselection\", function (text) {\n                _this.textarea.value = text;\n                _this.textarea.focus();\n                _this.textarea.select();\n              });\n              this.on(\"scroll\", function () {\n                _this.viewport.syncScrollArea();\n                _this.selectionManager.refresh();\n              });\n              this.viewportElement.addEventListener(\"scroll\", function () {\n                return _this.selectionManager.refresh();\n              });\n              this.mouseHelper = new MouseHelper_1.MouseHelper(this.renderer);\n              this.charMeasure.measure(this.options);\n              this.refresh(0, this.rows - 1);\n              this.initGlobal();\n              this.bindMouse();\n            };\n            Terminal.prototype._setTheme = function (theme) {\n              var colors = this.renderer.setTheme(theme);\n              if (this.viewport) {\n                this.viewport.onThemeChanged(colors);\n              }\n            };\n            Terminal.applyAddon = function (addon) {\n              addon.apply(Terminal);\n            };\n            Terminal.prototype.bindMouse = function () {\n              var _this = this;\n              var el = this.element;\n              var self = this;\n              var pressed = 32;\n              function sendButton(ev) {\n                var button;\n                var pos;\n                button = getButton(ev);\n                pos = self.mouseHelper.getRawByteCoords(\n                  ev,\n                  self.element,\n                  self.charMeasure,\n                  self.options.lineHeight,\n                  self.cols,\n                  self.rows,\n                );\n                if (!pos) return;\n                sendEvent(button, pos);\n                switch (ev.overrideType || ev.type) {\n                  case \"mousedown\":\n                    pressed = button;\n                    break;\n                  case \"mouseup\":\n                    pressed = 32;\n                    break;\n                  case \"wheel\":\n                    break;\n                }\n              }\n              function sendMove(ev) {\n                var button = pressed;\n                var pos = self.mouseHelper.getRawByteCoords(\n                  ev,\n                  self.element,\n                  self.charMeasure,\n                  self.options.lineHeight,\n                  self.cols,\n                  self.rows,\n                );\n                if (!pos) return;\n                button += 32;\n                sendEvent(button, pos);\n              }\n              function encode(data, ch) {\n                if (!self.utfMouse) {\n                  if (ch === 255) {\n                    data.push(0);\n                    return;\n                  }\n                  if (ch > 127) ch = 127;\n                  data.push(ch);\n                } else {\n                  if (ch === 2047) {\n                    data.push(0);\n                    return;\n                  }\n                  if (ch < 127) {\n                    data.push(ch);\n                  } else {\n                    if (ch > 2047) ch = 2047;\n                    data.push(0xc0 | (ch >> 6));\n                    data.push(0x80 | (ch & 0x3f));\n                  }\n                }\n              }\n              function sendEvent(button, pos) {\n                if (self.vt300Mouse) {\n                  button &= 3;\n                  pos.x -= 32;\n                  pos.y -= 32;\n                  var data_1 = EscapeSequences_1.C0.ESC + \"[24\";\n                  if (button === 0) data_1 += \"1\";\n                  else if (button === 1) data_1 += \"3\";\n                  else if (button === 2) data_1 += \"5\";\n                  else if (button === 3) return;\n                  else data_1 += \"0\";\n                  data_1 += \"~[\" + pos.x + \",\" + pos.y + \"]\\r\";\n                  self.send(data_1);\n                  return;\n                }\n                if (self.decLocator) {\n                  button &= 3;\n                  pos.x -= 32;\n                  pos.y -= 32;\n                  if (button === 0) button = 2;\n                  else if (button === 1) button = 4;\n                  else if (button === 2) button = 6;\n                  else if (button === 3) button = 3;\n                  self.send(\n                    EscapeSequences_1.C0.ESC +\n                      \"[\" +\n                      button +\n                      \";\" +\n                      (button === 3 ? 4 : 0) +\n                      \";\" +\n                      pos.y +\n                      \";\" +\n                      pos.x +\n                      \";\" +\n                      pos.page || 0 + \"&w\",\n                  );\n                  return;\n                }\n                if (self.urxvtMouse) {\n                  pos.x -= 32;\n                  pos.y -= 32;\n                  pos.x++;\n                  pos.y++;\n                  self.send(\n                    EscapeSequences_1.C0.ESC +\n                      \"[\" +\n                      button +\n                      \";\" +\n                      pos.x +\n                      \";\" +\n                      pos.y +\n                      \"M\",\n                  );\n                  return;\n                }\n                if (self.sgrMouse) {\n                  pos.x -= 32;\n                  pos.y -= 32;\n                  self.send(\n                    EscapeSequences_1.C0.ESC +\n                      \"[<\" +\n                      (((button & 3) === 3 ? button & ~3 : button) - 32) +\n                      \";\" +\n                      pos.x +\n                      \";\" +\n                      pos.y +\n                      ((button & 3) === 3 ? \"m\" : \"M\"),\n                  );\n                  return;\n                }\n                var data = [];\n                encode(data, button);\n                encode(data, pos.x);\n                encode(data, pos.y);\n                self.send(\n                  EscapeSequences_1.C0.ESC +\n                    \"[M\" +\n                    String.fromCharCode.apply(String, data),\n                );\n              }\n              function getButton(ev) {\n                var button;\n                var shift;\n                var meta;\n                var ctrl;\n                var mod;\n                switch (ev.overrideType || ev.type) {\n                  case \"mousedown\":\n                    button =\n                      ev.button != null\n                        ? +ev.button\n                        : ev.which != null\n                        ? ev.which - 1\n                        : null;\n                    if (Browser.isMSIE) {\n                      button = button === 1 ? 0 : button === 4 ? 1 : button;\n                    }\n                    break;\n                  case \"mouseup\":\n                    button = 3;\n                    break;\n                  case \"DOMMouseScroll\":\n                    button = ev.detail < 0 ? 64 : 65;\n                    break;\n                  case \"wheel\":\n                    button = ev.wheelDeltaY > 0 ? 64 : 65;\n                    break;\n                }\n                shift = ev.shiftKey ? 4 : 0;\n                meta = ev.metaKey ? 8 : 0;\n                ctrl = ev.ctrlKey ? 16 : 0;\n                mod = shift | meta | ctrl;\n                if (self.vt200Mouse) {\n                  mod &= ctrl;\n                } else if (!self.normalMouse) {\n                  mod = 0;\n                }\n                button = 32 + (mod << 2) + button;\n                return button;\n              }\n              on(el, \"mousedown\", function (ev) {\n                ev.preventDefault();\n                _this.focus();\n                if (\n                  !_this.mouseEvents ||\n                  _this.selectionManager.shouldForceSelection(ev)\n                ) {\n                  return;\n                }\n                sendButton(ev);\n                if (_this.vt200Mouse) {\n                  ev.overrideType = \"mouseup\";\n                  sendButton(ev);\n                  return _this.cancel(ev);\n                }\n                if (_this.normalMouse)\n                  on(_this.document, \"mousemove\", sendMove);\n                if (!_this.x10Mouse) {\n                  var handler_1 = function (ev) {\n                    sendButton(ev);\n                    if (_this.normalMouse)\n                      off(_this.document, \"mousemove\", sendMove);\n                    off(_this.document, \"mouseup\", handler_1);\n                    return _this.cancel(ev);\n                  };\n                  on(_this.document, \"mouseup\", handler_1);\n                }\n                return _this.cancel(ev);\n              });\n              on(el, \"wheel\", function (ev) {\n                if (!_this.mouseEvents) return;\n                if (_this.x10Mouse || _this.vt300Mouse || _this.decLocator)\n                  return;\n                sendButton(ev);\n                ev.preventDefault();\n              });\n              on(el, \"wheel\", function (ev) {\n                if (_this.mouseEvents) return;\n                _this.viewport.onWheel(ev);\n                return _this.cancel(ev);\n              });\n              on(el, \"touchstart\", function (ev) {\n                if (_this.mouseEvents) return;\n                _this.viewport.onTouchStart(ev);\n                return _this.cancel(ev);\n              });\n              on(el, \"touchmove\", function (ev) {\n                if (_this.mouseEvents) return;\n                _this.viewport.onTouchMove(ev);\n                return _this.cancel(ev);\n              });\n            };\n            Terminal.prototype.destroy = function () {\n              _super.prototype.destroy.call(this);\n              this.readable = false;\n              this.writable = false;\n              this.handler = function () {};\n              this.write = function () {};\n              if (this.element && this.element.parentNode) {\n                this.element.parentNode.removeChild(this.element);\n              }\n            };\n            Terminal.prototype.refresh = function (start, end) {\n              if (this.renderer) {\n                this.renderer.queueRefresh(start, end);\n              }\n            };\n            Terminal.prototype.queueLinkification = function (start, end) {\n              if (this.linkifier) {\n                this.linkifier.linkifyRows(start, end);\n              }\n            };\n            Terminal.prototype.showCursor = function () {\n              if (!this.cursorState) {\n                this.cursorState = 1;\n                this.refresh(this.buffer.y, this.buffer.y);\n              }\n            };\n            Terminal.prototype.scroll = function (isWrapped) {\n              var newLine = this.blankLine(undefined, isWrapped);\n              var topRow = this.buffer.ybase + this.buffer.scrollTop;\n              var bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n              if (this.buffer.scrollTop === 0) {\n                var willBufferBeTrimmed =\n                  this.buffer.lines.length === this.buffer.lines.maxLength;\n                if (bottomRow === this.buffer.lines.length - 1) {\n                  this.buffer.lines.push(newLine);\n                } else {\n                  this.buffer.lines.splice(bottomRow + 1, 0, newLine);\n                }\n                if (!willBufferBeTrimmed) {\n                  this.buffer.ybase++;\n                  if (!this.userScrolling) {\n                    this.buffer.ydisp++;\n                  }\n                } else {\n                  if (this.userScrolling) {\n                    this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n                  }\n                }\n              } else {\n                var scrollRegionHeight = bottomRow - topRow + 1;\n                this.buffer.lines.shiftElements(\n                  topRow + 1,\n                  scrollRegionHeight - 1,\n                  -1,\n                );\n                this.buffer.lines.set(bottomRow, newLine);\n              }\n              if (!this.userScrolling) {\n                this.buffer.ydisp = this.buffer.ybase;\n              }\n              this.updateRange(this.buffer.scrollTop);\n              this.updateRange(this.buffer.scrollBottom);\n              this.emit(\"scroll\", this.buffer.ydisp);\n            };\n            Terminal.prototype.scrollLines = function (\n              disp,\n              suppressScrollEvent,\n            ) {\n              if (disp < 0) {\n                if (this.buffer.ydisp === 0) {\n                  return;\n                }\n                this.userScrolling = true;\n              } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n                this.userScrolling = false;\n              }\n              var oldYdisp = this.buffer.ydisp;\n              this.buffer.ydisp = Math.max(\n                Math.min(this.buffer.ydisp + disp, this.buffer.ybase),\n                0,\n              );\n              if (oldYdisp === this.buffer.ydisp) {\n                return;\n              }\n              if (!suppressScrollEvent) {\n                this.emit(\"scroll\", this.buffer.ydisp);\n              }\n              this.refresh(0, this.rows - 1);\n            };\n            Terminal.prototype.scrollPages = function (pageCount) {\n              this.scrollLines(pageCount * (this.rows - 1));\n            };\n            Terminal.prototype.scrollToTop = function () {\n              this.scrollLines(-this.buffer.ydisp);\n            };\n            Terminal.prototype.scrollToBottom = function () {\n              this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n            };\n            Terminal.prototype.write = function (data) {\n              var _this = this;\n              this.writeBuffer.push(data);\n              if (\n                this.options.useFlowControl &&\n                !this.xoffSentToCatchUp &&\n                this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD\n              ) {\n                this.send(EscapeSequences_1.C0.DC3);\n                this.xoffSentToCatchUp = true;\n              }\n              if (!this.writeInProgress && this.writeBuffer.length > 0) {\n                this.writeInProgress = true;\n                setTimeout(function () {\n                  _this.innerWrite();\n                });\n              }\n            };\n            Terminal.prototype.innerWrite = function () {\n              var _this = this;\n              var writeBatch = this.writeBuffer.splice(0, WRITE_BATCH_SIZE);\n              while (writeBatch.length > 0) {\n                var data = writeBatch.shift();\n                if (\n                  this.xoffSentToCatchUp &&\n                  writeBatch.length === 0 &&\n                  this.writeBuffer.length === 0\n                ) {\n                  this.send(EscapeSequences_1.C0.DC1);\n                  this.xoffSentToCatchUp = false;\n                }\n                this.refreshStart = this.buffer.y;\n                this.refreshEnd = this.buffer.y;\n                var state = this.parser.parse(data);\n                this.parser.setState(state);\n                this.updateRange(this.buffer.y);\n                this.refresh(this.refreshStart, this.refreshEnd);\n              }\n              if (this.writeBuffer.length > 0) {\n                setTimeout(function () {\n                  return _this.innerWrite();\n                }, 0);\n              } else {\n                this.writeInProgress = false;\n              }\n            };\n            Terminal.prototype.writeln = function (data) {\n              this.write(data + \"\\r\\n\");\n            };\n            Terminal.prototype.attachCustomKeyEventHandler = function (\n              customKeyEventHandler,\n            ) {\n              this.customKeyEventHandler = customKeyEventHandler;\n            };\n            Terminal.prototype.setHypertextLinkHandler = function (handler) {\n              if (!this.linkifier) {\n                throw new Error(\n                  \"Cannot attach a hypertext link handler before Terminal.open is called\",\n                );\n              }\n              this.linkifier.setHypertextLinkHandler(handler);\n              this.refresh(0, this.rows - 1);\n            };\n            Terminal.prototype.setHypertextValidationCallback = function (\n              callback,\n            ) {\n              if (!this.linkifier) {\n                throw new Error(\n                  \"Cannot attach a hypertext validation callback before Terminal.open is called\",\n                );\n              }\n              this.linkifier.setHypertextValidationCallback(callback);\n              this.refresh(0, this.rows - 1);\n            };\n            Terminal.prototype.registerLinkMatcher = function (\n              regex,\n              handler,\n              options,\n            ) {\n              if (this.linkifier) {\n                var matcherId = this.linkifier.registerLinkMatcher(\n                  regex,\n                  handler,\n                  options,\n                );\n                this.refresh(0, this.rows - 1);\n                return matcherId;\n              }\n              return 0;\n            };\n            Terminal.prototype.deregisterLinkMatcher = function (matcherId) {\n              if (this.linkifier) {\n                if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n                  this.refresh(0, this.rows - 1);\n                }\n              }\n            };\n            Terminal.prototype.hasSelection = function () {\n              return this.selectionManager\n                ? this.selectionManager.hasSelection\n                : false;\n            };\n            Terminal.prototype.getSelection = function () {\n              return this.selectionManager\n                ? this.selectionManager.selectionText\n                : \"\";\n            };\n            Terminal.prototype.clearSelection = function () {\n              if (this.selectionManager) {\n                this.selectionManager.clearSelection();\n              }\n            };\n            Terminal.prototype.selectAll = function () {\n              if (this.selectionManager) {\n                this.selectionManager.selectAll();\n              }\n            };\n            Terminal.prototype._keyDown = function (ev) {\n              if (\n                this.customKeyEventHandler &&\n                this.customKeyEventHandler(ev) === false\n              ) {\n                return false;\n              }\n              if (!this.compositionHelper.keydown(ev)) {\n                if (this.buffer.ybase !== this.buffer.ydisp) {\n                  this.scrollToBottom();\n                }\n                return false;\n              }\n              var result = this._evaluateKeyEscapeSequence(ev);\n              if (result.key === EscapeSequences_1.C0.DC3) {\n                this.writeStopped = true;\n              } else if (result.key === EscapeSequences_1.C0.DC1) {\n                this.writeStopped = false;\n              }\n              if (result.scrollLines) {\n                this.scrollLines(result.scrollLines);\n                return this.cancel(ev, true);\n              }\n              if (isThirdLevelShift(this.browser, ev)) {\n                return true;\n              }\n              if (result.cancel) {\n                this.cancel(ev, true);\n              }\n              if (!result.key) {\n                return true;\n              }\n              this.emit(\"keydown\", ev);\n              this.emit(\"key\", result.key, ev);\n              this.showCursor();\n              this.handler(result.key);\n              return this.cancel(ev, true);\n            };\n            Terminal.prototype._evaluateKeyEscapeSequence = function (ev) {\n              var result = {\n                cancel: false,\n                key: undefined,\n                scrollLines: undefined,\n              };\n              var modifiers =\n                (ev.shiftKey ? 1 : 0) |\n                (ev.altKey ? 2 : 0) |\n                (ev.ctrlKey ? 4 : 0) |\n                (ev.metaKey ? 8 : 0);\n              switch (ev.keyCode) {\n                case 0:\n                  if (ev.key === \"UIKeyInputUpArrow\") {\n                    if (this.applicationCursor) {\n                      result.key = EscapeSequences_1.C0.ESC + \"OA\";\n                    } else {\n                      result.key = EscapeSequences_1.C0.ESC + \"[A\";\n                    }\n                  } else if (ev.key === \"UIKeyInputLeftArrow\") {\n                    if (this.applicationCursor) {\n                      result.key = EscapeSequences_1.C0.ESC + \"OD\";\n                    } else {\n                      result.key = EscapeSequences_1.C0.ESC + \"[D\";\n                    }\n                  } else if (ev.key === \"UIKeyInputRightArrow\") {\n                    if (this.applicationCursor) {\n                      result.key = EscapeSequences_1.C0.ESC + \"OC\";\n                    } else {\n                      result.key = EscapeSequences_1.C0.ESC + \"[C\";\n                    }\n                  } else if (ev.key === \"UIKeyInputDownArrow\") {\n                    if (this.applicationCursor) {\n                      result.key = EscapeSequences_1.C0.ESC + \"OB\";\n                    } else {\n                      result.key = EscapeSequences_1.C0.ESC + \"[B\";\n                    }\n                  }\n                  break;\n                case 8:\n                  if (ev.shiftKey) {\n                    result.key = EscapeSequences_1.C0.BS;\n                    break;\n                  } else if (ev.altKey) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + EscapeSequences_1.C0.DEL;\n                    break;\n                  }\n                  result.key = EscapeSequences_1.C0.DEL;\n                  break;\n                case 9:\n                  if (ev.shiftKey) {\n                    result.key = EscapeSequences_1.C0.ESC + \"[Z\";\n                    break;\n                  }\n                  result.key = EscapeSequences_1.C0.HT;\n                  result.cancel = true;\n                  break;\n                case 13:\n                  result.key = EscapeSequences_1.C0.CR;\n                  result.cancel = true;\n                  break;\n                case 27:\n                  result.key = EscapeSequences_1.C0.ESC;\n                  result.cancel = true;\n                  break;\n                case 37:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"D\";\n                    if (result.key === EscapeSequences_1.C0.ESC + \"[1;3D\") {\n                      result.key = this.browser.isMac\n                        ? EscapeSequences_1.C0.ESC + \"b\"\n                        : EscapeSequences_1.C0.ESC + \"[1;5D\";\n                    }\n                  } else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + \"OD\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[D\";\n                  }\n                  break;\n                case 39:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"C\";\n                    if (result.key === EscapeSequences_1.C0.ESC + \"[1;3C\") {\n                      result.key = this.browser.isMac\n                        ? EscapeSequences_1.C0.ESC + \"f\"\n                        : EscapeSequences_1.C0.ESC + \"[1;5C\";\n                    }\n                  } else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + \"OC\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[C\";\n                  }\n                  break;\n                case 38:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"A\";\n                    if (result.key === EscapeSequences_1.C0.ESC + \"[1;3A\") {\n                      result.key = EscapeSequences_1.C0.ESC + \"[1;5A\";\n                    }\n                  } else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + \"OA\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[A\";\n                  }\n                  break;\n                case 40:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"B\";\n                    if (result.key === EscapeSequences_1.C0.ESC + \"[1;3B\") {\n                      result.key = EscapeSequences_1.C0.ESC + \"[1;5B\";\n                    }\n                  } else if (this.applicationCursor) {\n                    result.key = EscapeSequences_1.C0.ESC + \"OB\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[B\";\n                  }\n                  break;\n                case 45:\n                  if (!ev.shiftKey && !ev.ctrlKey) {\n                    result.key = EscapeSequences_1.C0.ESC + \"[2~\";\n                  }\n                  break;\n                case 46:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[3;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[3~\";\n                  }\n                  break;\n                case 36:\n                  if (modifiers)\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"H\";\n                  else if (this.applicationCursor)\n                    result.key = EscapeSequences_1.C0.ESC + \"OH\";\n                  else result.key = EscapeSequences_1.C0.ESC + \"[H\";\n                  break;\n                case 35:\n                  if (modifiers)\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"F\";\n                  else if (this.applicationCursor)\n                    result.key = EscapeSequences_1.C0.ESC + \"OF\";\n                  else result.key = EscapeSequences_1.C0.ESC + \"[F\";\n                  break;\n                case 33:\n                  if (ev.shiftKey) {\n                    result.scrollLines = -(this.rows - 1);\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[5~\";\n                  }\n                  break;\n                case 34:\n                  if (ev.shiftKey) {\n                    result.scrollLines = this.rows - 1;\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[6~\";\n                  }\n                  break;\n                case 112:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"P\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"OP\";\n                  }\n                  break;\n                case 113:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"Q\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"OQ\";\n                  }\n                  break;\n                case 114:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"R\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"OR\";\n                  }\n                  break;\n                case 115:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[1;\" + (modifiers + 1) + \"S\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"OS\";\n                  }\n                  break;\n                case 116:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[15;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[15~\";\n                  }\n                  break;\n                case 117:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[17;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[17~\";\n                  }\n                  break;\n                case 118:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[18;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[18~\";\n                  }\n                  break;\n                case 119:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[19;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[19~\";\n                  }\n                  break;\n                case 120:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[20;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[20~\";\n                  }\n                  break;\n                case 121:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[21;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[21~\";\n                  }\n                  break;\n                case 122:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[23;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[23~\";\n                  }\n                  break;\n                case 123:\n                  if (modifiers) {\n                    result.key =\n                      EscapeSequences_1.C0.ESC + \"[24;\" + (modifiers + 1) + \"~\";\n                  } else {\n                    result.key = EscapeSequences_1.C0.ESC + \"[24~\";\n                  }\n                  break;\n                default:\n                  if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n                    if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n                      result.key = String.fromCharCode(ev.keyCode - 64);\n                    } else if (ev.keyCode === 32) {\n                      result.key = String.fromCharCode(0);\n                    } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n                      result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n                    } else if (ev.keyCode === 56) {\n                      result.key = String.fromCharCode(127);\n                    } else if (ev.keyCode === 219) {\n                      result.key = String.fromCharCode(27);\n                    } else if (ev.keyCode === 220) {\n                      result.key = String.fromCharCode(28);\n                    } else if (ev.keyCode === 221) {\n                      result.key = String.fromCharCode(29);\n                    }\n                  } else if (\n                    !this.browser.isMac &&\n                    ev.altKey &&\n                    !ev.ctrlKey &&\n                    !ev.metaKey\n                  ) {\n                    if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n                      result.key =\n                        EscapeSequences_1.C0.ESC +\n                        String.fromCharCode(ev.keyCode + 32);\n                    } else if (ev.keyCode === 192) {\n                      result.key = EscapeSequences_1.C0.ESC + \"`\";\n                    } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n                      result.key = EscapeSequences_1.C0.ESC + (ev.keyCode - 48);\n                    }\n                  } else if (\n                    this.browser.isMac &&\n                    !ev.altKey &&\n                    !ev.ctrlKey &&\n                    ev.metaKey\n                  ) {\n                    if (ev.keyCode === 65) {\n                      this.selectAll();\n                    }\n                  }\n                  break;\n              }\n              return result;\n            };\n            Terminal.prototype.setgLevel = function (g) {\n              this.glevel = g;\n              this.charset = this.charsets[g];\n            };\n            Terminal.prototype.setgCharset = function (g, charset) {\n              this.charsets[g] = charset;\n              if (this.glevel === g) {\n                this.charset = charset;\n              }\n            };\n            Terminal.prototype._keyPress = function (ev) {\n              var key;\n              if (\n                this.customKeyEventHandler &&\n                this.customKeyEventHandler(ev) === false\n              ) {\n                return false;\n              }\n              this.cancel(ev);\n              if (ev.charCode) {\n                key = ev.charCode;\n              } else if (ev.which == null) {\n                key = ev.keyCode;\n              } else if (ev.which !== 0 && ev.charCode !== 0) {\n                key = ev.which;\n              } else {\n                return false;\n              }\n              if (\n                !key ||\n                ((ev.altKey || ev.ctrlKey || ev.metaKey) &&\n                  !isThirdLevelShift(this.browser, ev))\n              ) {\n                return false;\n              }\n              key = String.fromCharCode(key);\n              this.emit(\"keypress\", key, ev);\n              this.emit(\"key\", key, ev);\n              this.showCursor();\n              this.handler(key);\n              return true;\n            };\n            Terminal.prototype.send = function (data) {\n              var _this = this;\n              if (!this.sendDataQueue) {\n                setTimeout(function () {\n                  _this.handler(_this.sendDataQueue);\n                  _this.sendDataQueue = \"\";\n                }, 1);\n              }\n              this.sendDataQueue += data;\n            };\n            Terminal.prototype.bell = function () {\n              var _this = this;\n              this.emit(\"bell\");\n              if (this.soundBell()) this.bellAudioElement.play();\n              if (this.visualBell()) {\n                this.element.classList.add(\"visual-bell-active\");\n                clearTimeout(this.visualBellTimer);\n                this.visualBellTimer = window.setTimeout(function () {\n                  _this.element.classList.remove(\"visual-bell-active\");\n                }, 200);\n              }\n            };\n            Terminal.prototype.log = function (text, data) {\n              if (!this.options.debug) return;\n              if (!this.context.console || !this.context.console.log) return;\n              this.context.console.log(text, data);\n            };\n            Terminal.prototype.error = function (text, data) {\n              if (!this.options.debug) return;\n              if (!this.context.console || !this.context.console.error) return;\n              this.context.console.error(text, data);\n            };\n            Terminal.prototype.resize = function (x, y) {\n              if (isNaN(x) || isNaN(y)) {\n                return;\n              }\n              if (x === this.cols && y === this.rows) {\n                if (!this.charMeasure.width || !this.charMeasure.height) {\n                  this.charMeasure.measure(this.options);\n                }\n                return;\n              }\n              if (x < 1) x = 1;\n              if (y < 1) y = 1;\n              this.buffers.resize(x, y);\n              this.cols = x;\n              this.rows = y;\n              this.buffers.setupTabStops(this.cols);\n              this.charMeasure.measure(this.options);\n              this.refresh(0, this.rows - 1);\n              this.emit(\"resize\", { cols: x, rows: y });\n            };\n            Terminal.prototype.updateRange = function (y) {\n              if (y < this.refreshStart) this.refreshStart = y;\n              if (y > this.refreshEnd) this.refreshEnd = y;\n            };\n            Terminal.prototype.maxRange = function () {\n              this.refreshStart = 0;\n              this.refreshEnd = this.rows - 1;\n            };\n            Terminal.prototype.eraseRight = function (x, y) {\n              var line = this.buffer.lines.get(this.buffer.ybase + y);\n              if (!line) {\n                return;\n              }\n              var ch = [this.eraseAttr(), \" \", 1, 32];\n              for (; x < this.cols; x++) {\n                line[x] = ch;\n              }\n              this.updateRange(y);\n            };\n            Terminal.prototype.eraseLeft = function (x, y) {\n              var line = this.buffer.lines.get(this.buffer.ybase + y);\n              if (!line) {\n                return;\n              }\n              var ch = [this.eraseAttr(), \" \", 1, 32];\n              x++;\n              while (x--) {\n                line[x] = ch;\n              }\n              this.updateRange(y);\n            };\n            Terminal.prototype.clear = function () {\n              if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n                return;\n              }\n              this.buffer.lines.set(\n                0,\n                this.buffer.lines.get(this.buffer.ybase + this.buffer.y),\n              );\n              this.buffer.lines.length = 1;\n              this.buffer.ydisp = 0;\n              this.buffer.ybase = 0;\n              this.buffer.y = 0;\n              for (var i = 1; i < this.rows; i++) {\n                this.buffer.lines.push(this.blankLine());\n              }\n              this.refresh(0, this.rows - 1);\n              this.emit(\"scroll\", this.buffer.ydisp);\n            };\n            Terminal.prototype.eraseLine = function (y) {\n              this.eraseRight(0, y);\n            };\n            Terminal.prototype.blankLine = function (cur, isWrapped, cols) {\n              var attr = cur ? this.eraseAttr() : this.defAttr;\n              var ch = [attr, \" \", 1, 32];\n              var line = [];\n              if (isWrapped) {\n                line.isWrapped = isWrapped;\n              }\n              cols = cols || this.cols;\n              for (var i = 0; i < cols; i++) {\n                line[i] = ch;\n              }\n              return line;\n            };\n            Terminal.prototype.ch = function (cur) {\n              if (cur) {\n                return [this.eraseAttr(), \" \", 1, 32];\n              }\n              return [this.defAttr, \" \", 1, 32];\n            };\n            Terminal.prototype.is = function (term) {\n              return (this.options.termName + \"\").indexOf(term) === 0;\n            };\n            Terminal.prototype.handler = function (data) {\n              if (this.options.disableStdin) {\n                return;\n              }\n              if (this.selectionManager && this.selectionManager.hasSelection) {\n                this.selectionManager.clearSelection();\n              }\n              if (this.buffer.ybase !== this.buffer.ydisp) {\n                this.scrollToBottom();\n              }\n              this.emit(\"data\", data);\n            };\n            Terminal.prototype.handleTitle = function (title) {\n              this.emit(\"title\", title);\n            };\n            Terminal.prototype.index = function () {\n              this.buffer.y++;\n              if (this.buffer.y > this.buffer.scrollBottom) {\n                this.buffer.y--;\n                this.scroll();\n              }\n              if (this.buffer.x >= this.cols) {\n                this.buffer.x--;\n              }\n            };\n            Terminal.prototype.reverseIndex = function () {\n              if (this.buffer.y === this.buffer.scrollTop) {\n                var scrollRegionHeight =\n                  this.buffer.scrollBottom - this.buffer.scrollTop;\n                this.buffer.lines.shiftElements(\n                  this.buffer.y + this.buffer.ybase,\n                  scrollRegionHeight,\n                  1,\n                );\n                this.buffer.lines.set(\n                  this.buffer.y + this.buffer.ybase,\n                  this.blankLine(true),\n                );\n                this.updateRange(this.buffer.scrollTop);\n                this.updateRange(this.buffer.scrollBottom);\n              } else {\n                this.buffer.y--;\n              }\n            };\n            Terminal.prototype.reset = function () {\n              this.options.rows = this.rows;\n              this.options.cols = this.cols;\n              var customKeyEventHandler = this.customKeyEventHandler;\n              var inputHandler = this.inputHandler;\n              var buffers = this.buffers;\n              this.setup();\n              this.customKeyEventHandler = customKeyEventHandler;\n              this.inputHandler = inputHandler;\n              this.buffers = buffers;\n              this.refresh(0, this.rows - 1);\n              this.viewport.syncScrollArea();\n            };\n            Terminal.prototype.tabSet = function () {\n              this.buffer.tabs[this.buffer.x] = true;\n            };\n            Terminal.prototype.cancel = function (ev, force) {\n              if (!this.options.cancelEvents && !force) {\n                return;\n              }\n              ev.preventDefault();\n              ev.stopPropagation();\n              return false;\n            };\n            Terminal.prototype.matchColor = function (r1, g1, b1) {\n              return matchColor_(r1, g1, b1);\n            };\n            Terminal.prototype.visualBell = function () {\n              return (\n                this.options.bellStyle === \"visual\" ||\n                this.options.bellStyle === \"both\"\n              );\n            };\n            Terminal.prototype.soundBell = function () {\n              return (\n                this.options.bellStyle === \"sound\" ||\n                this.options.bellStyle === \"both\"\n              );\n            };\n            Terminal.prototype.syncBellSound = function () {\n              if (!this.element) {\n                return;\n              }\n              if (this.soundBell() && this.bellAudioElement) {\n                this.bellAudioElement.setAttribute(\n                  \"src\",\n                  this.options.bellSound,\n                );\n              } else if (this.soundBell()) {\n                this.bellAudioElement = document.createElement(\"audio\");\n                this.bellAudioElement.setAttribute(\"preload\", \"auto\");\n                this.bellAudioElement.setAttribute(\n                  \"src\",\n                  this.options.bellSound,\n                );\n                this.helperContainer.appendChild(this.bellAudioElement);\n              } else if (this.bellAudioElement) {\n                this.helperContainer.removeChild(this.bellAudioElement);\n              }\n            };\n            return Terminal;\n          })(EventEmitter_1.EventEmitter);\n          exports.Terminal = Terminal;\n          function globalOn(el, type, handler, capture) {\n            if (!Array.isArray(el)) {\n              el = [el];\n            }\n            el.forEach(function (element) {\n              element.addEventListener(type, handler, capture || false);\n            });\n          }\n          var on = globalOn;\n          function off(el, type, handler, capture) {\n            if (capture === void 0) {\n              capture = false;\n            }\n            el.removeEventListener(type, handler, capture);\n          }\n          function isThirdLevelShift(browser, ev) {\n            var thirdLevelKey =\n              (browser.isMac && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n              (browser.isMSWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n            if (ev.type === \"keypress\") {\n              return thirdLevelKey;\n            }\n            return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n          }\n          function wasMondifierKeyOnlyEvent(ev) {\n            return ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18;\n          }\n          var vcolors = (function () {\n            var result = ColorManager_1.DEFAULT_ANSI_COLORS.map(function (c) {\n              c = c.substring(1);\n              return [\n                parseInt(c.substring(0, 2), 16),\n                parseInt(c.substring(2, 4), 16),\n                parseInt(c.substring(4, 6), 16),\n              ];\n            });\n            var r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n            for (var i = 0; i < 216; i++) {\n              result.push([r[(i / 36) % 6 | 0], r[(i / 6) % 6 | 0], r[i % 6]]);\n            }\n            var c;\n            for (var i = 0; i < 24; i++) {\n              c = 8 + i * 10;\n              result.push([c, c, c]);\n            }\n            return result;\n          })();\n          var matchColorCache = {};\n          function matchColorDistance(r1, g1, b1, r2, g2, b2) {\n            return (\n              Math.pow(30 * (r1 - r2), 2) +\n              Math.pow(59 * (g1 - g2), 2) +\n              Math.pow(11 * (b1 - b2), 2)\n            );\n          }\n          function matchColor_(r1, g1, b1) {\n            var hash = (r1 << 16) | (g1 << 8) | b1;\n            if (matchColorCache[hash] != null) {\n              return matchColorCache[hash];\n            }\n            var ldiff = Infinity;\n            var li = -1;\n            var i = 0;\n            var c;\n            var r2;\n            var g2;\n            var b2;\n            var diff;\n            for (; i < vcolors.length; i++) {\n              c = vcolors[i];\n              r2 = c[0];\n              g2 = c[1];\n              b2 = c[2];\n              diff = matchColorDistance(r1, g1, b1, r2, g2, b2);\n              if (diff === 0) {\n                li = i;\n                break;\n              }\n              if (diff < ldiff) {\n                ldiff = diff;\n                li = i;\n              }\n            }\n            return (matchColorCache[hash] = li);\n          }\n        },\n        {\n          \"./Buffer\": 1,\n          \"./BufferSet\": 2,\n          \"./CompositionHelper\": 5,\n          \"./EscapeSequences\": 6,\n          \"./EventEmitter\": 7,\n          \"./InputHandler\": 8,\n          \"./Linkifier\": 9,\n          \"./Parser\": 10,\n          \"./SelectionManager\": 11,\n          \"./Viewport\": 15,\n          \"./handlers/Clipboard\": 16,\n          \"./input/MouseZoneManager\": 17,\n          \"./renderer/CharAtlas\": 19,\n          \"./renderer/ColorManager\": 20,\n          \"./renderer/Renderer\": 24,\n          \"./utils/Browser\": 28,\n          \"./utils/CharMeasure\": 29,\n          \"./utils/MouseHelper\": 32,\n          \"./utils/Sounds\": 34,\n        },\n      ],\n      14: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var LinkHoverEventTypes;\n          (function (LinkHoverEventTypes) {\n            LinkHoverEventTypes[\"HOVER\"] = \"linkhover\";\n            LinkHoverEventTypes[\"TOOLTIP\"] = \"linktooltip\";\n            LinkHoverEventTypes[\"LEAVE\"] = \"linkleave\";\n          })(\n            (LinkHoverEventTypes =\n              exports.LinkHoverEventTypes ||\n              (exports.LinkHoverEventTypes = {})),\n          );\n        },\n        {},\n      ],\n      15: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Viewport = (function () {\n            function Viewport(\n              terminal,\n              viewportElement,\n              scrollArea,\n              charMeasure,\n            ) {\n              var _this = this;\n              this.terminal = terminal;\n              this.viewportElement = viewportElement;\n              this.scrollArea = scrollArea;\n              this.charMeasure = charMeasure;\n              this.currentRowHeight = 0;\n              this.lastRecordedBufferLength = 0;\n              this.lastRecordedViewportHeight = 0;\n              this.lastRecordedBufferHeight = 0;\n              this.viewportElement.addEventListener(\n                \"scroll\",\n                this.onScroll.bind(this),\n              );\n              setTimeout(function () {\n                return _this.syncScrollArea();\n              }, 0);\n            }\n            Viewport.prototype.onThemeChanged = function (colors) {\n              this.viewportElement.style.backgroundColor = colors.background;\n            };\n            Viewport.prototype.refresh = function () {\n              if (this.charMeasure.height > 0) {\n                this.currentRowHeight =\n                  this.terminal.renderer.dimensions.scaledCellHeight /\n                  window.devicePixelRatio;\n                if (\n                  this.lastRecordedViewportHeight !==\n                  this.terminal.renderer.dimensions.canvasHeight\n                ) {\n                  this.lastRecordedViewportHeight =\n                    this.terminal.renderer.dimensions.canvasHeight;\n                  this.viewportElement.style.height =\n                    this.lastRecordedViewportHeight + \"px\";\n                }\n                var newBufferHeight = Math.round(\n                  this.currentRowHeight * this.lastRecordedBufferLength,\n                );\n                if (this.lastRecordedBufferHeight !== newBufferHeight) {\n                  this.lastRecordedBufferHeight = newBufferHeight;\n                  this.scrollArea.style.height =\n                    this.lastRecordedBufferHeight + \"px\";\n                }\n              }\n            };\n            Viewport.prototype.syncScrollArea = function () {\n              if (\n                this.lastRecordedBufferLength !==\n                this.terminal.buffer.lines.length\n              ) {\n                this.lastRecordedBufferLength =\n                  this.terminal.buffer.lines.length;\n                this.refresh();\n              } else if (\n                this.lastRecordedViewportHeight !==\n                this.terminal.renderer.dimensions.canvasHeight\n              ) {\n                this.refresh();\n              } else {\n                if (\n                  this.terminal.renderer.dimensions.scaledCellHeight /\n                    window.devicePixelRatio !==\n                  this.currentRowHeight\n                ) {\n                  this.refresh();\n                }\n              }\n              var scrollTop =\n                this.terminal.buffer.ydisp * this.currentRowHeight;\n              if (this.viewportElement.scrollTop !== scrollTop) {\n                this.viewportElement.scrollTop = scrollTop;\n              }\n            };\n            Viewport.prototype.onScroll = function (ev) {\n              var newRow = Math.round(\n                this.viewportElement.scrollTop / this.currentRowHeight,\n              );\n              var diff = newRow - this.terminal.buffer.ydisp;\n              this.terminal.scrollLines(diff, true);\n            };\n            Viewport.prototype.onWheel = function (ev) {\n              if (ev.deltaY === 0) {\n                return;\n              }\n              var multiplier = 1;\n              if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                multiplier = this.currentRowHeight;\n              } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n                multiplier = this.currentRowHeight * this.terminal.rows;\n              }\n              this.viewportElement.scrollTop += ev.deltaY * multiplier;\n              ev.preventDefault();\n            };\n            Viewport.prototype.onTouchStart = function (ev) {\n              this.lastTouchY = ev.touches[0].pageY;\n            };\n            Viewport.prototype.onTouchMove = function (ev) {\n              var deltaY = this.lastTouchY - ev.touches[0].pageY;\n              this.lastTouchY = ev.touches[0].pageY;\n              if (deltaY === 0) {\n                return;\n              }\n              this.viewportElement.scrollTop += deltaY;\n              ev.preventDefault();\n            };\n            return Viewport;\n          })();\n          exports.Viewport = Viewport;\n        },\n        {},\n      ],\n      16: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          function prepareTextForTerminal(text, isMSWindows) {\n            if (isMSWindows) {\n              return text.replace(/\\r?\\n/g, \"\\r\");\n            }\n            return text;\n          }\n          exports.prepareTextForTerminal = prepareTextForTerminal;\n          function bracketTextForPaste(text, bracketedPasteMode) {\n            if (bracketedPasteMode) {\n              return \"\\x1b[200~\" + text + \"\\x1b[201~\";\n            }\n            return text;\n          }\n          exports.bracketTextForPaste = bracketTextForPaste;\n          function copyHandler(ev, term, selectionManager) {\n            if (term.browser.isMSIE) {\n              window.clipboardData.setData(\n                \"Text\",\n                selectionManager.selectionText,\n              );\n            } else {\n              ev.clipboardData.setData(\n                \"text/plain\",\n                selectionManager.selectionText,\n              );\n            }\n            ev.preventDefault();\n          }\n          exports.copyHandler = copyHandler;\n          function pasteHandler(ev, term) {\n            ev.stopPropagation();\n            var text;\n            var dispatchPaste = function (text) {\n              text = prepareTextForTerminal(text, term.browser.isMSWindows);\n              text = bracketTextForPaste(text, term.bracketedPasteMode);\n              term.handler(text);\n              term.textarea.value = \"\";\n              term.emit(\"paste\", text);\n              term.cancel(ev);\n            };\n            if (term.browser.isMSIE) {\n              if (window.clipboardData) {\n                text = window.clipboardData.getData(\"Text\");\n                dispatchPaste(text);\n              }\n            } else {\n              if (ev.clipboardData) {\n                text = ev.clipboardData.getData(\"text/plain\");\n                dispatchPaste(text);\n              }\n            }\n          }\n          exports.pasteHandler = pasteHandler;\n          function moveTextAreaUnderMouseCursor(ev, textarea) {\n            textarea.style.position = \"fixed\";\n            textarea.style.width = \"20px\";\n            textarea.style.height = \"20px\";\n            textarea.style.left = ev.clientX - 10 + \"px\";\n            textarea.style.top = ev.clientY - 10 + \"px\";\n            textarea.style.zIndex = \"1000\";\n            textarea.focus();\n            setTimeout(function () {\n              textarea.style.position = null;\n              textarea.style.width = null;\n              textarea.style.height = null;\n              textarea.style.left = null;\n              textarea.style.top = null;\n              textarea.style.zIndex = null;\n            }, 4);\n          }\n          exports.moveTextAreaUnderMouseCursor = moveTextAreaUnderMouseCursor;\n          function rightClickHandler(ev, textarea, selectionManager) {\n            moveTextAreaUnderMouseCursor(ev, textarea);\n            textarea.value = selectionManager.selectionText;\n            textarea.select();\n          }\n          exports.rightClickHandler = rightClickHandler;\n        },\n        {},\n      ],\n      17: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var HOVER_DURATION = 500;\n          var MouseZoneManager = (function () {\n            function MouseZoneManager(_terminal) {\n              var _this = this;\n              this._terminal = _terminal;\n              this._zones = [];\n              this._areZonesActive = false;\n              this._tooltipTimeout = null;\n              this._currentZone = null;\n              this._lastHoverCoords = [null, null];\n              this._terminal.element.addEventListener(\n                \"mousedown\",\n                function (e) {\n                  return _this._onMouseDown(e);\n                },\n              );\n              this._mouseMoveListener = function (e) {\n                return _this._onMouseMove(e);\n              };\n              this._clickListener = function (e) {\n                return _this._onClick(e);\n              };\n            }\n            MouseZoneManager.prototype.add = function (zone) {\n              this._zones.push(zone);\n              if (this._zones.length === 1) {\n                this._activate();\n              }\n            };\n            MouseZoneManager.prototype.clearAll = function (start, end) {\n              if (this._zones.length === 0) {\n                return;\n              }\n              if (!end) {\n                start = 0;\n                end = this._terminal.rows - 1;\n              }\n              for (var i = 0; i < this._zones.length; i++) {\n                var zone = this._zones[i];\n                if (zone.y > start && zone.y <= end + 1) {\n                  if (this._currentZone && this._currentZone === zone) {\n                    this._currentZone.leaveCallback();\n                    this._currentZone = null;\n                  }\n                  this._zones.splice(i--, 1);\n                }\n              }\n              if (this._zones.length === 0) {\n                this._deactivate();\n              }\n            };\n            MouseZoneManager.prototype._activate = function () {\n              if (!this._areZonesActive) {\n                this._areZonesActive = true;\n                this._terminal.element.addEventListener(\n                  \"mousemove\",\n                  this._mouseMoveListener,\n                );\n                this._terminal.element.addEventListener(\n                  \"click\",\n                  this._clickListener,\n                );\n              }\n            };\n            MouseZoneManager.prototype._deactivate = function () {\n              if (this._areZonesActive) {\n                this._areZonesActive = false;\n                this._terminal.element.removeEventListener(\n                  \"mousemove\",\n                  this._mouseMoveListener,\n                );\n                this._terminal.element.removeEventListener(\n                  \"click\",\n                  this._clickListener,\n                );\n              }\n            };\n            MouseZoneManager.prototype._onMouseMove = function (e) {\n              if (\n                this._lastHoverCoords[0] !== e.pageX ||\n                this._lastHoverCoords[1] !== e.pageY\n              ) {\n                this._onHover(e);\n                this._lastHoverCoords = [e.pageX, e.pageY];\n              }\n            };\n            MouseZoneManager.prototype._onHover = function (e) {\n              var _this = this;\n              var zone = this._findZoneEventAt(e);\n              if (zone === this._currentZone) {\n                return;\n              }\n              if (this._currentZone) {\n                this._currentZone.leaveCallback();\n                this._currentZone = null;\n                if (this._tooltipTimeout) {\n                  clearTimeout(this._tooltipTimeout);\n                }\n              }\n              if (!zone) {\n                return;\n              }\n              this._currentZone = zone;\n              if (zone.hoverCallback) {\n                zone.hoverCallback(e);\n              }\n              this._tooltipTimeout = setTimeout(function () {\n                return _this._onTooltip(e);\n              }, HOVER_DURATION);\n            };\n            MouseZoneManager.prototype._onTooltip = function (e) {\n              this._tooltipTimeout = null;\n              var zone = this._findZoneEventAt(e);\n              if (zone && zone.tooltipCallback) {\n                zone.tooltipCallback(e);\n              }\n            };\n            MouseZoneManager.prototype._onMouseDown = function (e) {\n              if (!this._areZonesActive) {\n                return;\n              }\n              var zone = this._findZoneEventAt(e);\n              if (zone) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n              }\n            };\n            MouseZoneManager.prototype._onClick = function (e) {\n              var zone = this._findZoneEventAt(e);\n              if (zone) {\n                zone.clickCallback(e);\n                e.preventDefault();\n                e.stopImmediatePropagation();\n              }\n            };\n            MouseZoneManager.prototype._findZoneEventAt = function (e) {\n              var coords = this._terminal.mouseHelper.getCoords(\n                e,\n                this._terminal.element,\n                this._terminal.charMeasure,\n                this._terminal.options.lineHeight,\n                this._terminal.cols,\n                this._terminal.rows,\n              );\n              if (!coords) {\n                return null;\n              }\n              for (var i = 0; i < this._zones.length; i++) {\n                var zone = this._zones[i];\n                if (\n                  zone.y === coords[1] &&\n                  zone.x1 <= coords[0] &&\n                  zone.x2 > coords[0]\n                ) {\n                  return zone;\n                }\n              }\n              return null;\n            };\n            return MouseZoneManager;\n          })();\n          exports.MouseZoneManager = MouseZoneManager;\n          var MouseZone = (function () {\n            function MouseZone(\n              x1,\n              x2,\n              y,\n              clickCallback,\n              hoverCallback,\n              tooltipCallback,\n              leaveCallback,\n            ) {\n              this.x1 = x1;\n              this.x2 = x2;\n              this.y = y;\n              this.clickCallback = clickCallback;\n              this.hoverCallback = hoverCallback;\n              this.tooltipCallback = tooltipCallback;\n              this.leaveCallback = leaveCallback;\n            }\n            return MouseZone;\n          })();\n          exports.MouseZone = MouseZone;\n        },\n        {},\n      ],\n      18: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var CharAtlas_1 = require(\"./CharAtlas\");\n          var Buffer_1 = require(\"../Buffer\");\n          exports.INVERTED_DEFAULT_COLOR = -1;\n          var DIM_OPACITY = 0.5;\n          var BaseRenderLayer = (function () {\n            function BaseRenderLayer(container, id, zIndex, _alpha, _colors) {\n              this._alpha = _alpha;\n              this._colors = _colors;\n              this._scaledCharWidth = 0;\n              this._scaledCharHeight = 0;\n              this._scaledCellWidth = 0;\n              this._scaledCellHeight = 0;\n              this._scaledCharLeft = 0;\n              this._scaledCharTop = 0;\n              this._canvas = document.createElement(\"canvas\");\n              this._canvas.id = \"xterm-\" + id + \"-layer\";\n              this._canvas.style.zIndex = zIndex.toString();\n              this._ctx = this._canvas.getContext(\"2d\", { alpha: _alpha });\n              this._ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n              if (!_alpha) {\n                this.clearAll();\n              }\n              container.appendChild(this._canvas);\n            }\n            BaseRenderLayer.prototype.onOptionsChanged = function (terminal) {};\n            BaseRenderLayer.prototype.onBlur = function (terminal) {};\n            BaseRenderLayer.prototype.onFocus = function (terminal) {};\n            BaseRenderLayer.prototype.onCursorMove = function (terminal) {};\n            BaseRenderLayer.prototype.onGridChanged = function (\n              terminal,\n              startRow,\n              endRow,\n            ) {};\n            BaseRenderLayer.prototype.onSelectionChanged = function (\n              terminal,\n              start,\n              end,\n            ) {};\n            BaseRenderLayer.prototype.onThemeChanged = function (\n              terminal,\n              colorSet,\n            ) {\n              this._refreshCharAtlas(terminal, colorSet);\n            };\n            BaseRenderLayer.prototype._refreshCharAtlas = function (\n              terminal,\n              colorSet,\n            ) {\n              var _this = this;\n              if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n                return;\n              }\n              this._charAtlas = null;\n              var result = CharAtlas_1.acquireCharAtlas(\n                terminal,\n                this._colors,\n                this._scaledCharWidth,\n                this._scaledCharHeight,\n              );\n              if (result instanceof HTMLCanvasElement) {\n                this._charAtlas = result;\n              } else {\n                result.then(function (bitmap) {\n                  return (_this._charAtlas = bitmap);\n                });\n              }\n            };\n            BaseRenderLayer.prototype.resize = function (\n              terminal,\n              dim,\n              charSizeChanged,\n            ) {\n              this._scaledCellWidth = dim.scaledCellWidth;\n              this._scaledCellHeight = dim.scaledCellHeight;\n              this._scaledCharWidth = dim.scaledCharWidth;\n              this._scaledCharHeight = dim.scaledCharHeight;\n              this._scaledCharLeft = dim.scaledCharLeft;\n              this._scaledCharTop = dim.scaledCharTop;\n              this._canvas.width = dim.scaledCanvasWidth;\n              this._canvas.height = dim.scaledCanvasHeight;\n              this._canvas.style.width = dim.canvasWidth + \"px\";\n              this._canvas.style.height = dim.canvasHeight + \"px\";\n              if (!this._alpha) {\n                this.clearAll();\n              }\n              if (charSizeChanged) {\n                this._refreshCharAtlas(terminal, this._colors);\n              }\n            };\n            BaseRenderLayer.prototype.fillCells = function (\n              x,\n              y,\n              width,\n              height,\n            ) {\n              this._ctx.fillRect(\n                x * this._scaledCellWidth,\n                y * this._scaledCellHeight,\n                width * this._scaledCellWidth,\n                height * this._scaledCellHeight,\n              );\n            };\n            BaseRenderLayer.prototype.fillBottomLineAtCells = function (\n              x,\n              y,\n              width,\n            ) {\n              if (width === void 0) {\n                width = 1;\n              }\n              this._ctx.fillRect(\n                x * this._scaledCellWidth,\n                (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1,\n                width * this._scaledCellWidth,\n                window.devicePixelRatio,\n              );\n            };\n            BaseRenderLayer.prototype.fillLeftLineAtCell = function (x, y) {\n              this._ctx.fillRect(\n                x * this._scaledCellWidth,\n                y * this._scaledCellHeight,\n                window.devicePixelRatio,\n                this._scaledCellHeight,\n              );\n            };\n            BaseRenderLayer.prototype.strokeRectAtCell = function (\n              x,\n              y,\n              width,\n              height,\n            ) {\n              this._ctx.lineWidth = window.devicePixelRatio;\n              this._ctx.strokeRect(\n                x * this._scaledCellWidth + window.devicePixelRatio / 2,\n                y * this._scaledCellHeight + window.devicePixelRatio / 2,\n                width * this._scaledCellWidth - window.devicePixelRatio,\n                height * this._scaledCellHeight - window.devicePixelRatio,\n              );\n            };\n            BaseRenderLayer.prototype.clearAll = function () {\n              if (this._alpha) {\n                this._ctx.clearRect(\n                  0,\n                  0,\n                  this._canvas.width,\n                  this._canvas.height,\n                );\n              } else {\n                this._ctx.fillStyle = this._colors.background;\n                this._ctx.fillRect(\n                  0,\n                  0,\n                  this._canvas.width,\n                  this._canvas.height,\n                );\n              }\n            };\n            BaseRenderLayer.prototype.clearCells = function (\n              x,\n              y,\n              width,\n              height,\n            ) {\n              if (this._alpha) {\n                this._ctx.clearRect(\n                  x * this._scaledCellWidth,\n                  y * this._scaledCellHeight,\n                  width * this._scaledCellWidth,\n                  height * this._scaledCellHeight,\n                );\n              } else {\n                this._ctx.fillStyle = this._colors.background;\n                this._ctx.fillRect(\n                  x * this._scaledCellWidth,\n                  y * this._scaledCellHeight,\n                  width * this._scaledCellWidth,\n                  height * this._scaledCellHeight,\n                );\n              }\n            };\n            BaseRenderLayer.prototype.fillCharTrueColor = function (\n              terminal,\n              charData,\n              x,\n              y,\n            ) {\n              this._ctx.font =\n                terminal.options.fontSize * window.devicePixelRatio +\n                \"px \" +\n                terminal.options.fontFamily;\n              this._ctx.textBaseline = \"top\";\n              this._clipRow(terminal, y);\n              this._ctx.fillText(\n                charData[Buffer_1.CHAR_DATA_CHAR_INDEX],\n                x * this._scaledCellWidth + this._scaledCharLeft,\n                y * this._scaledCellHeight + this._scaledCharTop,\n              );\n            };\n            BaseRenderLayer.prototype.drawChar = function (\n              terminal,\n              char,\n              code,\n              width,\n              x,\n              y,\n              fg,\n              bg,\n              bold,\n              dim,\n            ) {\n              var colorIndex = 0;\n              if (fg < 256) {\n                colorIndex = fg + 2;\n              } else {\n                if (bold && terminal.options.enableBold) {\n                  colorIndex = 1;\n                }\n              }\n              var isAscii = code < 256;\n              var isBasicColor = colorIndex > 1 && fg < 16 && (fg < 8 || bold);\n              var isDefaultColor = fg >= 256;\n              var isDefaultBackground = bg >= 256;\n              if (\n                this._charAtlas &&\n                isAscii &&\n                (isBasicColor || isDefaultColor) &&\n                isDefaultBackground\n              ) {\n                var charAtlasCellWidth =\n                  this._scaledCharWidth + CharAtlas_1.CHAR_ATLAS_CELL_SPACING;\n                var charAtlasCellHeight =\n                  this._scaledCharHeight + CharAtlas_1.CHAR_ATLAS_CELL_SPACING;\n                if (dim) {\n                  this._ctx.globalAlpha = DIM_OPACITY;\n                }\n                if (bold && !terminal.options.enableBold) {\n                  if (colorIndex > 1) {\n                    colorIndex -= 8;\n                  }\n                }\n                this._ctx.drawImage(\n                  this._charAtlas,\n                  code * charAtlasCellWidth,\n                  colorIndex * charAtlasCellHeight,\n                  charAtlasCellWidth,\n                  this._scaledCharHeight,\n                  x * this._scaledCellWidth + this._scaledCharLeft,\n                  y * this._scaledCellHeight + this._scaledCharTop,\n                  charAtlasCellWidth,\n                  this._scaledCharHeight,\n                );\n              } else {\n                this._drawUncachedChar(\n                  terminal,\n                  char,\n                  width,\n                  fg,\n                  x,\n                  y,\n                  bold,\n                  dim,\n                );\n              }\n            };\n            BaseRenderLayer.prototype._drawUncachedChar = function (\n              terminal,\n              char,\n              width,\n              fg,\n              x,\n              y,\n              bold,\n              dim,\n            ) {\n              this._ctx.save();\n              this._ctx.font =\n                terminal.options.fontSize * window.devicePixelRatio +\n                \"px \" +\n                terminal.options.fontFamily;\n              if (bold && terminal.options.enableBold) {\n                this._ctx.font = \"bold \" + this._ctx.font;\n              }\n              this._ctx.textBaseline = \"top\";\n              if (fg === exports.INVERTED_DEFAULT_COLOR) {\n                this._ctx.fillStyle = this._colors.background;\n              } else if (fg < 256) {\n                this._ctx.fillStyle = this._colors.ansi[fg];\n              } else {\n                this._ctx.fillStyle = this._colors.foreground;\n              }\n              this._clipRow(terminal, y);\n              if (dim) {\n                this._ctx.globalAlpha = DIM_OPACITY;\n              }\n              this._ctx.fillText(\n                char,\n                x * this._scaledCellWidth + this._scaledCharLeft,\n                y * this._scaledCellHeight + this._scaledCharTop,\n              );\n              this._ctx.restore();\n            };\n            BaseRenderLayer.prototype._clipRow = function (terminal, y) {\n              this._ctx.beginPath();\n              this._ctx.rect(\n                0,\n                y * this._scaledCellHeight,\n                terminal.cols * this._scaledCellWidth,\n                this._scaledCellHeight,\n              );\n              this._ctx.clip();\n            };\n            return BaseRenderLayer;\n          })();\n          exports.BaseRenderLayer = BaseRenderLayer;\n        },\n        { \"../Buffer\": 1, \"./CharAtlas\": 19 },\n      ],\n      19: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Browser_1 = require(\"../utils/Browser\");\n          exports.CHAR_ATLAS_CELL_SPACING = 1;\n          var charAtlasCache = [];\n          function acquireCharAtlas(\n            terminal,\n            colors,\n            scaledCharWidth,\n            scaledCharHeight,\n          ) {\n            var newConfig = generateConfig(\n              scaledCharWidth,\n              scaledCharHeight,\n              terminal,\n              colors,\n            );\n            for (var i = 0; i < charAtlasCache.length; i++) {\n              var entry = charAtlasCache[i];\n              var ownedByIndex = entry.ownedBy.indexOf(terminal);\n              if (ownedByIndex >= 0) {\n                if (configEquals(entry.config, newConfig)) {\n                  return entry.bitmap;\n                } else {\n                  if (entry.ownedBy.length === 1) {\n                    charAtlasCache.splice(i, 1);\n                  } else {\n                    entry.ownedBy.splice(ownedByIndex, 1);\n                  }\n                  break;\n                }\n              }\n            }\n            for (var i = 0; i < charAtlasCache.length; i++) {\n              var entry = charAtlasCache[i];\n              if (configEquals(entry.config, newConfig)) {\n                entry.ownedBy.push(terminal);\n                return entry.bitmap;\n              }\n            }\n            var newEntry = {\n              bitmap: generator.generate(\n                scaledCharWidth,\n                scaledCharHeight,\n                terminal.options.fontSize,\n                terminal.options.fontFamily,\n                colors.background,\n                colors.foreground,\n                colors.ansi,\n              ),\n              config: newConfig,\n              ownedBy: [terminal],\n            };\n            charAtlasCache.push(newEntry);\n            return newEntry.bitmap;\n          }\n          exports.acquireCharAtlas = acquireCharAtlas;\n          function generateConfig(\n            scaledCharWidth,\n            scaledCharHeight,\n            terminal,\n            colors,\n          ) {\n            var clonedColors = {\n              foreground: colors.foreground,\n              background: colors.background,\n              cursor: null,\n              cursorAccent: null,\n              selection: null,\n              ansi: colors.ansi.slice(0, 16),\n            };\n            return {\n              scaledCharWidth: scaledCharWidth,\n              scaledCharHeight: scaledCharHeight,\n              fontFamily: terminal.options.fontFamily,\n              fontSize: terminal.options.fontSize,\n              colors: clonedColors,\n            };\n          }\n          function configEquals(a, b) {\n            for (var i = 0; i < a.colors.ansi.length; i++) {\n              if (a.colors.ansi[i] !== b.colors.ansi[i]) {\n                return false;\n              }\n            }\n            return (\n              a.fontFamily === b.fontFamily &&\n              a.fontSize === b.fontSize &&\n              a.scaledCharWidth === b.scaledCharWidth &&\n              a.scaledCharHeight === b.scaledCharHeight &&\n              a.colors.foreground === b.colors.foreground &&\n              a.colors.background === b.colors.background\n            );\n          }\n          var generator;\n          function initialize(document) {\n            if (!generator) {\n              generator = new CharAtlasGenerator(document);\n            }\n          }\n          exports.initialize = initialize;\n          var CharAtlasGenerator = (function () {\n            function CharAtlasGenerator(_document) {\n              this._document = _document;\n              this._canvas = this._document.createElement(\"canvas\");\n              this._ctx = this._canvas.getContext(\"2d\", { alpha: false });\n              this._ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n            }\n            CharAtlasGenerator.prototype.generate = function (\n              scaledCharWidth,\n              scaledCharHeight,\n              fontSize,\n              fontFamily,\n              background,\n              foreground,\n              ansiColors,\n            ) {\n              var cellWidth = scaledCharWidth + exports.CHAR_ATLAS_CELL_SPACING;\n              var cellHeight =\n                scaledCharHeight + exports.CHAR_ATLAS_CELL_SPACING;\n              this._canvas.width = 255 * cellWidth;\n              this._canvas.height = (2 + 16) * cellHeight;\n              this._ctx.fillStyle = background;\n              this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n              this._ctx.save();\n              this._ctx.fillStyle = foreground;\n              this._ctx.font =\n                fontSize * window.devicePixelRatio + \"px \" + fontFamily;\n              this._ctx.textBaseline = \"top\";\n              for (var i = 0; i < 256; i++) {\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.rect(i * cellWidth, 0, cellWidth, cellHeight);\n                this._ctx.clip();\n                this._ctx.fillText(String.fromCharCode(i), i * cellWidth, 0);\n                this._ctx.restore();\n              }\n              this._ctx.save();\n              this._ctx.font = \"bold \" + this._ctx.font;\n              for (var i = 0; i < 256; i++) {\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.rect(\n                  i * cellWidth,\n                  cellHeight,\n                  cellWidth,\n                  cellHeight,\n                );\n                this._ctx.clip();\n                this._ctx.fillText(\n                  String.fromCharCode(i),\n                  i * cellWidth,\n                  cellHeight,\n                );\n                this._ctx.restore();\n              }\n              this._ctx.restore();\n              this._ctx.font =\n                fontSize * window.devicePixelRatio + \"px \" + fontFamily;\n              for (var colorIndex = 0; colorIndex < 16; colorIndex++) {\n                if (colorIndex === 8) {\n                  this._ctx.font = \"bold \" + this._ctx.font;\n                }\n                var y = (colorIndex + 2) * cellHeight;\n                for (var i = 0; i < 256; i++) {\n                  this._ctx.save();\n                  this._ctx.beginPath();\n                  this._ctx.rect(i * cellWidth, y, cellWidth, cellHeight);\n                  this._ctx.clip();\n                  this._ctx.fillStyle = ansiColors[colorIndex];\n                  this._ctx.fillText(String.fromCharCode(i), i * cellWidth, y);\n                  this._ctx.restore();\n                }\n              }\n              this._ctx.restore();\n              if (!(\"createImageBitmap\" in window) || Browser_1.isFirefox) {\n                var result = this._canvas;\n                this._canvas = this._document.createElement(\"canvas\");\n                this._ctx = this._canvas.getContext(\"2d\");\n                this._ctx.scale(\n                  window.devicePixelRatio,\n                  window.devicePixelRatio,\n                );\n                return result;\n              }\n              var charAtlasImageData = this._ctx.getImageData(\n                0,\n                0,\n                this._canvas.width,\n                this._canvas.height,\n              );\n              var r = parseInt(background.substr(1, 2), 16);\n              var g = parseInt(background.substr(3, 2), 16);\n              var b = parseInt(background.substr(5, 2), 16);\n              this._clearColor(charAtlasImageData, r, g, b);\n              var promise = window.createImageBitmap(charAtlasImageData);\n              this._ctx.clearRect(\n                0,\n                0,\n                this._canvas.width,\n                this._canvas.height,\n              );\n              return promise;\n            };\n            CharAtlasGenerator.prototype._clearColor = function (\n              imageData,\n              r,\n              g,\n              b,\n            ) {\n              for (\n                var offset = 0;\n                offset < imageData.data.length;\n                offset += 4\n              ) {\n                if (\n                  imageData.data[offset] === r &&\n                  imageData.data[offset + 1] === g &&\n                  imageData.data[offset + 2] === b\n                ) {\n                  imageData.data[offset + 3] = 0;\n                }\n              }\n            };\n            return CharAtlasGenerator;\n          })();\n        },\n        { \"../utils/Browser\": 28 },\n      ],\n      20: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var DEFAULT_FOREGROUND = \"#434343\";\n          var DEFAULT_BACKGROUND = \"#dedede\";\n          var DEFAULT_CURSOR = \"#434343\";\n          var DEFAULT_CURSOR_ACCENT = \"#000000\";\n          var DEFAULT_SELECTION = \"rgba(12, 12, 12, 0.3)\";\n          exports.DEFAULT_ANSI_COLORS = [\n            \"#000000\",\n            \"#aa3731\",\n            \"#448c27\",\n            \"#cb9000\",\n            \"#325cc0\",\n            \"#7a3e9d\",\n            \"#0083b2\",\n            \"#aaaaaa\",\n            \"#777777\",\n            \"#f05050\",\n            \"#60cb00\",\n            \"#ffbc5d\",\n            \"#007acc\",\n            \"#e64ce6\",\n            \"#00aacb\",\n            \"#ffffff\",\n          ];\n          function generate256Colors(first16Colors) {\n            var colors = first16Colors.slice();\n            var v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n            for (var i = 0; i < 216; i++) {\n              var r = toPaddedHex(v[(i / 36) % 6 | 0]);\n              var g = toPaddedHex(v[(i / 6) % 6 | 0]);\n              var b = toPaddedHex(v[i % 6]);\n              colors.push(\"#\" + r + g + b);\n            }\n            for (var i = 0; i < 24; i++) {\n              var c = toPaddedHex(8 + i * 10);\n              colors.push(\"#\" + c + c + c);\n            }\n            return colors;\n          }\n          function toPaddedHex(c) {\n            var s = c.toString(16);\n            return s.length < 2 ? \"0\" + s : s;\n          }\n          var ColorManager = (function () {\n            function ColorManager() {\n              this.colors = {\n                foreground: DEFAULT_FOREGROUND,\n                background: DEFAULT_BACKGROUND,\n                cursor: DEFAULT_CURSOR,\n                cursorAccent: DEFAULT_CURSOR_ACCENT,\n                selection: DEFAULT_SELECTION,\n                ansi: generate256Colors(exports.DEFAULT_ANSI_COLORS),\n              };\n            }\n            ColorManager.prototype.setTheme = function (theme) {\n              this.colors.foreground = theme.foreground || DEFAULT_FOREGROUND;\n              this.colors.background = this._validateColor(\n                theme.background,\n                DEFAULT_BACKGROUND,\n              );\n              this.colors.cursor = theme.cursor || DEFAULT_CURSOR;\n              this.colors.cursorAccent =\n                theme.cursorAccent || DEFAULT_CURSOR_ACCENT;\n              this.colors.selection = theme.selection || DEFAULT_SELECTION;\n              this.colors.ansi[0] =\n                theme.black || exports.DEFAULT_ANSI_COLORS[0];\n              this.colors.ansi[1] = theme.red || exports.DEFAULT_ANSI_COLORS[1];\n              this.colors.ansi[2] =\n                theme.green || exports.DEFAULT_ANSI_COLORS[2];\n              this.colors.ansi[3] =\n                theme.yellow || exports.DEFAULT_ANSI_COLORS[3];\n              this.colors.ansi[4] =\n                theme.blue || exports.DEFAULT_ANSI_COLORS[4];\n              this.colors.ansi[5] =\n                theme.magenta || exports.DEFAULT_ANSI_COLORS[5];\n              this.colors.ansi[6] =\n                theme.cyan || exports.DEFAULT_ANSI_COLORS[6];\n              this.colors.ansi[7] =\n                theme.white || exports.DEFAULT_ANSI_COLORS[7];\n              this.colors.ansi[8] =\n                theme.brightBlack || exports.DEFAULT_ANSI_COLORS[8];\n              this.colors.ansi[9] =\n                theme.brightRed || exports.DEFAULT_ANSI_COLORS[9];\n              this.colors.ansi[10] =\n                theme.brightGreen || exports.DEFAULT_ANSI_COLORS[10];\n              this.colors.ansi[11] =\n                theme.brightYellow || exports.DEFAULT_ANSI_COLORS[11];\n              this.colors.ansi[12] =\n                theme.brightBlue || exports.DEFAULT_ANSI_COLORS[12];\n              this.colors.ansi[13] =\n                theme.brightMagenta || exports.DEFAULT_ANSI_COLORS[13];\n              this.colors.ansi[14] =\n                theme.brightCyan || exports.DEFAULT_ANSI_COLORS[14];\n              this.colors.ansi[15] =\n                theme.brightWhite || exports.DEFAULT_ANSI_COLORS[15];\n            };\n            ColorManager.prototype._validateColor = function (color, fallback) {\n              if (!color) {\n                return fallback;\n              }\n              if (color.length === 7 && color.charAt(0) === \"#\") {\n                return color;\n              }\n              if (color.length === 4 && color.charAt(0) === \"#\") {\n                var r = color.charAt(1);\n                var g = color.charAt(2);\n                var b = color.charAt(3);\n                return \"#\" + r + r + g + g + b + b;\n              }\n              return fallback;\n            };\n            return ColorManager;\n          })();\n          exports.ColorManager = ColorManager;\n        },\n        {},\n      ],\n      21: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Buffer_1 = require(\"../Buffer\");\n          var BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\n          var BLINK_INTERVAL = 600;\n          var CursorRenderLayer = (function (_super) {\n            __extends(CursorRenderLayer, _super);\n            function CursorRenderLayer(container, zIndex, colors) {\n              var _this =\n                _super.call(this, container, \"cursor\", zIndex, true, colors) ||\n                this;\n              _this._state = {\n                x: null,\n                y: null,\n                isFocused: null,\n                style: null,\n                width: null,\n              };\n              _this._cursorRenderers = {\n                bar: _this._renderBarCursor.bind(_this),\n                block: _this._renderBlockCursor.bind(_this),\n                underline: _this._renderUnderlineCursor.bind(_this),\n              };\n              return _this;\n            }\n            CursorRenderLayer.prototype.resize = function (\n              terminal,\n              dim,\n              charSizeChanged,\n            ) {\n              _super.prototype.resize.call(\n                this,\n                terminal,\n                dim,\n                charSizeChanged,\n              );\n              this._state = {\n                x: null,\n                y: null,\n                isFocused: null,\n                style: null,\n                width: null,\n              };\n            };\n            CursorRenderLayer.prototype.reset = function (terminal) {\n              this._clearCursor();\n              if (this._cursorBlinkStateManager) {\n                this._cursorBlinkStateManager.dispose();\n                this._cursorBlinkStateManager = null;\n                this.onOptionsChanged(terminal);\n              }\n            };\n            CursorRenderLayer.prototype.onBlur = function (terminal) {\n              if (this._cursorBlinkStateManager) {\n                this._cursorBlinkStateManager.pause();\n              }\n              terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n            };\n            CursorRenderLayer.prototype.onFocus = function (terminal) {\n              if (this._cursorBlinkStateManager) {\n                this._cursorBlinkStateManager.resume(terminal);\n              } else {\n                terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n              }\n            };\n            CursorRenderLayer.prototype.onOptionsChanged = function (terminal) {\n              var _this = this;\n              if (terminal.options.cursorBlink) {\n                if (!this._cursorBlinkStateManager) {\n                  this._cursorBlinkStateManager = new CursorBlinkStateManager(\n                    terminal,\n                    function () {\n                      _this._render(terminal, true);\n                    },\n                  );\n                }\n              } else {\n                if (this._cursorBlinkStateManager) {\n                  this._cursorBlinkStateManager.dispose();\n                  this._cursorBlinkStateManager = null;\n                }\n                terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n              }\n            };\n            CursorRenderLayer.prototype.onCursorMove = function (terminal) {\n              if (this._cursorBlinkStateManager) {\n                this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n              }\n            };\n            CursorRenderLayer.prototype.onGridChanged = function (\n              terminal,\n              startRow,\n              endRow,\n            ) {\n              if (\n                !this._cursorBlinkStateManager ||\n                this._cursorBlinkStateManager.isPaused\n              ) {\n                this._render(terminal, false);\n              }\n            };\n            CursorRenderLayer.prototype._render = function (\n              terminal,\n              triggeredByAnimationFrame,\n            ) {\n              if (!terminal.cursorState || terminal.cursorHidden) {\n                this._clearCursor();\n                return;\n              }\n              var cursorY = terminal.buffer.ybase + terminal.buffer.y;\n              var viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n              if (\n                viewportRelativeCursorY < 0 ||\n                viewportRelativeCursorY >= terminal.rows\n              ) {\n                this._clearCursor();\n                return;\n              }\n              var charData =\n                terminal.buffer.lines.get(cursorY)[terminal.buffer.x];\n              if (!charData) {\n                return;\n              }\n              if (!terminal.isFocused) {\n                this._clearCursor();\n                this._ctx.save();\n                this._ctx.fillStyle = this._colors.cursor;\n                this._renderBlurCursor(\n                  terminal,\n                  terminal.buffer.x,\n                  viewportRelativeCursorY,\n                  charData,\n                );\n                this._ctx.restore();\n                this._state.x = terminal.buffer.x;\n                this._state.y = viewportRelativeCursorY;\n                this._state.isFocused = false;\n                this._state.style = terminal.options.cursorStyle;\n                this._state.width = charData[Buffer_1.CHAR_DATA_WIDTH_INDEX];\n                return;\n              }\n              if (\n                this._cursorBlinkStateManager &&\n                !this._cursorBlinkStateManager.isCursorVisible\n              ) {\n                this._clearCursor();\n                return;\n              }\n              if (this._state) {\n                if (\n                  this._state.x === terminal.buffer.x &&\n                  this._state.y === viewportRelativeCursorY &&\n                  this._state.isFocused === terminal.isFocused &&\n                  this._state.style === terminal.options.cursorStyle &&\n                  this._state.width === charData[Buffer_1.CHAR_DATA_WIDTH_INDEX]\n                ) {\n                  return;\n                }\n                this._clearCursor();\n              }\n              this._ctx.save();\n              this._cursorRenderers[terminal.options.cursorStyle || \"block\"](\n                terminal,\n                terminal.buffer.x,\n                viewportRelativeCursorY,\n                charData,\n              );\n              this._ctx.restore();\n              this._state.x = terminal.buffer.x;\n              this._state.y = viewportRelativeCursorY;\n              this._state.isFocused = false;\n              this._state.style = terminal.options.cursorStyle;\n              this._state.width = charData[Buffer_1.CHAR_DATA_WIDTH_INDEX];\n            };\n            CursorRenderLayer.prototype._clearCursor = function () {\n              if (this._state) {\n                this.clearCells(\n                  this._state.x,\n                  this._state.y,\n                  this._state.width,\n                  1,\n                );\n                this._state = {\n                  x: null,\n                  y: null,\n                  isFocused: null,\n                  style: null,\n                  width: null,\n                };\n              }\n            };\n            CursorRenderLayer.prototype._renderBarCursor = function (\n              terminal,\n              x,\n              y,\n              charData,\n            ) {\n              this._ctx.save();\n              this._ctx.fillStyle = this._colors.cursor;\n              this.fillLeftLineAtCell(x, y);\n              this._ctx.restore();\n            };\n            CursorRenderLayer.prototype._renderBlockCursor = function (\n              terminal,\n              x,\n              y,\n              charData,\n            ) {\n              this._ctx.save();\n              this._ctx.fillStyle = this._colors.cursor;\n              this.fillCells(x, y, charData[Buffer_1.CHAR_DATA_WIDTH_INDEX], 1);\n              this._ctx.fillStyle = this._colors.cursorAccent;\n              this.fillCharTrueColor(terminal, charData, x, y);\n              this._ctx.restore();\n            };\n            CursorRenderLayer.prototype._renderUnderlineCursor = function (\n              terminal,\n              x,\n              y,\n              charData,\n            ) {\n              this._ctx.save();\n              this._ctx.fillStyle = this._colors.cursor;\n              this.fillBottomLineAtCells(x, y);\n              this._ctx.restore();\n            };\n            CursorRenderLayer.prototype._renderBlurCursor = function (\n              terminal,\n              x,\n              y,\n              charData,\n            ) {\n              this._ctx.save();\n              this._ctx.strokeStyle = this._colors.cursor;\n              this.strokeRectAtCell(\n                x,\n                y,\n                charData[Buffer_1.CHAR_DATA_WIDTH_INDEX],\n                1,\n              );\n              this._ctx.restore();\n            };\n            return CursorRenderLayer;\n          })(BaseRenderLayer_1.BaseRenderLayer);\n          exports.CursorRenderLayer = CursorRenderLayer;\n          var CursorBlinkStateManager = (function () {\n            function CursorBlinkStateManager(terminal, renderCallback) {\n              this.renderCallback = renderCallback;\n              this.isCursorVisible = true;\n              if (terminal.isFocused) {\n                this._restartInterval();\n              }\n            }\n            Object.defineProperty(\n              CursorBlinkStateManager.prototype,\n              \"isPaused\",\n              {\n                get: function () {\n                  return !(this._blinkStartTimeout || this._blinkInterval);\n                },\n                enumerable: true,\n                configurable: true,\n              },\n            );\n            CursorBlinkStateManager.prototype.dispose = function () {\n              if (this._blinkInterval) {\n                window.clearInterval(this._blinkInterval);\n                this._blinkInterval = null;\n              }\n              if (this._blinkStartTimeout) {\n                window.clearTimeout(this._blinkStartTimeout);\n                this._blinkStartTimeout = null;\n              }\n              if (this._animationFrame) {\n                window.cancelAnimationFrame(this._animationFrame);\n                this._animationFrame = null;\n              }\n            };\n            CursorBlinkStateManager.prototype.restartBlinkAnimation = function (\n              terminal,\n            ) {\n              var _this = this;\n              if (this.isPaused) {\n                return;\n              }\n              this._animationTimeRestarted = Date.now();\n              this.isCursorVisible = true;\n              if (!this._animationFrame) {\n                this._animationFrame = window.requestAnimationFrame(\n                  function () {\n                    _this.renderCallback();\n                    _this._animationFrame = null;\n                  },\n                );\n              }\n            };\n            CursorBlinkStateManager.prototype._restartInterval = function (\n              timeToStart,\n            ) {\n              var _this = this;\n              if (timeToStart === void 0) {\n                timeToStart = BLINK_INTERVAL;\n              }\n              if (this._blinkInterval) {\n                window.clearInterval(this._blinkInterval);\n              }\n              this._blinkStartTimeout = setTimeout(function () {\n                if (_this._animationTimeRestarted) {\n                  var time =\n                    BLINK_INTERVAL -\n                    (Date.now() - _this._animationTimeRestarted);\n                  _this._animationTimeRestarted = null;\n                  if (time > 0) {\n                    _this._restartInterval(time);\n                    return;\n                  }\n                }\n                _this.isCursorVisible = false;\n                _this._animationFrame = window.requestAnimationFrame(\n                  function () {\n                    _this.renderCallback();\n                    _this._animationFrame = null;\n                  },\n                );\n                _this._blinkInterval = setInterval(function () {\n                  if (_this._animationTimeRestarted) {\n                    var time =\n                      BLINK_INTERVAL -\n                      (Date.now() - _this._animationTimeRestarted);\n                    _this._animationTimeRestarted = null;\n                    _this._restartInterval(time);\n                    return;\n                  }\n                  _this.isCursorVisible = !_this.isCursorVisible;\n                  _this._animationFrame = window.requestAnimationFrame(\n                    function () {\n                      _this.renderCallback();\n                      _this._animationFrame = null;\n                    },\n                  );\n                }, BLINK_INTERVAL);\n              }, timeToStart);\n            };\n            CursorBlinkStateManager.prototype.pause = function () {\n              this.isCursorVisible = true;\n              if (this._blinkInterval) {\n                window.clearInterval(this._blinkInterval);\n                this._blinkInterval = null;\n              }\n              if (this._blinkStartTimeout) {\n                window.clearTimeout(this._blinkStartTimeout);\n                this._blinkStartTimeout = null;\n              }\n              if (this._animationFrame) {\n                window.cancelAnimationFrame(this._animationFrame);\n                this._animationFrame = null;\n              }\n            };\n            CursorBlinkStateManager.prototype.resume = function (terminal) {\n              this._animationTimeRestarted = null;\n              this._restartInterval();\n              this.restartBlinkAnimation(terminal);\n            };\n            return CursorBlinkStateManager;\n          })();\n        },\n        { \"../Buffer\": 1, \"./BaseRenderLayer\": 18 },\n      ],\n      22: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var GridCache = (function () {\n            function GridCache() {\n              this.cache = [];\n            }\n            GridCache.prototype.resize = function (width, height) {\n              for (var x = 0; x < width; x++) {\n                if (this.cache.length <= x) {\n                  this.cache.push([]);\n                }\n                for (var y = this.cache[x].length; y < height; y++) {\n                  this.cache[x].push(null);\n                }\n                this.cache[x].length = height;\n              }\n              this.cache.length = width;\n            };\n            GridCache.prototype.clear = function () {\n              for (var x = 0; x < this.cache.length; x++) {\n                for (var y = 0; y < this.cache[x].length; y++) {\n                  this.cache[x][y] = null;\n                }\n              }\n            };\n            return GridCache;\n          })();\n          exports.GridCache = GridCache;\n        },\n        {},\n      ],\n      23: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\n          var Types_1 = require(\"../Types\");\n          var LinkRenderLayer = (function (_super) {\n            __extends(LinkRenderLayer, _super);\n            function LinkRenderLayer(container, zIndex, colors, terminal) {\n              var _this =\n                _super.call(this, container, \"link\", zIndex, true, colors) ||\n                this;\n              _this._state = null;\n              terminal.linkifier.on(\n                Types_1.LinkHoverEventTypes.HOVER,\n                function (e) {\n                  return _this._onLinkHover(e);\n                },\n              );\n              terminal.linkifier.on(\n                Types_1.LinkHoverEventTypes.LEAVE,\n                function (e) {\n                  return _this._onLinkLeave(e);\n                },\n              );\n              return _this;\n            }\n            LinkRenderLayer.prototype.resize = function (\n              terminal,\n              dim,\n              charSizeChanged,\n            ) {\n              _super.prototype.resize.call(\n                this,\n                terminal,\n                dim,\n                charSizeChanged,\n              );\n              this._state = null;\n            };\n            LinkRenderLayer.prototype.reset = function (terminal) {\n              this._clearCurrentLink();\n            };\n            LinkRenderLayer.prototype._clearCurrentLink = function () {\n              if (this._state) {\n                this.clearCells(\n                  this._state.x,\n                  this._state.y,\n                  this._state.length,\n                  1,\n                );\n                this._state = null;\n              }\n            };\n            LinkRenderLayer.prototype._onLinkHover = function (e) {\n              this._ctx.fillStyle = this._colors.foreground;\n              this.fillBottomLineAtCells(e.x, e.y, e.length);\n              this._state = e;\n            };\n            LinkRenderLayer.prototype._onLinkLeave = function (e) {\n              this._clearCurrentLink();\n            };\n            return LinkRenderLayer;\n          })(BaseRenderLayer_1.BaseRenderLayer);\n          exports.LinkRenderLayer = LinkRenderLayer;\n        },\n        { \"../Types\": 14, \"./BaseRenderLayer\": 18 },\n      ],\n      24: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var TextRenderLayer_1 = require(\"./TextRenderLayer\");\n          var SelectionRenderLayer_1 = require(\"./SelectionRenderLayer\");\n          var CursorRenderLayer_1 = require(\"./CursorRenderLayer\");\n          var ColorManager_1 = require(\"./ColorManager\");\n          var LinkRenderLayer_1 = require(\"./LinkRenderLayer\");\n          var EventEmitter_1 = require(\"../EventEmitter\");\n          var ScreenDprMonitor_1 = require(\"../utils/ScreenDprMonitor\");\n          var Renderer = (function (_super) {\n            __extends(Renderer, _super);\n            function Renderer(_terminal, theme) {\n              var _this = _super.call(this) || this;\n              _this._terminal = _terminal;\n              _this._refreshRowsQueue = [];\n              _this._refreshAnimationFrame = null;\n              _this._isPaused = false;\n              _this._needsFullRefresh = false;\n              _this.colorManager = new ColorManager_1.ColorManager();\n              if (theme) {\n                _this.colorManager.setTheme(theme);\n              }\n              _this._renderLayers = [\n                new TextRenderLayer_1.TextRenderLayer(\n                  _this._terminal.element,\n                  0,\n                  _this.colorManager.colors,\n                ),\n                new SelectionRenderLayer_1.SelectionRenderLayer(\n                  _this._terminal.element,\n                  1,\n                  _this.colorManager.colors,\n                ),\n                new LinkRenderLayer_1.LinkRenderLayer(\n                  _this._terminal.element,\n                  2,\n                  _this.colorManager.colors,\n                  _this._terminal,\n                ),\n                new CursorRenderLayer_1.CursorRenderLayer(\n                  _this._terminal.element,\n                  3,\n                  _this.colorManager.colors,\n                ),\n              ];\n              _this.dimensions = {\n                scaledCharWidth: null,\n                scaledCharHeight: null,\n                scaledCellWidth: null,\n                scaledCellHeight: null,\n                scaledCharLeft: null,\n                scaledCharTop: null,\n                scaledCanvasWidth: null,\n                scaledCanvasHeight: null,\n                canvasWidth: null,\n                canvasHeight: null,\n                actualCellWidth: null,\n                actualCellHeight: null,\n              };\n              _this._devicePixelRatio = window.devicePixelRatio;\n              _this._updateDimensions();\n              _this._screenDprMonitor =\n                new ScreenDprMonitor_1.ScreenDprMonitor();\n              _this._screenDprMonitor.setListener(function () {\n                return _this.onWindowResize(window.devicePixelRatio);\n              });\n              if (\"IntersectionObserver\" in window) {\n                var observer = new IntersectionObserver(\n                  function (e) {\n                    return _this.onIntersectionChange(e[0]);\n                  },\n                  { threshold: 0 },\n                );\n                observer.observe(_this._terminal.element);\n              }\n              return _this;\n            }\n            Renderer.prototype.onIntersectionChange = function (entry) {\n              this._isPaused = entry.intersectionRatio === 0;\n              if (!this._isPaused && this._needsFullRefresh) {\n                this._terminal.refresh(0, this._terminal.rows - 1);\n              }\n            };\n            Renderer.prototype.onWindowResize = function (devicePixelRatio) {\n              if (this._devicePixelRatio !== devicePixelRatio) {\n                this._devicePixelRatio = devicePixelRatio;\n                this.onResize(this._terminal.cols, this._terminal.rows, true);\n              }\n            };\n            Renderer.prototype.setTheme = function (theme) {\n              var _this = this;\n              this.colorManager.setTheme(theme);\n              this._renderLayers.forEach(function (l) {\n                l.onThemeChanged(_this._terminal, _this.colorManager.colors);\n                l.reset(_this._terminal);\n              });\n              if (this._isPaused) {\n                this._needsFullRefresh = true;\n              } else {\n                this._terminal.refresh(0, this._terminal.rows - 1);\n              }\n              return this.colorManager.colors;\n            };\n            Renderer.prototype.onResize = function (\n              cols,\n              rows,\n              didCharSizeChange,\n            ) {\n              var _this = this;\n              this._updateDimensions();\n              this._renderLayers.forEach(function (l) {\n                return l.resize(\n                  _this._terminal,\n                  _this.dimensions,\n                  didCharSizeChange,\n                );\n              });\n              if (this._isPaused) {\n                this._needsFullRefresh = true;\n              } else {\n                this._terminal.refresh(0, this._terminal.rows - 1);\n              }\n              this.emit(\"resize\", {\n                width: this.dimensions.canvasWidth,\n                height: this.dimensions.canvasHeight,\n              });\n            };\n            Renderer.prototype.onCharSizeChanged = function () {\n              this.onResize(this._terminal.cols, this._terminal.rows, true);\n            };\n            Renderer.prototype.onBlur = function () {\n              var _this = this;\n              this._runOperation(function (l) {\n                return l.onBlur(_this._terminal);\n              });\n            };\n            Renderer.prototype.onFocus = function () {\n              var _this = this;\n              this._runOperation(function (l) {\n                return l.onFocus(_this._terminal);\n              });\n            };\n            Renderer.prototype.onSelectionChanged = function (start, end) {\n              var _this = this;\n              this._runOperation(function (l) {\n                return l.onSelectionChanged(_this._terminal, start, end);\n              });\n            };\n            Renderer.prototype.onCursorMove = function () {\n              var _this = this;\n              this._runOperation(function (l) {\n                return l.onCursorMove(_this._terminal);\n              });\n            };\n            Renderer.prototype.onOptionsChanged = function () {\n              var _this = this;\n              this._runOperation(function (l) {\n                return l.onOptionsChanged(_this._terminal);\n              });\n            };\n            Renderer.prototype.clear = function () {\n              var _this = this;\n              this._runOperation(function (l) {\n                return l.reset(_this._terminal);\n              });\n            };\n            Renderer.prototype._runOperation = function (operation) {\n              if (this._isPaused) {\n                this._needsFullRefresh = true;\n              } else {\n                this._renderLayers.forEach(function (l) {\n                  return operation(l);\n                });\n              }\n            };\n            Renderer.prototype.queueRefresh = function (start, end) {\n              if (this._isPaused) {\n                this._needsFullRefresh = true;\n                return;\n              }\n              this._refreshRowsQueue.push({ start: start, end: end });\n              if (!this._refreshAnimationFrame) {\n                this._refreshAnimationFrame = window.requestAnimationFrame(\n                  this._refreshLoop.bind(this),\n                );\n              }\n            };\n            Renderer.prototype._refreshLoop = function () {\n              var _this = this;\n              var start;\n              var end;\n              if (this._refreshRowsQueue.length > 4) {\n                start = 0;\n                end = this._terminal.rows - 1;\n              } else {\n                start = this._refreshRowsQueue[0].start;\n                end = this._refreshRowsQueue[0].end;\n                for (var i = 1; i < this._refreshRowsQueue.length; i++) {\n                  if (this._refreshRowsQueue[i].start < start) {\n                    start = this._refreshRowsQueue[i].start;\n                  }\n                  if (this._refreshRowsQueue[i].end > end) {\n                    end = this._refreshRowsQueue[i].end;\n                  }\n                }\n              }\n              this._refreshRowsQueue = [];\n              this._refreshAnimationFrame = null;\n              start = Math.max(start, 0);\n              end = Math.min(end, this._terminal.rows - 1);\n              this._renderLayers.forEach(function (l) {\n                return l.onGridChanged(_this._terminal, start, end);\n              });\n              this._terminal.emit(\"refresh\", { start: start, end: end });\n            };\n            Renderer.prototype._updateDimensions = function () {\n              if (\n                !this._terminal.charMeasure.width ||\n                !this._terminal.charMeasure.height\n              ) {\n                return;\n              }\n              this.dimensions.scaledCharWidth = Math.floor(\n                this._terminal.charMeasure.width * window.devicePixelRatio,\n              );\n              this.dimensions.scaledCharHeight = Math.ceil(\n                this._terminal.charMeasure.height * window.devicePixelRatio,\n              );\n              this.dimensions.scaledCellHeight = Math.floor(\n                this.dimensions.scaledCharHeight *\n                  this._terminal.options.lineHeight,\n              );\n              this.dimensions.scaledCharTop =\n                this._terminal.options.lineHeight === 1\n                  ? 0\n                  : Math.round(\n                      (this.dimensions.scaledCellHeight -\n                        this.dimensions.scaledCharHeight) /\n                        2,\n                    );\n              this.dimensions.scaledCellWidth =\n                this.dimensions.scaledCharWidth +\n                Math.round(this._terminal.options.letterSpacing);\n              this.dimensions.scaledCharLeft = Math.floor(\n                this._terminal.options.letterSpacing / 2,\n              );\n              this.dimensions.scaledCanvasHeight =\n                this._terminal.rows * this.dimensions.scaledCellHeight;\n              this.dimensions.scaledCanvasWidth =\n                this._terminal.cols * this.dimensions.scaledCellWidth;\n              this.dimensions.canvasHeight = Math.round(\n                this.dimensions.scaledCanvasHeight / window.devicePixelRatio,\n              );\n              this.dimensions.canvasWidth = Math.round(\n                this.dimensions.scaledCanvasWidth / window.devicePixelRatio,\n              );\n              this.dimensions.actualCellHeight =\n                this.dimensions.canvasHeight / this._terminal.rows;\n              this.dimensions.actualCellWidth =\n                this.dimensions.canvasWidth / this._terminal.cols;\n            };\n            return Renderer;\n          })(EventEmitter_1.EventEmitter);\n          exports.Renderer = Renderer;\n        },\n        {\n          \"../EventEmitter\": 7,\n          \"../utils/ScreenDprMonitor\": 33,\n          \"./ColorManager\": 20,\n          \"./CursorRenderLayer\": 21,\n          \"./LinkRenderLayer\": 23,\n          \"./SelectionRenderLayer\": 25,\n          \"./TextRenderLayer\": 26,\n        },\n      ],\n      25: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\n          var SelectionRenderLayer = (function (_super) {\n            __extends(SelectionRenderLayer, _super);\n            function SelectionRenderLayer(container, zIndex, colors) {\n              var _this =\n                _super.call(\n                  this,\n                  container,\n                  \"selection\",\n                  zIndex,\n                  true,\n                  colors,\n                ) || this;\n              _this._state = {\n                start: null,\n                end: null,\n              };\n              return _this;\n            }\n            SelectionRenderLayer.prototype.resize = function (\n              terminal,\n              dim,\n              charSizeChanged,\n            ) {\n              _super.prototype.resize.call(\n                this,\n                terminal,\n                dim,\n                charSizeChanged,\n              );\n              this._state = {\n                start: null,\n                end: null,\n              };\n            };\n            SelectionRenderLayer.prototype.reset = function (terminal) {\n              if (this._state.start && this._state.end) {\n                this._state = {\n                  start: null,\n                  end: null,\n                };\n                this.clearAll();\n              }\n            };\n            SelectionRenderLayer.prototype.onSelectionChanged = function (\n              terminal,\n              start,\n              end,\n            ) {\n              if (this._state.start === start || this._state.end === end) {\n                return;\n              }\n              this.clearAll();\n              if (!start || !end) {\n                return;\n              }\n              var viewportStartRow = start[1] - terminal.buffer.ydisp;\n              var viewportEndRow = end[1] - terminal.buffer.ydisp;\n              var viewportCappedStartRow = Math.max(viewportStartRow, 0);\n              var viewportCappedEndRow = Math.min(\n                viewportEndRow,\n                terminal.rows - 1,\n              );\n              if (\n                viewportCappedStartRow >= terminal.rows ||\n                viewportCappedEndRow < 0\n              ) {\n                return;\n              }\n              var startCol =\n                viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n              var startRowEndCol =\n                viewportCappedStartRow === viewportCappedEndRow\n                  ? end[0]\n                  : terminal.cols;\n              this._ctx.fillStyle = this._colors.selection;\n              this.fillCells(\n                startCol,\n                viewportCappedStartRow,\n                startRowEndCol - startCol,\n                1,\n              );\n              var middleRowsCount = Math.max(\n                viewportCappedEndRow - viewportCappedStartRow - 1,\n                0,\n              );\n              this.fillCells(\n                0,\n                viewportCappedStartRow + 1,\n                terminal.cols,\n                middleRowsCount,\n              );\n              if (viewportCappedStartRow !== viewportCappedEndRow) {\n                var endCol =\n                  viewportEndRow === viewportCappedEndRow\n                    ? end[0]\n                    : terminal.cols;\n                this.fillCells(0, viewportCappedEndRow, endCol, 1);\n              }\n              this._state.start = [start[0], start[1]];\n              this._state.end = [end[0], end[1]];\n            };\n            return SelectionRenderLayer;\n          })(BaseRenderLayer_1.BaseRenderLayer);\n          exports.SelectionRenderLayer = SelectionRenderLayer;\n        },\n        { \"./BaseRenderLayer\": 18 },\n      ],\n      26: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Buffer_1 = require(\"../Buffer\");\n          var Types_1 = require(\"./Types\");\n          var GridCache_1 = require(\"./GridCache\");\n          var BaseRenderLayer_1 = require(\"./BaseRenderLayer\");\n          var OVERLAP_OWNED_CHAR_DATA = [null, \"\", 0, -1];\n          var TextRenderLayer = (function (_super) {\n            __extends(TextRenderLayer, _super);\n            function TextRenderLayer(container, zIndex, colors) {\n              var _this =\n                _super.call(this, container, \"text\", zIndex, false, colors) ||\n                this;\n              _this._characterOverlapCache = {};\n              _this._state = new GridCache_1.GridCache();\n              return _this;\n            }\n            TextRenderLayer.prototype.resize = function (\n              terminal,\n              dim,\n              charSizeChanged,\n            ) {\n              _super.prototype.resize.call(\n                this,\n                terminal,\n                dim,\n                charSizeChanged,\n              );\n              var terminalFont =\n                terminal.options.fontSize * window.devicePixelRatio +\n                \"px \" +\n                terminal.options.fontFamily;\n              if (\n                this._characterWidth !== dim.scaledCharWidth ||\n                this._characterFont !== terminalFont\n              ) {\n                this._characterWidth = dim.scaledCharWidth;\n                this._characterFont = terminalFont;\n                this._characterOverlapCache = {};\n              }\n              this._state.clear();\n              this._state.resize(terminal.cols, terminal.rows);\n            };\n            TextRenderLayer.prototype.reset = function (terminal) {\n              this._state.clear();\n              this.clearAll();\n            };\n            TextRenderLayer.prototype.onGridChanged = function (\n              terminal,\n              startRow,\n              endRow,\n            ) {\n              if (this._state.cache.length === 0) {\n                return;\n              }\n              for (var y = startRow; y <= endRow; y++) {\n                var row = y + terminal.buffer.ydisp;\n                var line = terminal.buffer.lines.get(row);\n                this.clearCells(0, y, terminal.cols, 1);\n                for (var x = 0; x < terminal.cols; x++) {\n                  var charData = line[x];\n                  var code = charData[Buffer_1.CHAR_DATA_CODE_INDEX];\n                  var char = charData[Buffer_1.CHAR_DATA_CHAR_INDEX];\n                  var attr = charData[Buffer_1.CHAR_DATA_ATTR_INDEX];\n                  var width = charData[Buffer_1.CHAR_DATA_WIDTH_INDEX];\n                  if (width === 0) {\n                    continue;\n                  }\n                  if (code === 32) {\n                    if (x > 0) {\n                      var previousChar = line[x - 1];\n                      if (this._isOverlapping(previousChar)) {\n                        continue;\n                      }\n                    }\n                  }\n                  var flags = attr >> 18;\n                  var bg = attr & 0x1ff;\n                  var isDefaultBackground = bg >= 256;\n                  var isInvisible = flags & Types_1.FLAGS.INVISIBLE;\n                  var isInverted = flags & Types_1.FLAGS.INVERSE;\n                  if (\n                    !code ||\n                    (code === 32 && isDefaultBackground && !isInverted) ||\n                    isInvisible\n                  ) {\n                    continue;\n                  }\n                  if (width !== 0 && this._isOverlapping(charData)) {\n                    if (\n                      x < line.length - 1 &&\n                      line[x + 1][Buffer_1.CHAR_DATA_CODE_INDEX] === 32\n                    ) {\n                      width = 2;\n                    }\n                  }\n                  var fg = (attr >> 9) & 0x1ff;\n                  if (isInverted) {\n                    var temp = bg;\n                    bg = fg;\n                    fg = temp;\n                    if (fg === 256) {\n                      fg = BaseRenderLayer_1.INVERTED_DEFAULT_COLOR;\n                    }\n                    if (bg === 257) {\n                      bg = BaseRenderLayer_1.INVERTED_DEFAULT_COLOR;\n                    }\n                  }\n                  if (width === 2) {\n                  }\n                  if (bg < 256) {\n                    this._ctx.save();\n                    this._ctx.fillStyle =\n                      bg === BaseRenderLayer_1.INVERTED_DEFAULT_COLOR\n                        ? this._colors.foreground\n                        : this._colors.ansi[bg];\n                    this.fillCells(x, y, width, 1);\n                    this._ctx.restore();\n                  }\n                  this._ctx.save();\n                  if (flags & Types_1.FLAGS.BOLD) {\n                    this._ctx.font = \"bold \" + this._ctx.font;\n                    if (fg < 8) {\n                      fg += 8;\n                    }\n                  }\n                  if (flags & Types_1.FLAGS.UNDERLINE) {\n                    if (fg === BaseRenderLayer_1.INVERTED_DEFAULT_COLOR) {\n                      this._ctx.fillStyle = this._colors.background;\n                    } else if (fg < 256) {\n                      this._ctx.fillStyle = this._colors.ansi[fg];\n                    } else {\n                      this._ctx.fillStyle = this._colors.foreground;\n                    }\n                    this.fillBottomLineAtCells(x, y);\n                  }\n                  this.drawChar(\n                    terminal,\n                    char,\n                    code,\n                    width,\n                    x,\n                    y,\n                    fg,\n                    bg,\n                    !!(flags & Types_1.FLAGS.BOLD),\n                    !!(flags & Types_1.FLAGS.DIM),\n                  );\n                  this._ctx.restore();\n                }\n              }\n            };\n            TextRenderLayer.prototype._isOverlapping = function (charData) {\n              if (charData[Buffer_1.CHAR_DATA_WIDTH_INDEX] !== 1) {\n                return false;\n              }\n              var code = charData[Buffer_1.CHAR_DATA_CODE_INDEX];\n              if (code < 256) {\n                return false;\n              }\n              var char = charData[Buffer_1.CHAR_DATA_CHAR_INDEX];\n              if (this._characterOverlapCache.hasOwnProperty(char)) {\n                return this._characterOverlapCache[char];\n              }\n              this._ctx.save();\n              this._ctx.font = this._characterFont;\n              var overlaps =\n                Math.floor(this._ctx.measureText(char).width) >\n                this._characterWidth;\n              this._ctx.restore();\n              this._characterOverlapCache[char] = overlaps;\n              return overlaps;\n            };\n            TextRenderLayer.prototype._clearChar = function (x, y) {\n              var colsToClear = 1;\n              var state = this._state.cache[x][y];\n              if (state && state[Buffer_1.CHAR_DATA_WIDTH_INDEX] === 2) {\n                colsToClear = 2;\n              }\n              this.clearCells(x, y, colsToClear, 1);\n            };\n            return TextRenderLayer;\n          })(BaseRenderLayer_1.BaseRenderLayer);\n          exports.TextRenderLayer = TextRenderLayer;\n        },\n        {\n          \"../Buffer\": 1,\n          \"./BaseRenderLayer\": 18,\n          \"./GridCache\": 22,\n          \"./Types\": 27,\n        },\n      ],\n      27: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var FLAGS;\n          (function (FLAGS) {\n            FLAGS[(FLAGS[\"BOLD\"] = 1)] = \"BOLD\";\n            FLAGS[(FLAGS[\"UNDERLINE\"] = 2)] = \"UNDERLINE\";\n            FLAGS[(FLAGS[\"BLINK\"] = 4)] = \"BLINK\";\n            FLAGS[(FLAGS[\"INVERSE\"] = 8)] = \"INVERSE\";\n            FLAGS[(FLAGS[\"INVISIBLE\"] = 16)] = \"INVISIBLE\";\n            FLAGS[(FLAGS[\"DIM\"] = 32)] = \"DIM\";\n          })((FLAGS = exports.FLAGS || (exports.FLAGS = {})));\n        },\n        {},\n      ],\n      28: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Generic_1 = require(\"./Generic\");\n          var isNode = typeof navigator === \"undefined\" ? true : false;\n          var userAgent = isNode ? \"node\" : navigator.userAgent;\n          var platform = isNode ? \"node\" : navigator.platform;\n          exports.isFirefox = !!~userAgent.indexOf(\"Firefox\");\n          exports.isMSIE =\n            !!~userAgent.indexOf(\"MSIE\") || !!~userAgent.indexOf(\"Trident\");\n          exports.isMac = Generic_1.contains(\n            [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"],\n            platform,\n          );\n          exports.isIpad = platform === \"iPad\";\n          exports.isIphone = platform === \"iPhone\";\n          exports.isMSWindows = Generic_1.contains(\n            [\"Windows\", \"Win16\", \"Win32\", \"WinCE\"],\n            platform,\n          );\n          exports.isLinux = platform.indexOf(\"Linux\") >= 0;\n        },\n        { \"./Generic\": 31 },\n      ],\n      29: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var EventEmitter_1 = require(\"../EventEmitter\");\n          var CharMeasure = (function (_super) {\n            __extends(CharMeasure, _super);\n            function CharMeasure(document, parentElement) {\n              var _this = _super.call(this) || this;\n              _this._document = document;\n              _this._parentElement = parentElement;\n              _this._measureElement = _this._document.createElement(\"span\");\n              _this._measureElement.style.position = \"absolute\";\n              _this._measureElement.style.top = \"0\";\n              _this._measureElement.style.left = \"-9999em\";\n              _this._measureElement.style.lineHeight = \"normal\";\n              _this._measureElement.textContent = \"W\";\n              _this._measureElement.setAttribute(\"aria-hidden\", \"true\");\n              _this._parentElement.appendChild(_this._measureElement);\n              return _this;\n            }\n            Object.defineProperty(CharMeasure.prototype, \"width\", {\n              get: function () {\n                return this._width;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(CharMeasure.prototype, \"height\", {\n              get: function () {\n                return this._height;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            CharMeasure.prototype.measure = function (options) {\n              this._measureElement.style.fontFamily = options.fontFamily;\n              this._measureElement.style.fontSize = options.fontSize + \"px\";\n              var geometry = this._measureElement.getBoundingClientRect();\n              if (geometry.width === 0 || geometry.height === 0) {\n                return;\n              }\n              if (\n                this._width !== geometry.width ||\n                this._height !== geometry.height\n              ) {\n                this._width = geometry.width;\n                this._height = Math.ceil(geometry.height);\n                this.emit(\"charsizechanged\");\n              }\n            };\n            return CharMeasure;\n          })(EventEmitter_1.EventEmitter);\n          exports.CharMeasure = CharMeasure;\n        },\n        { \"../EventEmitter\": 7 },\n      ],\n      30: [\n        function (require, module, exports) {\n          \"use strict\";\n          var __extends =\n            (this && this.__extends) ||\n            (function () {\n              var extendStatics =\n                Object.setPrototypeOf ||\n                ({ __proto__: [] } instanceof Array &&\n                  function (d, b) {\n                    d.__proto__ = b;\n                  }) ||\n                function (d, b) {\n                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n              return function (d, b) {\n                extendStatics(d, b);\n                function __() {\n                  this.constructor = d;\n                }\n                d.prototype =\n                  b === null\n                    ? Object.create(b)\n                    : ((__.prototype = b.prototype), new __());\n              };\n            })();\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var EventEmitter_1 = require(\"../EventEmitter\");\n          var CircularList = (function (_super) {\n            __extends(CircularList, _super);\n            function CircularList(_maxLength) {\n              var _this = _super.call(this) || this;\n              _this._maxLength = _maxLength;\n              _this._array = new Array(_this._maxLength);\n              _this._startIndex = 0;\n              _this._length = 0;\n              return _this;\n            }\n            Object.defineProperty(CircularList.prototype, \"maxLength\", {\n              get: function () {\n                return this._maxLength;\n              },\n              set: function (newMaxLength) {\n                if (this._maxLength === newMaxLength) {\n                  return;\n                }\n                var newArray = new Array(newMaxLength);\n                for (var i = 0; i < Math.min(newMaxLength, this.length); i++) {\n                  newArray[i] = this._array[this._getCyclicIndex(i)];\n                }\n                this._array = newArray;\n                this._maxLength = newMaxLength;\n                this._startIndex = 0;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(CircularList.prototype, \"length\", {\n              get: function () {\n                return this._length;\n              },\n              set: function (newLength) {\n                if (newLength > this._length) {\n                  for (var i = this._length; i < newLength; i++) {\n                    this._array[i] = undefined;\n                  }\n                }\n                this._length = newLength;\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            Object.defineProperty(CircularList.prototype, \"forEach\", {\n              get: function () {\n                var _this = this;\n                return function (callbackfn) {\n                  var i = 0;\n                  var length = _this.length;\n                  for (var i_1 = 0; i_1 < length; i_1++) {\n                    callbackfn(_this.get(i_1), i_1);\n                  }\n                };\n              },\n              enumerable: true,\n              configurable: true,\n            });\n            CircularList.prototype.get = function (index) {\n              return this._array[this._getCyclicIndex(index)];\n            };\n            CircularList.prototype.set = function (index, value) {\n              this._array[this._getCyclicIndex(index)] = value;\n            };\n            CircularList.prototype.push = function (value) {\n              this._array[this._getCyclicIndex(this._length)] = value;\n              if (this._length === this._maxLength) {\n                this._startIndex++;\n                if (this._startIndex === this._maxLength) {\n                  this._startIndex = 0;\n                }\n                this.emit(\"trim\", 1);\n              } else {\n                this._length++;\n              }\n            };\n            CircularList.prototype.pop = function () {\n              return this._array[this._getCyclicIndex(this._length-- - 1)];\n            };\n            CircularList.prototype.splice = function (start, deleteCount) {\n              var items = [];\n              for (var _i = 2; _i < arguments.length; _i++) {\n                items[_i - 2] = arguments[_i];\n              }\n              if (deleteCount) {\n                for (var i = start; i < this._length - deleteCount; i++) {\n                  this._array[this._getCyclicIndex(i)] =\n                    this._array[this._getCyclicIndex(i + deleteCount)];\n                }\n                this._length -= deleteCount;\n              }\n              if (items && items.length) {\n                for (var i = this._length - 1; i >= start; i--) {\n                  this._array[this._getCyclicIndex(i + items.length)] =\n                    this._array[this._getCyclicIndex(i)];\n                }\n                for (var i = 0; i < items.length; i++) {\n                  this._array[this._getCyclicIndex(start + i)] = items[i];\n                }\n                if (this._length + items.length > this.maxLength) {\n                  var countToTrim =\n                    this._length + items.length - this.maxLength;\n                  this._startIndex += countToTrim;\n                  this._length = this.maxLength;\n                  this.emit(\"trim\", countToTrim);\n                } else {\n                  this._length += items.length;\n                }\n              }\n            };\n            CircularList.prototype.trimStart = function (count) {\n              if (count > this._length) {\n                count = this._length;\n              }\n              this._startIndex += count;\n              this._length -= count;\n              this.emit(\"trim\", count);\n            };\n            CircularList.prototype.shiftElements = function (\n              start,\n              count,\n              offset,\n            ) {\n              if (count <= 0) {\n                return;\n              }\n              if (start < 0 || start >= this._length) {\n                throw new Error(\"start argument out of range\");\n              }\n              if (start + offset < 0) {\n                throw new Error(\"Cannot shift elements in list beyond index 0\");\n              }\n              if (offset > 0) {\n                for (var i = count - 1; i >= 0; i--) {\n                  this.set(start + i + offset, this.get(start + i));\n                }\n                var expandListBy = start + count + offset - this._length;\n                if (expandListBy > 0) {\n                  this._length += expandListBy;\n                  while (this._length > this.maxLength) {\n                    this._length--;\n                    this._startIndex++;\n                    this.emit(\"trim\", 1);\n                  }\n                }\n              } else {\n                for (var i = 0; i < count; i++) {\n                  this.set(start + i + offset, this.get(start + i));\n                }\n              }\n            };\n            CircularList.prototype._getCyclicIndex = function (index) {\n              return (this._startIndex + index) % this.maxLength;\n            };\n            return CircularList;\n          })(EventEmitter_1.EventEmitter);\n          exports.CircularList = CircularList;\n        },\n        { \"../EventEmitter\": 7 },\n      ],\n      31: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          function contains(arr, el) {\n            return arr.indexOf(el) >= 0;\n          }\n          exports.contains = contains;\n        },\n        {},\n      ],\n      32: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var MouseHelper = (function () {\n            function MouseHelper(_renderer) {\n              this._renderer = _renderer;\n            }\n            MouseHelper.getCoordsRelativeToElement = function (event, element) {\n              if (event.pageX == null) {\n                return null;\n              }\n              var originalElement = element;\n              var x = event.pageX;\n              var y = event.pageY;\n              while (element) {\n                x -= element.offsetLeft;\n                y -= element.offsetTop;\n                element =\n                  \"offsetParent\" in element\n                    ? element.offsetParent\n                    : element.parentElement;\n              }\n              element = originalElement;\n              while (element && element !== element.ownerDocument.body) {\n                x += element.scrollLeft;\n                y += element.scrollTop;\n                element = element.parentElement;\n              }\n              return [x, y];\n            };\n            MouseHelper.prototype.getCoords = function (\n              event,\n              element,\n              charMeasure,\n              lineHeight,\n              colCount,\n              rowCount,\n              isSelection,\n            ) {\n              if (!charMeasure.width || !charMeasure.height) {\n                return null;\n              }\n              var coords = MouseHelper.getCoordsRelativeToElement(\n                event,\n                element,\n              );\n              if (!coords) {\n                return null;\n              }\n              coords[0] = Math.ceil(\n                (coords[0] +\n                  (isSelection\n                    ? this._renderer.dimensions.actualCellWidth / 2\n                    : 0)) /\n                  this._renderer.dimensions.actualCellWidth,\n              );\n              coords[1] = Math.ceil(\n                coords[1] / this._renderer.dimensions.actualCellHeight,\n              );\n              coords[0] = Math.min(\n                Math.max(coords[0], 1),\n                colCount + (isSelection ? 1 : 0),\n              );\n              coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n              return coords;\n            };\n            MouseHelper.prototype.getRawByteCoords = function (\n              event,\n              element,\n              charMeasure,\n              lineHeight,\n              colCount,\n              rowCount,\n            ) {\n              var coords = this.getCoords(\n                event,\n                element,\n                charMeasure,\n                lineHeight,\n                colCount,\n                rowCount,\n              );\n              var x = coords[0];\n              var y = coords[1];\n              x += 32;\n              y += 32;\n              return { x: x, y: y };\n            };\n            return MouseHelper;\n          })();\n          exports.MouseHelper = MouseHelper;\n        },\n        {},\n      ],\n      33: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var ScreenDprMonitor = (function () {\n            function ScreenDprMonitor() {}\n            ScreenDprMonitor.prototype.setListener = function (listener) {\n              var _this = this;\n              if (this._listener) {\n                this.clearListener();\n              }\n              this._listener = listener;\n              this._outerListener = function () {\n                _this._listener(\n                  window.devicePixelRatio,\n                  _this._currentDevicePixelRatio,\n                );\n                _this._updateDpr();\n              };\n              this._updateDpr();\n            };\n            ScreenDprMonitor.prototype._updateDpr = function () {\n              if (this._resolutionMediaMatchList) {\n                this._resolutionMediaMatchList.removeListener(\n                  this._outerListener,\n                );\n              }\n              this._currentDevicePixelRatio = window.devicePixelRatio;\n              this._resolutionMediaMatchList = window.matchMedia(\n                \"screen and (resolution: \" + window.devicePixelRatio + \"dppx)\",\n              );\n              this._resolutionMediaMatchList.addListener(this._outerListener);\n            };\n            ScreenDprMonitor.prototype.clearListener = function () {\n              if (!this._listener) {\n                return;\n              }\n              this._resolutionMediaMatchList.removeListener(\n                this._outerListener,\n              );\n              this._listener = null;\n              this._outerListener = null;\n            };\n            return ScreenDprMonitor;\n          })();\n          exports.ScreenDprMonitor = ScreenDprMonitor;\n        },\n        {},\n      ],\n      34: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          exports.BellSound =\n            \"data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==\";\n        },\n        {},\n      ],\n      35: [\n        function (require, module, exports) {\n          \"use strict\";\n          Object.defineProperty(exports, \"__esModule\", { value: true });\n          var Terminal_1 = require(\"./Terminal\");\n          module.exports = Terminal_1.Terminal;\n        },\n        { \"./Terminal\": 13 },\n      ],\n    },\n    {},\n    [35],\n  )(35);\n});\n//# sourceMappingURL=xterm.js.map\n\n\n//# sourceURL=webpack://xterm-client/./xterm.js/xterm.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./main.js");
/******/ 	
/******/ })()
;